import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as t,o as e,c as p,b as n,e as o,a as c,d as i}from"./app-CgPki5_t.js";const l={},u=i(`<h1 id="fastjson-导致-spring-boot-接入-prometheus-返回结果不正确" tabindex="-1"><a class="header-anchor" href="#fastjson-导致-spring-boot-接入-prometheus-返回结果不正确"><span>Fastjson 导致 Spring boot 接入 Prometheus 返回结果不正确</span></a></h1><h2 id="解决办法" tabindex="-1"><a class="header-anchor" href="#解决办法"><span>解决办法</span></a></h2><ul><li>添加 StringHttpMessageConverter 单独处理返回字符串类型，需要注意顺序排在 FastJsonHttpMessageConverter 之前</li><li>同时需要注意的一点，由于项目统一切片封装返回对象： <ul><li>返回 String 的接口也会封装多一层成对象，导致 StringHttpMessageConverter 处理的时候将对象转成 String 从而出现错误</li><li>指定 MediaType 针对 prometheus 所用限制处理</li></ul></li></ul><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token annotation punctuation">@EnableWebMvc</span>
<span class="token annotation punctuation">@Configuration</span>
<span class="token annotation punctuation">@ComponentScan</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyWebMvcConfigurer</span> <span class="token keyword">implements</span> <span class="token class-name">WebMvcConfigurer</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">configureMessageConverters</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">HttpMessageConverter</span><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> converters<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        converters<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token function">stringConverter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        converters<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token function">fastJsonHttpMessageConverters</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//无论白名单和黑名单，都不支持autoType</span>
        <span class="token class-name">ParserConfig</span><span class="token punctuation">.</span><span class="token function">getGlobalInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setSafeMode</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
    <span class="token doc-comment comment">/**
     * 修改默认的JSON实现为FastJson
     */</span>
    <span class="token annotation punctuation">@Bean</span>
    <span class="token keyword">public</span> <span class="token class-name">FastJsonHttpMessageConverter</span> <span class="token function">fastJsonHttpMessageConverters</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">FastJsonHttpMessageConverter</span> httpMessageConverter <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FastJsonHttpMessageConverter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        httpMessageConverter<span class="token punctuation">.</span><span class="token function">setFastJsonConfig</span><span class="token punctuation">(</span><span class="token function">getFastJsonConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        httpMessageConverter<span class="token punctuation">.</span><span class="token function">setDefaultCharset</span><span class="token punctuation">(</span><span class="token class-name">Charset</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span><span class="token string">&quot;UTF-8&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> httpMessageConverter<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token class-name">FastJsonConfig</span> <span class="token function">getFastJsonConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">FastJsonConfig</span> fastJsonConfig <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FastJsonConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        fastJsonConfig<span class="token punctuation">.</span><span class="token function">setDateFormat</span><span class="token punctuation">(</span><span class="token string">&quot;yyyy-MM-dd HH:mm:ss.SSS&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        fastJsonConfig<span class="token punctuation">.</span><span class="token function">setCharset</span><span class="token punctuation">(</span><span class="token class-name">Charset</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span><span class="token string">&quot;UTF-8&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        fastJsonConfig<span class="token punctuation">.</span><span class="token function">setSerializerFeatures</span><span class="token punctuation">(</span>
                <span class="token class-name">SerializerFeature<span class="token punctuation">.</span>WriteMapNullValue</span><span class="token punctuation">,</span>
                <span class="token class-name">SerializerFeature<span class="token punctuation">.</span>QuoteFieldNames</span><span class="token punctuation">,</span>
                <span class="token class-name">SerializerFeature<span class="token punctuation">.</span>WriteNullListAsEmpty</span><span class="token punctuation">,</span>
<span class="token comment">//        SerializerFeature.WriteEnumUsingToString,</span>
                <span class="token class-name">SerializerFeature<span class="token punctuation">.</span>WriteDateUseDateFormat</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> fastJsonConfig<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">HttpMessageConverter</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> <span class="token function">stringConverter</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">StringHttpMessageConverter</span> converter <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringHttpMessageConverter</span><span class="token punctuation">(</span>
                <span class="token class-name">Charset</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span><span class="token string">&quot;UTF-8&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">MediaType</span><span class="token punctuation">&gt;</span></span> supportedMediaTypes <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//提供只针对 prometheus 所用到类型支持 mediaType</span>
        supportedMediaTypes<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token class-name">MediaType</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span><span class="token string">&quot;application/openmetrics-text;version=1.0.0;charset=utf-8&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        converter<span class="token punctuation">.</span><span class="token function">setSupportedMediaTypes</span><span class="token punctuation">(</span>supportedMediaTypes<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> converter<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="补充" tabindex="-1"><a class="header-anchor" href="#补充"><span>补充</span></a></h2>`,5),r={href:"https://github.com/spring-projects/spring-boot/issues/31150",target:"_blank",rel:"noopener noreferrer"};function k(d,m){const s=t("ExternalLinkIcon");return e(),p("div",null,[u,n("ul",null,[n("li",null,[n("a",r,[o("WebMvcMetricsFilter stopped working since 2.7.0"),c(s)])])])])}const f=a(l,[["render",k],["__file","prometheus.html.vue"]]),h=JSON.parse('{"path":"/posts/question/prometheus.html","title":"Fastjson 导致 Spring boot 接入 Prometheus 返回结果不正确","lang":"zh-CN","frontmatter":{"icon":"java","order":7,"date":"2022-11-07T00:00:00.000Z","category":["问题","运维","监控"],"tag":["prometheus","fastjson"],"description":"Fastjson 导致 Spring boot 接入 Prometheus 返回结果不正确 解决办法 添加 StringHttpMessageConverter 单独处理返回字符串类型，需要注意顺序排在 FastJsonHttpMessageConverter 之前 同时需要注意的一点，由于项目统一切片封装返回对象： 返回 String 的接口也会封装...","head":[["meta",{"property":"og:url","content":"https://zjiac.github.io/tech-arch-doc/tech-arch-doc/posts/question/prometheus.html"}],["meta",{"property":"og:site_name","content":"zJiac 个人知识体系"}],["meta",{"property":"og:title","content":"Fastjson 导致 Spring boot 接入 Prometheus 返回结果不正确"}],["meta",{"property":"og:description","content":"Fastjson 导致 Spring boot 接入 Prometheus 返回结果不正确 解决办法 添加 StringHttpMessageConverter 单独处理返回字符串类型，需要注意顺序排在 FastJsonHttpMessageConverter 之前 同时需要注意的一点，由于项目统一切片封装返回对象： 返回 String 的接口也会封装..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2022-11-11T08:43:12.000Z"}],["meta",{"property":"article:author","content":"zJiaC"}],["meta",{"property":"article:tag","content":"prometheus"}],["meta",{"property":"article:tag","content":"fastjson"}],["meta",{"property":"article:published_time","content":"2022-11-07T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2022-11-11T08:43:12.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Fastjson 导致 Spring boot 接入 Prometheus 返回结果不正确\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-11-07T00:00:00.000Z\\",\\"dateModified\\":\\"2022-11-11T08:43:12.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"zJiaC\\",\\"url\\":\\"https://zjiac.github.io/tech-arch-doc/\\"}]}"]]},"headers":[{"level":2,"title":"解决办法","slug":"解决办法","link":"#解决办法","children":[]},{"level":2,"title":"补充","slug":"补充","link":"#补充","children":[]}],"git":{"createdTime":1667799844000,"updatedTime":1668156192000,"contributors":[{"name":"zJiaC","email":"425226133@qq.com","commits":2}]},"readingTime":{"minutes":0.94,"words":281},"filePathRelative":"posts/question/prometheus.md","localizedDate":"2022年11月7日","excerpt":"\\n<h2>解决办法</h2>\\n<ul>\\n<li>添加 StringHttpMessageConverter 单独处理返回字符串类型，需要注意顺序排在 FastJsonHttpMessageConverter 之前</li>\\n<li>同时需要注意的一点，由于项目统一切片封装返回对象：\\n<ul>\\n<li>返回 String 的接口也会封装多一层成对象，导致 StringHttpMessageConverter 处理的时候将对象转成 String 从而出现错误</li>\\n<li>指定 MediaType 针对 prometheus 所用限制处理</li>\\n</ul>\\n</li>\\n</ul>\\n<div class=\\"language-java\\" data-ext=\\"java\\" data-title=\\"java\\"><pre class=\\"language-java\\"><code><span class=\\"token annotation punctuation\\">@EnableWebMvc</span>\\n<span class=\\"token annotation punctuation\\">@Configuration</span>\\n<span class=\\"token annotation punctuation\\">@ComponentScan</span>\\n<span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">class</span> <span class=\\"token class-name\\">MyWebMvcConfigurer</span> <span class=\\"token keyword\\">implements</span> <span class=\\"token class-name\\">WebMvcConfigurer</span> <span class=\\"token punctuation\\">{</span>\\n\\n    <span class=\\"token annotation punctuation\\">@Override</span>\\n    <span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">void</span> <span class=\\"token function\\">configureMessageConverters</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">List</span><span class=\\"token generics\\"><span class=\\"token punctuation\\">&lt;</span><span class=\\"token class-name\\">HttpMessageConverter</span><span class=\\"token punctuation\\">&lt;</span><span class=\\"token operator\\">?</span><span class=\\"token punctuation\\">&gt;</span><span class=\\"token punctuation\\">&gt;</span></span> converters<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        converters<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">add</span><span class=\\"token punctuation\\">(</span><span class=\\"token function\\">stringConverter</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        converters<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">add</span><span class=\\"token punctuation\\">(</span><span class=\\"token function\\">fastJsonHttpMessageConverters</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token comment\\">//无论白名单和黑名单，都不支持autoType</span>\\n        <span class=\\"token class-name\\">ParserConfig</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">getGlobalInstance</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">setSafeMode</span><span class=\\"token punctuation\\">(</span><span class=\\"token boolean\\">true</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n    \\n    <span class=\\"token doc-comment comment\\">/**\\n     * 修改默认的JSON实现为FastJson\\n     */</span>\\n    <span class=\\"token annotation punctuation\\">@Bean</span>\\n    <span class=\\"token keyword\\">public</span> <span class=\\"token class-name\\">FastJsonHttpMessageConverter</span> <span class=\\"token function\\">fastJsonHttpMessageConverters</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token class-name\\">FastJsonHttpMessageConverter</span> httpMessageConverter <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">FastJsonHttpMessageConverter</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        httpMessageConverter<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">setFastJsonConfig</span><span class=\\"token punctuation\\">(</span><span class=\\"token function\\">getFastJsonConfig</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        httpMessageConverter<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">setDefaultCharset</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">Charset</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">forName</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"UTF-8\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token keyword\\">return</span> httpMessageConverter<span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n\\n    <span class=\\"token keyword\\">private</span> <span class=\\"token class-name\\">FastJsonConfig</span> <span class=\\"token function\\">getFastJsonConfig</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token class-name\\">FastJsonConfig</span> fastJsonConfig <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">FastJsonConfig</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        fastJsonConfig<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">setDateFormat</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"yyyy-MM-dd HH:mm:ss.SSS\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        fastJsonConfig<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">setCharset</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">Charset</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">forName</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"UTF-8\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n        fastJsonConfig<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">setSerializerFeatures</span><span class=\\"token punctuation\\">(</span>\\n                <span class=\\"token class-name\\">SerializerFeature<span class=\\"token punctuation\\">.</span>WriteMapNullValue</span><span class=\\"token punctuation\\">,</span>\\n                <span class=\\"token class-name\\">SerializerFeature<span class=\\"token punctuation\\">.</span>QuoteFieldNames</span><span class=\\"token punctuation\\">,</span>\\n                <span class=\\"token class-name\\">SerializerFeature<span class=\\"token punctuation\\">.</span>WriteNullListAsEmpty</span><span class=\\"token punctuation\\">,</span>\\n<span class=\\"token comment\\">//        SerializerFeature.WriteEnumUsingToString,</span>\\n                <span class=\\"token class-name\\">SerializerFeature<span class=\\"token punctuation\\">.</span>WriteDateUseDateFormat</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token keyword\\">return</span> fastJsonConfig<span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n\\n    <span class=\\"token keyword\\">public</span> <span class=\\"token class-name\\">HttpMessageConverter</span><span class=\\"token generics\\"><span class=\\"token punctuation\\">&lt;</span><span class=\\"token class-name\\">String</span><span class=\\"token punctuation\\">&gt;</span></span> <span class=\\"token function\\">stringConverter</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token class-name\\">StringHttpMessageConverter</span> converter <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">StringHttpMessageConverter</span><span class=\\"token punctuation\\">(</span>\\n                <span class=\\"token class-name\\">Charset</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">forName</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"UTF-8\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token class-name\\">List</span><span class=\\"token generics\\"><span class=\\"token punctuation\\">&lt;</span><span class=\\"token class-name\\">MediaType</span><span class=\\"token punctuation\\">&gt;</span></span> supportedMediaTypes <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">ArrayList</span><span class=\\"token generics\\"><span class=\\"token punctuation\\">&lt;</span><span class=\\"token punctuation\\">&gt;</span></span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token comment\\">//提供只针对 prometheus 所用到类型支持 mediaType</span>\\n        supportedMediaTypes<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">add</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">MediaType</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">valueOf</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"application/openmetrics-text;version=1.0.0;charset=utf-8\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        converter<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">setSupportedMediaTypes</span><span class=\\"token punctuation\\">(</span>supportedMediaTypes<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token keyword\\">return</span> converter<span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre></div>","autoDesc":true}');export{f as comp,h as data};

import{_ as e}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as p,c,a as o,d as n,e as s,b as t,f as l,r as i}from"./app.18089db6.js";const u={},k=n("h1",{id:"type-\u7C7B\u578B",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#type-\u7C7B\u578B","aria-hidden":"true"},"#"),s(" Type \u7C7B\u578B")],-1),r=l(`<h2 id="type-\u63A5\u53E3\u7B80\u4ECB" tabindex="-1"><a class="header-anchor" href="#type-\u63A5\u53E3\u7B80\u4ECB" aria-hidden="true">#</a> Type \u63A5\u53E3\u7B80\u4ECB</h2><ul><li>Type \u662F Java \u8BED\u8A00\u4E2D\u6240\u6709\u7C7B\u578B\u7684\u516C\u5171\u7236\u63A5\u53E3\uFF0C\u5176\u4ECE JDK5 \u5F00\u59CB\u5F15\u5165\uFF0C\u5F15\u5165\u7684\u76EE\u7684\u4E3B\u8981\u662F\u4E3A\u4E86\u652F\u6301\u6CDB\u578B\u3002</li><li>\u6CA1\u6709\u6CDB\u578B\u7684\u4E4B\u524D\uFF0CJava \u53EA\u6709\u6240\u8C13\u7684\u539F\u59CB\u7C7B\u578B(raw types)\u3002\u6B64\u65F6\uFF0C\u6240\u6709\u7684\u539F\u59CB\u7C7B\u578B\u90FD\u901A\u8FC7\u5B57\u8282\u7801\u7C7B Class \u8FDB\u884C\u62BD\u8C61\u3002Class \u7C7B\u7684\u4E00\u4E2A\u5177\u4F53\u5BF9\u8C61(\u4F8B\u5982 String.class)\u5C31\u4EE3\u8868\u4E00\u4E2A\u6307\u5B9A\u7684\u539F\u59CB\u7C7B\u578B\u3002</li><li>\u6CDB\u578B\u7684\u51FA\u73B0\u6269\u5145\u4E86\u6570\u636E\u7C7B\u578B\u7684\u6982\u5FF5\uFF0C\u4ECE\u53EA\u6709\u539F\u59CB\u7C7B\u578B(raw types)\u6269\u5145\u4E86\u53C2\u6570\u5316\u7C7B\u578B\u3001\u7C7B\u578B\u53D8\u91CF\u7C7B\u578B\u3001\u6CDB\u578B\u6570\u7EC4\u7C7B\u578B\u548C\u901A\u914D\u7B26\u7C7B\u578B\u3002\u4ED6\u4EEC\u90FD\u662F Type \u7684\u5B50\u63A5\u53E3\u3002</li></ul><h2 id="\u5982\u4F55\u83B7\u53D6\u6CDB\u578B\u7684\u53C2\u6570\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#\u5982\u4F55\u83B7\u53D6\u6CDB\u578B\u7684\u53C2\u6570\u7C7B\u578B" aria-hidden="true">#</a> \u5982\u4F55\u83B7\u53D6\u6CDB\u578B\u7684\u53C2\u6570\u7C7B\u578B\uFF1F</h2><ul><li><p>java.lang.reflect.Type \u662F Java \u4E2D\u6240\u6709\u7C7B\u578B\u7684\u516C\u5171\u9AD8\u7EA7\u63A5\u53E3, \u4EE3\u8868\u4E86 Java \u4E2D\u7684\u6240\u6709\u7C7B\u578B. Type \u4F53\u7CFB\u4E2D\u7C7B\u578B\u7684\u5305\u62EC\uFF1A\u6570\u7EC4\u7C7B\u578B (GenericArrayType)\u3001\u53C2\u6570\u5316\u7C7B\u578B (ParameterizedType)\u3001\u7C7B\u578B\u53D8\u91CF (TypeVariable)\u3001\u901A\u914D\u7B26\u7C7B\u578B (WildcardType)\u3001\u539F\u59CB\u7C7B\u578B (Class)\u3001\u57FA\u672C\u7C7B\u578B (Class), \u4EE5\u4E0A\u8FD9\u4E9B\u7C7B\u578B\u90FD\u5B9E\u73B0 Type \u63A5\u53E3\u3002</p></li><li><p>AOP \u5207\u7247\u901A\u8FC7\u53CD\u5C04\u65B9\u5F0F\u5C4F\u853D\u9650\u5236\u503C:</p></li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>
<span class="token annotation punctuation">@Aspect</span>
<span class="token annotation punctuation">@Component</span>
<span class="token annotation punctuation">@ComponentScan</span>
<span class="token annotation punctuation">@EnableAspectJAutoProxy</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DisplayHandlerAspect</span> <span class="token punctuation">{</span>

  <span class="token annotation punctuation">@Autowired</span>
  <span class="token keyword">private</span> <span class="token class-name">SecurityService</span> securityService<span class="token punctuation">;</span>

  <span class="token annotation punctuation">@Pointcut</span><span class="token punctuation">(</span><span class="token string">&quot;@annotation(com.*)&quot;</span><span class="token punctuation">)</span>
  <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">handler</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">//\u5207\u5165\u70B9</span>
  <span class="token punctuation">}</span>

  <span class="token doc-comment comment">/**
   * \u5BF9\u65B9\u6CD5\u62E6\u622A\u540E\u5BF9\u5B57\u6BB5\u663E\u793A\u8FDB\u884C\u5224\u65AD
   *
   * <span class="token keyword">@param</span> <span class="token parameter">joinPoint</span>
   * <span class="token keyword">@return</span>
   */</span>
  <span class="token annotation punctuation">@Around</span><span class="token punctuation">(</span><span class="token string">&quot;handler()&quot;</span><span class="token punctuation">)</span>
  <span class="token keyword">public</span> <span class="token class-name">Object</span> <span class="token function">handler</span><span class="token punctuation">(</span><span class="token class-name">ProceedingJoinPoint</span> joinPoint<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Throwable</span> <span class="token punctuation">{</span>
    <span class="token class-name">ResponseEntity</span> result<span class="token punctuation">;</span>
    <span class="token comment">//\u9650\u5236\u5B57\u6BB5\u96C6\u5408</span>
    <span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Field</span><span class="token punctuation">&gt;</span></span> limitSet <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashSet</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//Signature \u5C01\u88C5\u65B9\u6CD5\u76F8\u5173\u7684\u4FE1\u606F</span>
    <span class="token class-name">Signature</span>       signature <span class="token operator">=</span> joinPoint<span class="token punctuation">.</span><span class="token function">getSignature</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">MethodSignature</span> methodSignature<span class="token punctuation">;</span>
    $$<span class="token punctuation">.</span>E<span class="token punctuation">.</span><span class="token function">valid</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">(</span>signature <span class="token keyword">instanceof</span> <span class="token class-name">MethodSignature</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">new</span> <span class="token class-name">IllegalArgumentException</span><span class="token punctuation">(</span><span class="token string">&quot;\u8BE5\u6CE8\u89E3\u53EA\u80FD\u7528\u4E8E\u65B9\u6CD5\u4E0A&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    methodSignature <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">MethodSignature</span><span class="token punctuation">)</span> signature<span class="token punctuation">;</span>
    <span class="token class-name">Method</span> method <span class="token operator">=</span> methodSignature<span class="token punctuation">.</span><span class="token function">getMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    result <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">ResponseEntity</span><span class="token punctuation">)</span> joinPoint<span class="token punctuation">.</span><span class="token function">proceed</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">//\u83B7\u53D6 Method \u8FD4\u56DE\u7684 Type</span>
    <span class="token class-name">Type</span>               returnType <span class="token operator">=</span> method<span class="token punctuation">.</span><span class="token function">getGenericReturnType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//\u5224\u65AD\u662F ParameterizedType \u53C2\u6570\u5316\u7C7B\u578B\uFF0C\u5FAA\u73AF\u83B7\u53D6\u6700\u7EC8 Class \u7C7B\u578B\u3002</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>returnType <span class="token keyword">instanceof</span> <span class="token class-name">ParameterizedType</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      returnType <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">ParameterizedType</span><span class="token punctuation">)</span> returnType<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getActualTypeArguments</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">//\u6570\u7EC4\u7C7B\u578B Class \u9700\u8981\u7279\u6B8A\u5904\u7406</span>
    <span class="token class-name">Class</span> returnClass <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">)</span> returnType<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Field</span><span class="token punctuation">[</span><span class="token punctuation">]</span>        fieldSet   <span class="token operator">=</span> <span class="token class-name">ReflectUtil</span><span class="token punctuation">.</span><span class="token function">getFields</span><span class="token punctuation">(</span>returnClass<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">?</span> returnClass<span class="token punctuation">.</span><span class="token function">getComponentType</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> returnClass<span class="token punctuation">)</span><span class="token punctuation">;</span>

      <span class="token doc-comment comment">/**
       limitSet \u6709\u4E86 Field \u6570\u7EC4\u53EF\u4EE5\u6839\u636E\u6CE8\u89E3\u53BB\u83B7\u53D6
      **/</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>result<span class="token punctuation">.</span><span class="token function">getStatusCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token class-name">HttpStatus</span><span class="token punctuation">.</span><span class="token constant">OK</span> <span class="token operator">&amp;&amp;</span> $$<span class="token punctuation">.</span>V<span class="token punctuation">.</span><span class="token function">isNotEmpty</span><span class="token punctuation">(</span>limitSet<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token class-name">Object</span> srcValue <span class="token operator">=</span> result<span class="token punctuation">.</span><span class="token function">getBody</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>srcValue <span class="token keyword">instanceof</span> <span class="token class-name">PageLite</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">PageLite</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">)</span> srcValue<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>o <span class="token operator">-&gt;</span> <span class="token function">convert</span><span class="token punctuation">(</span>o<span class="token punctuation">,</span> limitSet<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>srcValue <span class="token keyword">instanceof</span> <span class="token class-name">Page</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">Page</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">)</span> srcValue<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>o <span class="token operator">-&gt;</span> <span class="token function">convert</span><span class="token punctuation">(</span>o<span class="token punctuation">,</span> limitSet<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>srcValue <span class="token keyword">instanceof</span> <span class="token class-name">List</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">)</span> srcValue<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>o <span class="token operator">-&gt;</span> <span class="token function">convert</span><span class="token punctuation">(</span>o<span class="token punctuation">,</span> limitSet<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>srcValue <span class="token keyword">instanceof</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Object</span> o <span class="token operator">:</span> <span class="token punctuation">(</span><span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> srcValue<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token function">convert</span><span class="token punctuation">(</span>o<span class="token punctuation">,</span> limitSet<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token function">convert</span><span class="token punctuation">(</span>srcValue<span class="token punctuation">,</span> limitSet<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> result<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token doc-comment comment">/**
   * \u901A\u8FC7\u53CD\u5C04\u5C06\u5BF9\u5E94\u9650\u5236\u503C\u8BBE\u7F6E\u4E3A null
   * <span class="token keyword">@param</span> <span class="token parameter">obj</span>
   * <span class="token keyword">@param</span> <span class="token parameter">limitSet</span>
   * <span class="token keyword">@return</span>
   */</span>
  <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">convert</span><span class="token punctuation">(</span><span class="token class-name">Object</span> obj<span class="token punctuation">,</span>
                                  <span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Field</span><span class="token punctuation">&gt;</span></span> limitSet<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Field</span> key <span class="token operator">:</span> limitSet<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token class-name">ReflectUtil</span><span class="token punctuation">.</span><span class="token function">setFieldValue</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span>key<span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

  <span class="token punctuation">}</span>

<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>ParameterizedType \u8868\u793A\u53C2\u6570\u5316\u7C7B\u578B\uFF0C\u5E26\u6709\u7C7B\u578B\u53C2\u6570\u7684\u7C7B\u578B\uFF0C\u5373\u5E38\u8BF4\u7684\u6CDB\u578B\uFF0C\u5982\uFF1A<code>List&lt;T&gt;\u3001Map&lt;Integer, String&gt;\u3001List&lt;? extends Number&gt;\u3002</code>:</li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">ParameterizedType</span> <span class="token keyword">extends</span> <span class="token class-name">Type</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u8FD4\u56DE\u786E\u5207\u7684\u6CDB\u578B\u53C2\u6570, \u5982 Map&lt;String, Integer&gt; \u8FD4\u56DE [String, Integer]</span>
    <span class="token class-name">Type</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">getActualTypeArguments</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    
    <span class="token comment">//\u8FD4\u56DE\u5F53\u524D class \u6216 interface \u58F0\u660E\u7684\u7C7B\u578B, \u5982 List&lt;?&gt; \u8FD4\u56DE List</span>
    <span class="token class-name">Type</span> <span class="token function">getRawType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    
    <span class="token comment">//\u8FD4\u56DE\u6240\u5C5E\u7C7B\u578B. \u5982,\u5F53\u524D\u7C7B\u578B\u4E3A O&lt;T&gt;.I&lt;S&gt;, \u5219\u8FD4\u56DE O&lt;T&gt;. \u9876\u7EA7\u7C7B\u578B\u5C06\u8FD4\u56DE null </span>
    <span class="token class-name">Type</span> <span class="token function">getOwnerType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
  
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>class :</li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">class</span> <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">implements</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span>Serializable</span><span class="token punctuation">,</span>
                              <span class="token class-name">GenericDeclaration</span><span class="token punctuation">,</span>
                              <span class="token class-name">Type</span><span class="token punctuation">,</span>
                              <span class="token class-name">AnnotatedElement</span> <span class="token punctuation">{</span>

    <span class="token comment">//\u5224\u65AD Class \u5BF9\u8C61\u662F\u5426\u8868\u793A\u6570\u7EC4\u7C7B</span>
    <span class="token keyword">public</span> <span class="token keyword">native</span> <span class="token keyword">boolean</span> <span class="token function">isArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    
    <span class="token comment">//\u8FD4\u56DE\u6570\u7EC4\u7EC4\u4EF6\u7C7B\u578B\uFF0C\u82E5\u662F\u975E\u6570\u7EC4\u5219\u8FD4\u56DE null</span>
    <span class="token keyword">public</span> <span class="token keyword">native</span> <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> <span class="token function">getComponentType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>Hutool \u53CD\u5C04\u5DE5\u5177-ReflectUtil:</li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ReflectUtil</span> <span class="token punctuation">{</span>
    <span class="token doc-comment comment">/**
     * \u83B7\u5F97\u4E00\u4E2A\u7C7B\u4E2D\u6240\u6709\u5B57\u6BB5\u5217\u8868\uFF0C\u5305\u62EC\u5176\u7236\u7C7B\u4E2D\u7684\u5B57\u6BB5
     *
     * <span class="token keyword">@param</span> <span class="token parameter">beanClass</span> \u7C7B
     * <span class="token keyword">@return</span> \u5B57\u6BB5\u5217\u8868
     * <span class="token keyword">@throws</span> <span class="token reference"><span class="token class-name">SecurityException</span></span> \u5B89\u5168\u68C0\u67E5\u5F02\u5E38
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Field</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">getFields</span><span class="token punctuation">(</span><span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> beanClass<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">SecurityException</span> <span class="token punctuation">{</span>
        <span class="token class-name">Field</span><span class="token punctuation">[</span><span class="token punctuation">]</span> allFields <span class="token operator">=</span> <span class="token constant">FIELDS_CACHE</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>beanClass<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">null</span> <span class="token operator">!=</span> allFields<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> allFields<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        allFields <span class="token operator">=</span> <span class="token function">getFieldsDirectly</span><span class="token punctuation">(</span>beanClass<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token constant">FIELDS_CACHE</span><span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>beanClass<span class="token punctuation">,</span> allFields<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * \u83B7\u5F97\u4E00\u4E2A\u7C7B\u4E2D\u6240\u6709\u5B57\u6BB5\u5217\u8868\uFF0C\u76F4\u63A5\u53CD\u5C04\u83B7\u53D6\uFF0C\u65E0\u7F13\u5B58
     *
     * <span class="token keyword">@param</span> <span class="token parameter">beanClass</span>           \u7C7B
     * <span class="token keyword">@param</span> <span class="token parameter">withSuperClassFieds</span> \u662F\u5426\u5305\u62EC\u7236\u7C7B\u7684\u5B57\u6BB5\u5217\u8868
     * <span class="token keyword">@return</span> \u5B57\u6BB5\u5217\u8868
     * <span class="token keyword">@throws</span> <span class="token reference"><span class="token class-name">SecurityException</span></span> \u5B89\u5168\u68C0\u67E5\u5F02\u5E38
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Field</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">getFieldsDirectly</span><span class="token punctuation">(</span><span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> beanClass<span class="token punctuation">,</span> <span class="token keyword">boolean</span> withSuperClassFieds<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">SecurityException</span> <span class="token punctuation">{</span>
        <span class="token class-name">Assert</span><span class="token punctuation">.</span><span class="token function">notNull</span><span class="token punctuation">(</span>beanClass<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">Field</span><span class="token punctuation">[</span><span class="token punctuation">]</span> allFields <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> searchType <span class="token operator">=</span> beanClass<span class="token punctuation">;</span>
        <span class="token class-name">Field</span><span class="token punctuation">[</span><span class="token punctuation">]</span> declaredFields<span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>searchType <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            declaredFields <span class="token operator">=</span> searchType<span class="token punctuation">.</span><span class="token function">getDeclaredFields</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">null</span> <span class="token operator">==</span> allFields<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                allFields <span class="token operator">=</span> declaredFields<span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                allFields <span class="token operator">=</span> <span class="token class-name">ArrayUtil</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>allFields<span class="token punctuation">,</span> declaredFields<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            searchType <span class="token operator">=</span> withSuperClassFieds <span class="token operator">?</span> searchType<span class="token punctuation">.</span><span class="token function">getSuperclass</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">return</span> allFields<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u53C2\u8003\u6587\u7AE0" tabindex="-1"><a class="header-anchor" href="#\u53C2\u8003\u6587\u7AE0" aria-hidden="true">#</a> \u53C2\u8003\u6587\u7AE0</h2>`,12),d={href:"https://www.cnblogs.com/baiqiantao/p/7460580.html",target:"_blank",rel:"noopener noreferrer"},v={href:"https://www.pdai.tech/md/java/basic/java-basic-x-generic.html",target:"_blank",rel:"noopener noreferrer"},m={href:"https://hutool.cn/docs/#/core/%E5%B7%A5%E5%85%B7%E7%B1%BB/%E5%8F%8D%E5%B0%84%E5%B7%A5%E5%85%B7-ReflectUtil?id=%e5%8f%8d%e5%b0%84%e5%b7%a5%e5%85%b7-reflectutil",target:"_blank",rel:"noopener noreferrer"};function b(y,g){const a=i("ExternalLinkIcon");return p(),c("div",null,[k,o(" more "),r,n("ul",null,[n("li",null,[n("a",d,[s("Type \u7C7B\u578B \u6CDB\u578B \u53CD\u5C04 Class ParameterizedType"),t(a)])]),n("li",null,[n("a",v,[s("Java \u57FA\u7840 - \u6CDB\u578B\u673A\u5236\u8BE6\u89E3"),t(a)])]),n("li",null,[n("a",m,[s("Hutool \u53CD\u5C04\u5DE5\u5177-ReflectUtil"),t(a)])])])])}const h=e(u,[["render",b],["__file","type.html.vue"]]);export{h as default};

import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as n,a as s,f as i,d as p,o as l}from"./app-X9Qm7P3-.js";const t={};function r(c,a){return l(),n("div",null,[a[0]||(a[0]=s("h1",{id:"项目部署",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#项目部署"},[s("span",null,"项目部署")])],-1)),i(" more "),a[1]||(a[1]=p(`<h2 id="问题" tabindex="-1"><a class="header-anchor" href="#问题"><span>问题</span></a></h2><h3 id="docker-容器日期与宿主主机时间不一致解决" tabindex="-1"><a class="header-anchor" href="#docker-容器日期与宿主主机时间不一致解决"><span>Docker 容器日期与宿主主机时间不一致解决</span></a></h3><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>失败：</span></span>
<span class="line"><span>/etc/localtime:/etc/localtime:ro</span></span>
<span class="line"><span>成功：</span></span>
<span class="line"><span>- /etc/localtime:/etc/localtime</span></span>
<span class="line"><span>- /etc/timezone:/etc/timezone</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>!&gt; 第一种仍然存在时区问题，第二种最终解决该问题。</p><h3 id="已非-jar-包形式部署-spring-boot-项目挂载项目" tabindex="-1"><a class="header-anchor" href="#已非-jar-包形式部署-spring-boot-项目挂载项目"><span>已非 jar 包形式部署 Spring boot 项目挂载项目</span></a></h3><ul><li>前情提要： <ul><li>非 jar 形式通过脚本启动项目<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>  #!/bin/bash</span></span>
<span class="line"><span>  APP_ENTRY=\${app.entry}</span></span>
<span class="line"><span>  </span></span>
<span class="line"><span>  DIR=$( cd &quot;$( dirname &quot;\${BASH_SOURCE[0]}&quot; )&quot; &amp;&amp; pwd )</span></span>
<span class="line"><span>  BASE=$DIR/.</span></span>
<span class="line"><span>  CP=$BASE/classes:$BASE/lib/*</span></span>
<span class="line"><span>  </span></span>
<span class="line"><span>  JAVA_OPTS=&quot;$JAVA_OPTS -server -Xms512m -Xmx1g&quot;</span></span>
<span class="line"><span>  </span></span>
<span class="line"><span>  java $JAVA_OPTS -cp &quot;$CP&quot; $APP_ENTRY</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li><li>解决： <ul><li>换成 jar 包执行: <ul><li>若是通过执行 jar 包启动项目然后挂载外部配置文件就需要提前单独准备好配置文件</li></ul><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>  FROM java:8</span></span>
<span class="line"><span>  RUN mkdir -p /opt/erp</span></span>
<span class="line"><span>  VOLUME /tmp</span></span>
<span class="line"><span>  ADD bill.api-1.0.0.jar /opt/erp/app.jar</span></span>
<span class="line"><span>  COPY /classes /opt/erp/conf</span></span>
<span class="line"><span>  WORKDIR /opt/erp</span></span>
<span class="line"><span>  RUN bash -c &#39;touch /opt/erp/app.jar&#39;</span></span>
<span class="line"><span>  ENTRYPOINT [&quot;java&quot;,&quot;-Djava.security.egd=file:/dev/./urandom&quot;,&quot;-jar&quot;,&quot;/opt/erp/app.jar&quot;]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li>直接解压 zip 包然后直接执行脚本启动 <ul><li>CMD 可灵活调整，这里针对性选择删除 com 以及 static 等静态文件，执行解压操作仅会对不存在的进行补充。</li></ul><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>  FROM java:8</span></span>
<span class="line"><span>  MAINTAINER zJiaC</span></span>
<span class="line"><span>  RUN mkdir -p /opt/erp</span></span>
<span class="line"><span>  ADD *.zip /opt/api.zip</span></span>
<span class="line"><span>  WORKDIR /opt/api</span></span>
<span class="line"><span>  CMD rm -rf /opt/api/classes/com &amp;&amp; rm -rf /opt/api/classes/static/*.json &amp;&amp; rm -rf /opt/api/classes/static/*.jsonp &amp;&amp; rm -rf /opt/api/classes/static/*.html &amp;&amp; rm -rf /opt/api/classes/static/classic &amp;&amp; rm -rf /opt/api/classes/static/modern &amp;&amp; unzip -n /opt/api.zip -d /opt/api &amp;&amp; chmod +x /opt/api/run &amp;&amp; ./run</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li></ul><h2 id="收藏网址" tabindex="-1"><a class="header-anchor" href="#收藏网址"><span>收藏网址</span></a></h2><ul><li><a href="https://yeasy.gitbook.io/docker_practice/" target="_blank" rel="noopener noreferrer">Docker-从入门到实践</a></li><li><a href="https://www.qikqiak.com/k8s-book/" target="_blank" rel="noopener noreferrer">从 Docker 到 Kubernetes 进阶</a></li></ul>`,8))])}const m=e(t,[["render",r]]),h=JSON.parse('{"path":"/posts/ops/deploy.html","title":"项目部署","lang":"zh-CN","frontmatter":{"icon":"fa-brands fa-docker","order":4,"date":"2022-04-29T00:00:00.000Z","category":["运维"],"tag":["Docker"],"head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"项目部署\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-04-29T00:00:00.000Z\\",\\"dateModified\\":\\"2024-04-20T02:08:45.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"zJiaC\\",\\"url\\":\\"https://zjiac.github.io/tech-arch-doc/\\"}]}"],["meta",{"property":"og:url","content":"https://zjiac.github.io/tech-arch-doc/tech-arch-doc/posts/ops/deploy.html"}],["meta",{"property":"og:site_name","content":"zJiac 个人知识体系"}],["meta",{"property":"og:title","content":"项目部署"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-04-20T02:08:45.000Z"}],["meta",{"property":"article:tag","content":"Docker"}],["meta",{"property":"article:published_time","content":"2022-04-29T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-04-20T02:08:45.000Z"}]]},"git":{"createdTime":1653376909000,"updatedTime":1713578925000,"contributors":[{"name":"zJiaC","username":"zJiaC","email":"jc456123","commits":9,"url":"https://github.com/zJiaC"}]},"readingTime":{"minutes":1.09,"words":326},"filePathRelative":"posts/ops/deploy.md","excerpt":"\\n"}');export{m as comp,h as data};

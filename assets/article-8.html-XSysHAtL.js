import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as p,o as c,c as l,f as a,b as n,e as s,a as i,d as t}from"./app-CgPki5_t.js";const u={},r=n("h1",{id:"connection-holder-is-null",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#connection-holder-is-null"},[n("span",null,"connection holder is null")])],-1),k=n("h2",{id:"发现错误过程",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#发现错误过程"},[n("span",null,"发现错误过程")])],-1),d=n("p",null,"在开发spring-boot整合druid链接池(1.1.2版本)的项目时，同事再开发的时候碰到了，connection holder is null这样一个错误。",-1),v=t("<p>帮助其解决时通过google发现可能是druid出现的错误。<br> 但按照网上所说只要配置这几个参数：<br> 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒<br> timeBetweenEvictionRunsMillis<br> 配置一个连接在池中最小生存的时间，单位是毫秒<br> minEvictableIdleTimeMillis<br> 关闭长时间不使用的连接超时时间，单位秒<br> removeAbandonedTimeout<br> 关闭长时间不使用的连接<br> removeAbandoned<br> 实际上并不起作用。<br> 最后发现这篇博文：</p>",1),m={href:"http://timerbin.iteye.com/blog/2332995",target:"_blank",rel:"noopener noreferrer"},b=n("br",null,null,-1),h=n("br",null,null,-1),g=n("br",null,null,-1),y=t(`<div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code>  <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Connection</span> <span class="token function">getConnection</span><span class="token punctuation">(</span><span class="token class-name">DataSource</span> dataSource<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">CannotGetJdbcConnectionException</span> <span class="token punctuation">{</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token function">doGetConnection</span><span class="token punctuation">(</span>dataSource<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">SQLException</span> var2<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">CannotGetJdbcConnectionException</span><span class="token punctuation">(</span><span class="token string">&quot;Could not get JDBC Connection&quot;</span><span class="token punctuation">,</span> var2<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Connection</span> <span class="token function">doGetConnection</span><span class="token punctuation">(</span><span class="token class-name">DataSource</span> dataSource<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">SQLException</span> <span class="token punctuation">{</span>
    <span class="token class-name">Assert</span><span class="token punctuation">.</span><span class="token function">notNull</span><span class="token punctuation">(</span>dataSource<span class="token punctuation">,</span> <span class="token string">&quot;No DataSource specified&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">ConnectionHolder</span> conHolder <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">ConnectionHolder</span><span class="token punctuation">)</span><span class="token class-name">TransactionSynchronizationManager</span><span class="token punctuation">.</span><span class="token function">getResource</span><span class="token punctuation">(</span>dataSource<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>conHolder <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> <span class="token operator">!</span>conHolder<span class="token punctuation">.</span><span class="token function">hasConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>conHolder<span class="token punctuation">.</span><span class="token function">isSynchronizedWithTransaction</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      logger<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;Fetching JDBC Connection from DataSource&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token class-name">Connection</span> con <span class="token operator">=</span> dataSource<span class="token punctuation">.</span><span class="token function">getConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">TransactionSynchronizationManager</span><span class="token punctuation">.</span><span class="token function">isSynchronizationActive</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        logger<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;Registering transaction synchronization for JDBC Connection&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">ConnectionHolder</span> holderToUse <span class="token operator">=</span> conHolder<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>conHolder <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          holderToUse <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ConnectionHolder</span><span class="token punctuation">(</span>con<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
          conHolder<span class="token punctuation">.</span><span class="token function">setConnection</span><span class="token punctuation">(</span>con<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        holderToUse<span class="token punctuation">.</span><span class="token function">requested</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">TransactionSynchronizationManager</span><span class="token punctuation">.</span><span class="token function">registerSynchronization</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">DataSourceUtils<span class="token punctuation">.</span>ConnectionSynchronization</span><span class="token punctuation">(</span>holderToUse<span class="token punctuation">,</span> dataSource<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        holderToUse<span class="token punctuation">.</span><span class="token function">setSynchronizedWithTransaction</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>holderToUse <span class="token operator">!=</span> conHolder<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token class-name">TransactionSynchronizationManager</span><span class="token punctuation">.</span><span class="token function">bindResource</span><span class="token punctuation">(</span>dataSource<span class="token punctuation">,</span> holderToUse<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>

      <span class="token keyword">return</span> con<span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      conHolder<span class="token punctuation">.</span><span class="token function">requested</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>conHolder<span class="token punctuation">.</span><span class="token function">hasConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        logger<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;Fetching resumed JDBC Connection from DataSource&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        conHolder<span class="token punctuation">.</span><span class="token function">setConnection</span><span class="token punctuation">(</span>dataSource<span class="token punctuation">.</span><span class="token function">getConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>

      <span class="token keyword">return</span> conHolder<span class="token punctuation">.</span><span class="token function">getConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>但执行完之后忘记了手动释放连接，只是connection.close();导致了错误。</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code>  <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">releaseConnection</span><span class="token punctuation">(</span><span class="token class-name">Connection</span> con<span class="token punctuation">,</span> <span class="token class-name">DataSource</span> dataSource<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
      <span class="token function">doReleaseConnection</span><span class="token punctuation">(</span>con<span class="token punctuation">,</span> dataSource<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">SQLException</span> var3<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      logger<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;Could not close JDBC Connection&quot;</span><span class="token punctuation">,</span> var3<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Throwable</span> var4<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      logger<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;Unexpected exception on closing JDBC Connection&quot;</span><span class="token punctuation">,</span> var4<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

  <span class="token punctuation">}</span>

  <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">doReleaseConnection</span><span class="token punctuation">(</span><span class="token class-name">Connection</span> con<span class="token punctuation">,</span> <span class="token class-name">DataSource</span> dataSource<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">SQLException</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>con <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>dataSource <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">ConnectionHolder</span> conHolder <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">ConnectionHolder</span><span class="token punctuation">)</span><span class="token class-name">TransactionSynchronizationManager</span><span class="token punctuation">.</span><span class="token function">getResource</span><span class="token punctuation">(</span>dataSource<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>conHolder <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> <span class="token function">connectionEquals</span><span class="token punctuation">(</span>conHolder<span class="token punctuation">,</span> con<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          conHolder<span class="token punctuation">.</span><span class="token function">released</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token keyword">return</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>

      logger<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;Returning JDBC Connection to DataSource&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token function">doCloseConnection</span><span class="token punctuation">(</span>con<span class="token punctuation">,</span> dataSource<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">doCloseConnection</span><span class="token punctuation">(</span><span class="token class-name">Connection</span> con<span class="token punctuation">,</span> <span class="token class-name">DataSource</span> dataSource<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">SQLException</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">(</span>dataSource <span class="token keyword">instanceof</span> <span class="token class-name">SmartDataSource</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">SmartDataSource</span><span class="token punctuation">)</span>dataSource<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">shouldClose</span><span class="token punctuation">(</span>con<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      con<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>除了上面外，我这边的解决办法是:<br> DataSourceUtils.releaseConnection(connection, this.dataSource);//正常执行完语句，调用该方法关闭该数据源的连接,这样就会正常释放连接。</p>`,4);function f(C,w){const o=p("ExternalLinkIcon");return c(),l("div",null,[r,a(" more "),k,d,a("more"),v,n("ul",null,[n("li",null,[n("a",m,[s("connection holder is null"),i(o)]),b,s(" 发现确实是由多数据源，开启事务导致了这个错误,且未配置单独的事务管理器，所以也没指定那个事务管理器。"),h,s(" 然后通过阅读源码："),g,s(" 一开始创建连接会实例化ConnectionHolder")])]),y])}const T=e(u,[["render",f],["__file","article-8.html.vue"]]),D=JSON.parse('{"path":"/posts/question/article-8.html","title":"connection holder is null","lang":"zh-CN","frontmatter":{"icon":"java","title":"connection holder is null","order":5,"date":"2018-06-13T00:00:00.000Z","category":["问题","编程"],"tag":["Java","Spring boot","Druid"],"head":[["meta",{"property":"og:url","content":"https://zjiac.github.io/tech-arch-doc/tech-arch-doc/posts/question/article-8.html"}],["meta",{"property":"og:site_name","content":"zJiac 个人知识体系"}],["meta",{"property":"og:title","content":"connection holder is null"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2022-06-14T07:49:08.000Z"}],["meta",{"property":"article:author","content":"zJiaC"}],["meta",{"property":"article:tag","content":"Java"}],["meta",{"property":"article:tag","content":"Spring boot"}],["meta",{"property":"article:tag","content":"Druid"}],["meta",{"property":"article:published_time","content":"2018-06-13T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2022-06-14T07:49:08.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"connection holder is null\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2018-06-13T00:00:00.000Z\\",\\"dateModified\\":\\"2022-06-14T07:49:08.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"zJiaC\\",\\"url\\":\\"https://zjiac.github.io/tech-arch-doc/\\"}]}"]]},"headers":[{"level":2,"title":"发现错误过程","slug":"发现错误过程","link":"#发现错误过程","children":[]}],"git":{"createdTime":1653902001000,"updatedTime":1655192948000,"contributors":[{"name":"zJiaC","email":"jc456123","commits":3}]},"readingTime":{"minutes":1.85,"words":554},"filePathRelative":"posts/question/article-8.md","localizedDate":"2018年6月13日","excerpt":"\\n"}');export{T as comp,D as data};

import{_ as s,X as a,Y as d,Z as o,a0 as e,a2 as t,$ as r,a3 as i,F as l}from"./framework-c2ea1030.js";const h={},c=e("h1",{id:"nginx",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#nginx","aria-hidden":"true"},"#"),t(" Nginx")],-1),_=e("h2",{id:"强制-http-跳转-https",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#强制-http-跳转-https","aria-hidden":"true"},"#"),t(" 强制 HTTP 跳转 HTTPS")],-1),u={id:"使用-nginx-将-http-重定向到-https",tabindex:"-1"},p=e("a",{class:"header-anchor",href:"#使用-nginx-将-http-重定向到-https","aria-hidden":"true"},"#",-1),v={href:"https://mincong.io/cn/redirect-traffic-to-https-nginx/",target:"_blank",rel:"noopener noreferrer"},m=i(`<ul><li>配置重定向:</li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>  server {
    listen       80;
    server_name  _;
    return       301 https://$host$request_uri;
  }
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),f={href:"http://sever.info",target:"_blank",rel:"noopener noreferrer"},x={href:"http://www.sever.info",target:"_blank",rel:"noopener noreferrer"},g={id:"项目处于安全考虑-通过-nginx-强制-http-转换成-https-但遇到报-get-不支持错误。",tabindex:"-1"},b=e("a",{class:"header-anchor",href:"#项目处于安全考虑-通过-nginx-强制-http-转换成-https-但遇到报-get-不支持错误。","aria-hidden":"true"},"#",-1),T={href:"https://blog.csdn.net/qq_42760638/article/details/118515698",target:"_blank",rel:"noopener noreferrer"},P=i(`<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>	server {
        ***
        //返回301永久重定向，307也是临时重定向，但它可以保持原请求的方法，不做修改的访问新地址。
-        return       301 https://$host$request_uri;
+        return       307 https://$host$request_uri;
        ***
	}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3xx-重定向" tabindex="-1"><a class="header-anchor" href="#_3xx-重定向" aria-hidden="true">#</a> 3XX 重定向</h3><ul><li>301 Moved Permanently : 永久性重定向</li><li>302 Found : 临时性重定向</li><li>303 See Other : 和- 302 有着相同的功能，但是 303 明确要求客户端应该采用 GET 方法获取资源。 注: 虽然 HTTP 协议规定 301、302 状态下重定向时不允许把 POST 方法改成 GET 方法，但是大多数浏览器都会在 301、302 和 303 状态下的重定向把 POST 方法改成 GET 方法。</li><li>304 Not Modified : 如果请求报文首部包含一些条件，例如: If-Match，If-Modified-Since，If-None-Match，If-Range，If-Unmodified-Since，如果不满足条件，则服务器会返回 304 状态码。</li><li>307 Temporary Redirect : 临时重定向，与 302 的含义类似，但是 307 要求浏览器不会把重定向请求的 POST 方法改成 GET 方法。</li></ul>`,3),S={href:"https://www.pdai.tech/md/develop/protocol/dev-protocol-http.html#url",target:"_blank",rel:"noopener noreferrer"};function N(k,w){const n=l("ExternalLinkIcon");return a(),d("div",null,[c,o(" more "),_,e("h3",u,[p,t(),e("a",v,[t("使用 Nginx 将 HTTP 重定向到 HTTPS"),r(n)])]),m,e("p",null,[t("!> 这里的服务器名字(server name)是个通配符_：也就是无论 URL 中包含什么域名，当请求到达 Nginx 服务器以后，都会被重定向到 HTTPS。比如说，无论是 "),e("a",f,[t("http://sever.info"),r(n)]),t(" 还是 "),e("a",x,[t("http://www.sever.info"),r(n)]),t(" 都会被重定向到它们相应的 HTTPS 链接。")]),e("h3",g,[b,t(),e("a",T,[t("项目处于安全考虑，通过 nginx 强制 http 转换成 https，但遇到报 GET 不支持错误。"),r(n)])]),P,e("p",null,[t("!> "),e("a",S,[t("网络协议 - HTTP 协议详解"),r(n)])])])}const H=s(h,[["render",N],["__file","nginx.html.vue"]]);export{H as default};

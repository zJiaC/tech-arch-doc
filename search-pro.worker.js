const g=(o,a)=>{const i=o.toLowerCase(),e=a.toLowerCase(),s=[];let n=0,l=0;const c=(t,p=!1)=>{let r="";l===0?r=t.length>20?`… ${t.slice(-20)}`:t:p?r=t.length+l>100?`${t.slice(0,100-l)}… `:t:r=t.length>20?`${t.slice(0,20)} … ${t.slice(-20)}`:t,r&&s.push(r),l+=r.length,p||(s.push(["strong",a]),l+=a.length,l>=100&&s.push(" …"))};let h=i.indexOf(e,n);if(h===-1)return null;for(;h>=0;){const t=h+e.length;if(c(o.slice(n,h)),n=t,l>100)break;h=i.indexOf(e,n)}return l<100&&c(o.slice(n),!0),s},d=Object.entries,y=Object.keys,f=o=>o.reduce((a,{type:i})=>a+(i==="title"?50:i==="heading"?20:i==="custom"?10:1),0),$=(o,a)=>{var i;const e={};for(const[s,n]of d(a)){const l=((i=a[s.replace(/\/[^\\]*$/,"")])==null?void 0:i.title)||"",c=`${l?`${l} > `:""}${n.title}`,h=g(n.title,o);h&&(e[c]=[...e[c]||[],{type:"title",path:s,display:h}]),n.customFields&&d(n.customFields).forEach(([t,p])=>{p.forEach(r=>{const u=g(r,o);u&&(e[c]=[...e[c]||[],{type:"custom",path:s,index:t,display:u}])})});for(const t of n.contents){const p=g(t.header,o);p&&(e[c]=[...e[c]||[],{type:"heading",path:s+(t.slug?`#${t.slug}`:""),display:p}]);for(const r of t.contents){const u=g(r,o);u&&(e[c]=[...e[c]||[],{type:"content",header:t.header,path:s+(t.slug?`#${t.slug}`:""),display:u}])}}}return y(e).sort((s,n)=>f(e[s])-f(e[n])).map(s=>({title:s,contents:e[s]}))},m=JSON.parse("{\"/\":{\"/slide.html\":{\"title\":\"幻灯片页\",\"contents\":[]},\"/guide/\":{\"title\":\"主要功能与配置演示\",\"contents\":[{\"header\":\"\",\"slug\":\"\",\"contents\":[\"页面展示\",\"Markdown 展示\",\"禁用展示\"]}]},\"/guide/disable.html\":{\"title\":\"布局与功能禁用\",\"contents\":[]},\"/guide/markdown.html\":{\"title\":\"Markdown 增强\",\"contents\":[{\"header\":\"Markdown 介绍\",\"slug\":\"markdown-介绍\",\"contents\":[]},{\"header\":\"VuePress 扩展\",\"slug\":\"vuepress-扩展\",\"contents\":[]},{\"header\":\"主题扩展\",\"slug\":\"主题扩展\",\"contents\":[]},{\"header\":\"一键启用\",\"slug\":\"一键启用\",\"contents\":[]},{\"header\":\"自定义容器\",\"slug\":\"自定义容器\",\"contents\":[]},{\"header\":\"代码块\",\"slug\":\"代码块\",\"contents\":[]},{\"header\":\"自定义对齐\",\"slug\":\"自定义对齐\",\"contents\":[]},{\"header\":\"上下角标\",\"slug\":\"上下角标\",\"contents\":[]},{\"header\":\"脚注\",\"slug\":\"脚注\",\"contents\":[]},{\"header\":\"标记\",\"slug\":\"标记\",\"contents\":[]},{\"header\":\"任务列表\",\"slug\":\"任务列表\",\"contents\":[]},{\"header\":\"图表\",\"slug\":\"图表\",\"contents\":[]},{\"header\":\"流程图\",\"slug\":\"流程图\",\"contents\":[]},{\"header\":\"Mermaid\",\"slug\":\"mermaid\",\"contents\":[]},{\"header\":\"Tex 语法\",\"slug\":\"tex-语法\",\"contents\":[]},{\"header\":\"代码演示\",\"slug\":\"代码演示\",\"contents\":[]}]},\"/guide/page.html\":{\"title\":\"页面配置\",\"contents\":[{\"header\":\"页面信息\",\"slug\":\"页面信息\",\"contents\":[]},{\"header\":\"页面内容\",\"slug\":\"页面内容\",\"contents\":[]}]},\"/posts/english/That's%20Why%20(You%20Go%20Away).html\":{\"title\":\"That's Why (You Go Away)\",\"contents\":[]},\"/posts/interview/\":{\"title\":\"\",\"contents\":[{\"header\":\"\",\"slug\":\"\",\"contents\":[\"目录 \",\"个人面试归纳\",\"Java 八股文\"]}]},\"/posts/interview/eight-legged-essay-java.html\":{\"title\":\"Java 八股文\",\"contents\":[{\"header\":\"一、Java基础 44 道\",\"slug\":\"一、java基础-44-道\",\"contents\":[]},{\"header\":\"解释下什么是面向对象？面向对象和面向过程的区别？\",\"slug\":\"解释下什么是面向对象-面向对象和面向过程的区别\",\"contents\":[]},{\"header\":\"面向对象的三大特性？分别解释下？\",\"slug\":\"面向对象的三大特性-分别解释下\",\"contents\":[]},{\"header\":\"JDK、JRE、JVM 三者之间的关系？\",\"slug\":\"jdk、jre、jvm-三者之间的关系\",\"contents\":[]},{\"header\":\"重载和重写的区别？\",\"slug\":\"重载和重写的区别\",\"contents\":[]},{\"header\":\"Java 中是否可以重写一个 private 或者 static 方法？\",\"slug\":\"java-中是否可以重写一个-private-或者-static-方法\",\"contents\":[]},{\"header\":\"构造方法有哪些特性？\",\"slug\":\"构造方法有哪些特性\",\"contents\":[]},{\"header\":\"在 Java 中定义一个不做事且没有参数的构造方法有什么作用？\",\"slug\":\"在-java-中定义一个不做事且没有参数的构造方法有什么作用\",\"contents\":[]},{\"header\":\"Java 中创建对象的几种方式？\",\"slug\":\"java-中创建对象的几种方式\",\"contents\":[]},{\"header\":\"抽象类和接口有什么区别？\",\"slug\":\"抽象类和接口有什么区别\",\"contents\":[]},{\"header\":\"静态变量和实例变量的区别？\",\"slug\":\"静态变量和实例变量的区别\",\"contents\":[]},{\"header\":\"12、short s1 = 1；s1 = s1 + 1；有什么错？那么 short s1 = 1; s1 += 1；呢？有没有错误？\",\"slug\":\"_12、short-s1-1-s1-s1-1-有什么错-那么-short-s1-1-s1-1-呢-有没有错误\",\"contents\":[]},{\"header\":\"Integer 和 int 的区别？\",\"slug\":\"integer-和-int-的区别\",\"contents\":[]},{\"header\":\"装箱和拆箱的区别\",\"slug\":\"装箱和拆箱的区别\",\"contents\":[]},{\"header\":\"switch 语句能否作用在 byte 上，能否作用在 long 上，能否作用在 String 上？\",\"slug\":\"switch-语句能否作用在-byte-上-能否作用在-long-上-能否作用在-string-上\",\"contents\":[]},{\"header\":\"final、finally、finalize 的区别\",\"slug\":\"final、finally、finalize-的区别\",\"contents\":[]},{\"header\":\"== 和 equals 的区别？\",\"slug\":\"和-equals-的区别\",\"contents\":[]},{\"header\":\"两个对象的 hashCode() 相同，则 equals() 也一定为 true 吗？\",\"slug\":\"两个对象的-hashcode-相同-则-equals-也一定为-true-吗\",\"contents\":[]},{\"header\":\"为什么重写 equals() 就一定要重写 hashCode() 方法？\",\"slug\":\"为什么重写-equals-就一定要重写-hashcode-方法\",\"contents\":[]},{\"header\":\"& 和 && 的区别？\",\"slug\":\"和-的区别\",\"contents\":[]},{\"header\":\"Java 中的参数传递时传值呢？还是传引用？\",\"slug\":\"java-中的参数传递时传值呢-还是传引用\",\"contents\":[]},{\"header\":\"Java 中的 Math.round(-1.5) 等于多少？\",\"slug\":\"java-中的-math-round-1-5-等于多少\",\"contents\":[]},{\"header\":\"如何实现对象的克隆？\",\"slug\":\"如何实现对象的克隆\",\"contents\":[]},{\"header\":\"深克隆和浅克隆的区别？\",\"slug\":\"深克隆和浅克隆的区别\",\"contents\":[]},{\"header\":\"什么是 Java 的序列化，如何实现 Java 的序列化？\",\"slug\":\"什么是-java-的序列化-如何实现-java-的序列化\",\"contents\":[]},{\"header\":\"什么情况下需要序列化？\",\"slug\":\"什么情况下需要序列化\",\"contents\":[]},{\"header\":\"Java 的泛型是如何工作的 ? 什么是类型擦除 ?\",\"slug\":\"java-的泛型是如何工作的-什么是类型擦除\",\"contents\":[]},{\"header\":\"什么是泛型中的限定通配符和非限定通配符 ?\",\"slug\":\"什么是泛型中的限定通配符和非限定通配符\",\"contents\":[]},{\"header\":\"List 和 ArrayList 之间有什么区别 ?\",\"slug\":\"list-和-arraylist-之间有什么区别\",\"contents\":[]},{\"header\":\"Java 中的反射是什么意思？有哪些应用场景？\",\"slug\":\"java-中的反射是什么意思-有哪些应用场景\",\"contents\":[]},{\"header\":\"反射的优缺点？\",\"slug\":\"反射的优缺点\",\"contents\":[]},{\"header\":\"Java 中的动态代理是什么？有哪些应用？\",\"slug\":\"java-中的动态代理是什么-有哪些应用\",\"contents\":[]},{\"header\":\"怎么实现动态代理？\",\"slug\":\"怎么实现动态代理\",\"contents\":[]},{\"header\":\"static 关键字的作用？\",\"slug\":\"static-关键字的作用\",\"contents\":[]},{\"header\":\"super 关键字的作用？\",\"slug\":\"super-关键字的作用\",\"contents\":[]},{\"header\":\"字节和字符的区别？\",\"slug\":\"字节和字符的区别\",\"contents\":[]},{\"header\":\"String 为什么要设计为不可变类？\",\"slug\":\"string-为什么要设计为不可变类\",\"contents\":[]},{\"header\":\"String、StringBuilder、StringBuffer 的区别？\",\"slug\":\"string、stringbuilder、stringbuffer-的区别\",\"contents\":[]},{\"header\":\"String 字符串修改实现的原理？\",\"slug\":\"string-字符串修改实现的原理\",\"contents\":[]},{\"header\":\"String str = \\\"i\\\" 与 String str = new String(\\\"i\\\") 一样吗？\",\"slug\":\"string-str-i-与-string-str-new-string-i-一样吗\",\"contents\":[]},{\"header\":\"String 类的常用方法都有那些？\",\"slug\":\"string-类的常用方法都有那些\",\"contents\":[]},{\"header\":\"final 修饰 StringBuffer 后还可以 append 吗？\",\"slug\":\"final-修饰-stringbuffer-后还可以-append-吗\",\"contents\":[]},{\"header\":\"Java 中的 IO 流的分类？说出几个你熟悉的实现类？\",\"slug\":\"java-中的-io-流的分类-说出几个你熟悉的实现类\",\"contents\":[]},{\"header\":\"字节流和字符流有什么区别？\",\"slug\":\"字节流和字符流有什么区别\",\"contents\":[]},{\"header\":\"BIO、NIO、AIO 有什么区别？\",\"slug\":\"bio、nio、aio-有什么区别\",\"contents\":[]},{\"header\":\"二、Java异常 9 道\",\"slug\":\"二、java异常-9-道\",\"contents\":[]},{\"header\":\"finally 块中的代码什么时候被执行？\",\"slug\":\"finally-块中的代码什么时候被执行\",\"contents\":[]},{\"header\":\"finally 是不是一定会被执行到？\",\"slug\":\"finally-是不是一定会被执行到\",\"contents\":[]},{\"header\":\"try-catch-finally 中，如果 catch 中 return 了，finally 还会执行吗？\",\"slug\":\"try-catch-finally-中-如果-catch-中-return-了-finally-还会执行吗\",\"contents\":[]},{\"header\":\"try-catch-finally 中那个部分可以省略？\",\"slug\":\"try-catch-finally-中那个部分可以省略\",\"contents\":[]},{\"header\":\"Error 和 Exception 的区别？\",\"slug\":\"error-和-exception-的区别\",\"contents\":[]},{\"header\":\"运行时异常与受检异常有何异同？\",\"slug\":\"运行时异常与受检异常有何异同\",\"contents\":[]},{\"header\":\"throw 和 throws 的区别？\",\"slug\":\"throw-和-throws-的区别\",\"contents\":[]},{\"header\":\"常见的异常类有哪些？\",\"slug\":\"常见的异常类有哪些\",\"contents\":[]},{\"header\":\"主线程可以捕获到子线程的异常吗？\",\"slug\":\"主线程可以捕获到子线程的异常吗\",\"contents\":[]},{\"header\":\"三、Java集合 24 道\",\"slug\":\"三、java集合-24-道\",\"contents\":[]},{\"header\":\"Java 中常用的容器有哪些？\",\"slug\":\"java-中常用的容器有哪些\",\"contents\":[]},{\"header\":\"ArrayList 和 LinkedList 的区别？\",\"slug\":\"arraylist-和-linkedlist-的区别\",\"contents\":[]},{\"header\":\"ArrayList 实现 RandomAccess 接口有何作用？为何 LinkedList 却没实现这个接口？\",\"slug\":\"arraylist-实现-randomaccess-接口有何作用-为何-linkedlist-却没实现这个接口\",\"contents\":[]},{\"header\":\"ArrayList 的扩容机制？\",\"slug\":\"arraylist-的扩容机制\",\"contents\":[]},{\"header\":\"Array 和 ArrayList 有何区别？什么时候更适合用 Array？\",\"slug\":\"array-和-arraylist-有何区别-什么时候更适合用-array\",\"contents\":[]},{\"header\":\"HashMap 的实现原理/底层数据结构？JDK1.7 和 JDK1.8\",\"slug\":\"hashmap-的实现原理-底层数据结构-jdk1-7-和-jdk1-8\",\"contents\":[]},{\"header\":\"HashMap 的 put 方法的执行过程？\",\"slug\":\"hashmap-的-put-方法的执行过程\",\"contents\":[]},{\"header\":\"HashMap 的 get 方法的执行过程？\",\"slug\":\"hashmap-的-get-方法的执行过程\",\"contents\":[]},{\"header\":\"HashMap 的 resize 方法的执行过程？\",\"slug\":\"hashmap-的-resize-方法的执行过程\",\"contents\":[]},{\"header\":\"HashMap 的 size 为什么必须是 2 的整数次方？\",\"slug\":\"hashmap-的-size-为什么必须是-2-的整数次方\",\"contents\":[]},{\"header\":\"HashMap 多线程死循环问题？\",\"slug\":\"hashmap-多线程死循环问题\",\"contents\":[]},{\"header\":\"HashMap 的 get 方法能否判断某个元素是否在 map 中？\",\"slug\":\"hashmap-的-get-方法能否判断某个元素是否在-map-中\",\"contents\":[]},{\"header\":\"HashMap 与 HashTable 的区别是什么？\",\"slug\":\"hashmap-与-hashtable-的区别是什么\",\"contents\":[]},{\"header\":\"HashMap 与 ConcurrentHashMap 的区别是什么?\",\"slug\":\"hashmap-与-concurrenthashmap-的区别是什么\",\"contents\":[]},{\"header\":\"HashTable 和 ConcurrentHashMap 的区别？\",\"slug\":\"hashtable-和-concurrenthashmap-的区别\",\"contents\":[]},{\"header\":\"ConcurrentHashMap 的实现原理是什么？\",\"slug\":\"concurrenthashmap-的实现原理是什么\",\"contents\":[]},{\"header\":\"HashSet 的实现原理？\",\"slug\":\"hashset-的实现原理\",\"contents\":[]},{\"header\":\"HashSet 怎么保证元素不重复的？\",\"slug\":\"hashset-怎么保证元素不重复的\",\"contents\":[]},{\"header\":\"LinkedHashMap 的实现原理?\",\"slug\":\"linkedhashmap-的实现原理\",\"contents\":[]},{\"header\":\"Iterator 怎么使用？有什么特点？\",\"slug\":\"iterator-怎么使用-有什么特点\",\"contents\":[]},{\"header\":\"Iterator 和 ListIterator 有什么区别？\",\"slug\":\"iterator-和-listiterator-有什么区别\",\"contents\":[]},{\"header\":\"Iterator 和 Enumeration 接口的区别？\",\"slug\":\"iterator-和-enumeration-接口的区别\",\"contents\":[]},{\"header\":\"fail-fast 与 fail-safe 有什么区别？\",\"slug\":\"fail-fast-与-fail-safe-有什么区别\",\"contents\":[]},{\"header\":\"Collection 和 Collections 有什么区别？\",\"slug\":\"collection-和-collections-有什么区别\",\"contents\":[]},{\"header\":\"四、Java并发 42 道\",\"slug\":\"四、java并发-42-道\",\"contents\":[]},{\"header\":\"并行和并发有什么区别？\",\"slug\":\"并行和并发有什么区别\",\"contents\":[]},{\"header\":\"线程和进程的区别？\",\"slug\":\"线程和进程的区别\",\"contents\":[]},{\"header\":\"守护线程是什么？\",\"slug\":\"守护线程是什么\",\"contents\":[]},{\"header\":\"创建线程的几种方式？\",\"slug\":\"创建线程的几种方式\",\"contents\":[]},{\"header\":\"Runnable 和 Callable 有什么区别？\",\"slug\":\"runnable-和-callable-有什么区别\",\"contents\":[]},{\"header\":\"线程状态及转换？\",\"slug\":\"线程状态及转换\",\"contents\":[]},{\"header\":\"sleep() 和 wait() 的区别？\",\"slug\":\"sleep-和-wait-的区别\",\"contents\":[]},{\"header\":\"线程的 run() 和 start() 有什么区别？\",\"slug\":\"线程的-run-和-start-有什么区别\",\"contents\":[]},{\"header\":\"在 Java 程序中怎么保证多线程的运行安全？\",\"slug\":\"在-java-程序中怎么保证多线程的运行安全\",\"contents\":[]},{\"header\":\"Java 线程同步的几种方法？\",\"slug\":\"java-线程同步的几种方法\",\"contents\":[]},{\"header\":\"Thread.interrupt() 方法的工作原理是什么？\",\"slug\":\"thread-interrupt-方法的工作原理是什么\",\"contents\":[]},{\"header\":\"谈谈对 ThreadLocal 的理解？\",\"slug\":\"谈谈对-threadlocal-的理解\",\"contents\":[]},{\"header\":\"在哪些场景下会使用到 ThreadLocal？\",\"slug\":\"在哪些场景下会使用到-threadlocal\",\"contents\":[]},{\"header\":\"说一说自己对于 synchronized 关键字的了解？\",\"slug\":\"说一说自己对于-synchronized-关键字的了解\",\"contents\":[]},{\"header\":\"如何在项目中使用 synchronized 的？\",\"slug\":\"如何在项目中使用-synchronized-的\",\"contents\":[]},{\"header\":\"说说 JDK1.6 之后的 synchronized 关键字底层做了哪些优化，可以详细介绍一下这些优化吗？\",\"slug\":\"说说-jdk1-6-之后的-synchronized-关键字底层做了哪些优化-可以详细介绍一下这些优化吗\",\"contents\":[]},{\"header\":\"谈谈 synchronized 和 ReenTrantLock 的区别？\",\"slug\":\"谈谈-synchronized-和-reentrantlock-的区别\",\"contents\":[]},{\"header\":\"synchronized 和 volatile 的区别是什么？\",\"slug\":\"synchronized-和-volatile-的区别是什么\",\"contents\":[]},{\"header\":\"谈一下你对 volatile 关键字的理解？\",\"slug\":\"谈一下你对-volatile-关键字的理解\",\"contents\":[]},{\"header\":\"说下对 ReentrantReadWriteLock 的理解？\",\"slug\":\"说下对-reentrantreadwritelock-的理解\",\"contents\":[]},{\"header\":\"说下对悲观锁和乐观锁的理解？\",\"slug\":\"说下对悲观锁和乐观锁的理解\",\"contents\":[]},{\"header\":\"乐观锁常见的两种实现方式是什么？\",\"slug\":\"乐观锁常见的两种实现方式是什么\",\"contents\":[]},{\"header\":\"乐观锁的缺点有哪些？\",\"slug\":\"乐观锁的缺点有哪些\",\"contents\":[]},{\"header\":\"CAS 和 synchronized 的使用场景？\",\"slug\":\"cas-和-synchronized-的使用场景\",\"contents\":[]},{\"header\":\"简单说下对 Java 中的原子类的理解？\",\"slug\":\"简单说下对-java-中的原子类的理解\",\"contents\":[]},{\"header\":\"atomic 的原理是什么？\",\"slug\":\"atomic-的原理是什么\",\"contents\":[]},{\"header\":\"说下对同步器 AQS 的理解？\",\"slug\":\"说下对同步器-aqs-的理解\",\"contents\":[]},{\"header\":\"AQS 的原理是什么？\",\"slug\":\"aqs-的原理是什么\",\"contents\":[]},{\"header\":\"AQS 对资源的共享模式有哪些？\",\"slug\":\"aqs-对资源的共享模式有哪些\",\"contents\":[]},{\"header\":\"AQS 底层使用了模板方法模式，你能说出几个需要重写的方法吗？\",\"slug\":\"aqs-底层使用了模板方法模式-你能说出几个需要重写的方法吗\",\"contents\":[]},{\"header\":\"说下对信号量 Semaphore 的理解？\",\"slug\":\"说下对信号量-semaphore-的理解\",\"contents\":[]},{\"header\":\"CountDownLatch 和 CyclicBarrier 有什么区别？\",\"slug\":\"countdownlatch-和-cyclicbarrier-有什么区别\",\"contents\":[]},{\"header\":\"说下对线程池的理解？为什么要使用线程池？\",\"slug\":\"说下对线程池的理解-为什么要使用线程池\",\"contents\":[]},{\"header\":\"创建线程池的参数有哪些？\",\"slug\":\"创建线程池的参数有哪些\",\"contents\":[]},{\"header\":\"如何创建线程池？\",\"slug\":\"如何创建线程池\",\"contents\":[]},{\"header\":\"线程池中的的线程数一般怎么设置？需要考虑哪些问题？\",\"slug\":\"线程池中的的线程数一般怎么设置-需要考虑哪些问题\",\"contents\":[]},{\"header\":\"执行 execute() 方法和 submit() 方法的区别是什么呢？\",\"slug\":\"执行-execute-方法和-submit-方法的区别是什么呢\",\"contents\":[]},{\"header\":\"说下对 Fork和Join 并行计算框架的理解？\",\"slug\":\"说下对-fork和join-并行计算框架的理解\",\"contents\":[]},{\"header\":\"JDK 中提供了哪些并发容器？\",\"slug\":\"jdk-中提供了哪些并发容器\",\"contents\":[]},{\"header\":\"谈谈对 CopyOnWriteArrayList 的理解？\",\"slug\":\"谈谈对-copyonwritearraylist-的理解\",\"contents\":[]},{\"header\":\"谈谈对 BlockingQueue 的理解？分别有哪些实现类？\",\"slug\":\"谈谈对-blockingqueue-的理解-分别有哪些实现类\",\"contents\":[]},{\"header\":\"谈谈对 ConcurrentSkipListMap 的理解？\",\"slug\":\"谈谈对-concurrentskiplistmap-的理解\",\"contents\":[]},{\"header\":\"五、Java JVM 42 道\",\"slug\":\"五、java-jvm-42-道\",\"contents\":[]},{\"header\":\"说一下 Jvm 的主要组成部分？及其作用？\",\"slug\":\"说一下-jvm-的主要组成部分-及其作用\",\"contents\":[]},{\"header\":\"谈谈对运行时数据区的理解？\",\"slug\":\"谈谈对运行时数据区的理解\",\"contents\":[]},{\"header\":\"堆和栈的区别是什么？\",\"slug\":\"堆和栈的区别是什么\",\"contents\":[]},{\"header\":\"堆中存什么？栈中存什么？\",\"slug\":\"堆中存什么-栈中存什么\",\"contents\":[]},{\"header\":\"为什么要把堆和栈区分出来呢？栈中不是也可以存储数据吗？\",\"slug\":\"为什么要把堆和栈区分出来呢-栈中不是也可以存储数据吗\",\"contents\":[]},{\"header\":\"Java 中的参数传递时传值呢？还是传引用？\",\"slug\":\"java-中的参数传递时传值呢-还是传引用-1\",\"contents\":[]},{\"header\":\"Java 对象的大小是怎么计算的？\",\"slug\":\"java-对象的大小是怎么计算的\",\"contents\":[]},{\"header\":\"对象的访问定位的两种方式？\",\"slug\":\"对象的访问定位的两种方式\",\"contents\":[]},{\"header\":\"判断垃圾可以回收的方法有哪些？\",\"slug\":\"判断垃圾可以回收的方法有哪些\",\"contents\":[]},{\"header\":\"垃圾回收是从哪里开始的呢？\",\"slug\":\"垃圾回收是从哪里开始的呢\",\"contents\":[]},{\"header\":\"被标记为垃圾的对象一定会被回收吗？\",\"slug\":\"被标记为垃圾的对象一定会被回收吗\",\"contents\":[]},{\"header\":\"谈谈对 Java 中引用的了解？\",\"slug\":\"谈谈对-java-中引用的了解\",\"contents\":[]},{\"header\":\"谈谈对内存泄漏的理解？\",\"slug\":\"谈谈对内存泄漏的理解\",\"contents\":[]},{\"header\":\"内存泄露的根本原因是什么？\",\"slug\":\"内存泄露的根本原因是什么\",\"contents\":[]},{\"header\":\"举几个可能发生内存泄漏的情况？\",\"slug\":\"举几个可能发生内存泄漏的情况\",\"contents\":[]},{\"header\":\"尽量避免内存泄漏的方法？\",\"slug\":\"尽量避免内存泄漏的方法\",\"contents\":[]},{\"header\":\"常用的垃圾收集算法有哪些？\",\"slug\":\"常用的垃圾收集算法有哪些\",\"contents\":[]},{\"header\":\"为什么要采用分代收集算法？\",\"slug\":\"为什么要采用分代收集算法\",\"contents\":[]},{\"header\":\"分代收集下的年轻代和老年代应该采用什么样的垃圾回收算法？\",\"slug\":\"分代收集下的年轻代和老年代应该采用什么样的垃圾回收算法\",\"contents\":[]},{\"header\":\"什么是浮动垃圾？\",\"slug\":\"什么是浮动垃圾\",\"contents\":[]},{\"header\":\"什么是内存碎片？如何解决？\",\"slug\":\"什么是内存碎片-如何解决\",\"contents\":[]},{\"header\":\"常用的垃圾收集器有哪些？\",\"slug\":\"常用的垃圾收集器有哪些\",\"contents\":[]},{\"header\":\"谈谈你对 CMS 垃圾收集器的理解？\",\"slug\":\"谈谈你对-cms-垃圾收集器的理解\",\"contents\":[]},{\"header\":\"谈谈你对 G1 收集器的理解？\",\"slug\":\"谈谈你对-g1-收集器的理解\",\"contents\":[]},{\"header\":\"说下你对垃圾回收策略的理解/垃圾回收时机？\",\"slug\":\"说下你对垃圾回收策略的理解-垃圾回收时机\",\"contents\":[]},{\"header\":\"谈谈你对内存分配的理解？大对象怎么分配？空间分配担保？\",\"slug\":\"谈谈你对内存分配的理解-大对象怎么分配-空间分配担保\",\"contents\":[]},{\"header\":\"说下你用过的 JVM 监控工具？\",\"slug\":\"说下你用过的-jvm-监控工具\",\"contents\":[]},{\"header\":\"如何利用监控工具调优？\",\"slug\":\"如何利用监控工具调优\",\"contents\":[]},{\"header\":\"JVM 的一些参数？\",\"slug\":\"jvm-的一些参数\",\"contents\":[]},{\"header\":\"谈谈你对类文件结构的理解？有哪些部分组成？\",\"slug\":\"谈谈你对类文件结构的理解-有哪些部分组成\",\"contents\":[]},{\"header\":\"谈谈你对类加载机制的了解？\",\"slug\":\"谈谈你对类加载机制的了解\",\"contents\":[]},{\"header\":\"类加载各阶段的作用分别是什么？\",\"slug\":\"类加载各阶段的作用分别是什么\",\"contents\":[]},{\"header\":\"有哪些类加载器？分别有什么作用？\",\"slug\":\"有哪些类加载器-分别有什么作用\",\"contents\":[]},{\"header\":\"类与类加载器的关系?\",\"slug\":\"类与类加载器的关系\",\"contents\":[]},{\"header\":\"谈谈你对双亲委派模型的理解？工作过程？为什么要使用\",\"slug\":\"谈谈你对双亲委派模型的理解-工作过程-为什么要使用\",\"contents\":[]},{\"header\":\"怎么实现一个自定义的类加载器？需要注意什么？\",\"slug\":\"怎么实现一个自定义的类加载器-需要注意什么\",\"contents\":[]},{\"header\":\"怎么打破双亲委派模型？\",\"slug\":\"怎么打破双亲委派模型\",\"contents\":[]},{\"header\":\"有哪些实际场景是需要打破双亲委派模型的？\",\"slug\":\"有哪些实际场景是需要打破双亲委派模型的\",\"contents\":[]},{\"header\":\"谈谈你对编译期优化和运行期优化的理解？\",\"slug\":\"谈谈你对编译期优化和运行期优化的理解\",\"contents\":[]},{\"header\":\"为何 HotSpot 虚拟机要使用解释器与编译器并存的架构？\",\"slug\":\"为何-hotspot-虚拟机要使用解释器与编译器并存的架构\",\"contents\":[]},{\"header\":\"说下你对 Java 内存模型的理解？\",\"slug\":\"说下你对-java-内存模型的理解\",\"contents\":[]},{\"header\":\"内存间的交互操作有哪些？需要满足什么规则？\",\"slug\":\"内存间的交互操作有哪些-需要满足什么规则\",\"contents\":[]},{\"header\":\"六、SSM框架 37 道\",\"slug\":\"六、ssm框架-37-道\",\"contents\":[]},{\"header\":\"使用 Spring 框架的好处是什么？\",\"slug\":\"使用-spring-框架的好处是什么\",\"contents\":[]},{\"header\":\"解释下什么是 AOP？\",\"slug\":\"解释下什么是-aop\",\"contents\":[]},{\"header\":\"AOP 的代理有哪几种方式？\",\"slug\":\"aop-的代理有哪几种方式\",\"contents\":[]},{\"header\":\"怎么实现 JDK 动态代理？\",\"slug\":\"怎么实现-jdk-动态代理\",\"contents\":[]},{\"header\":\"AOP 的基本概念：切面、连接点、切入点等？\",\"slug\":\"aop-的基本概念-切面、连接点、切入点等\",\"contents\":[]},{\"header\":\"通知类型（Advice）型（Advice）有哪些？\",\"slug\":\"通知类型-advice-型-advice-有哪些\",\"contents\":[]},{\"header\":\"谈谈你对 IOC 的理解？\",\"slug\":\"谈谈你对-ioc-的理解\",\"contents\":[]},{\"header\":\"Bean 的生命周期？\",\"slug\":\"bean-的生命周期\",\"contents\":[]},{\"header\":\"Bean 的作用域?\",\"slug\":\"bean-的作用域\",\"contents\":[]},{\"header\":\"Spring 中的单例 Bean 的线程安全问题了解吗？\",\"slug\":\"spring-中的单例-bean-的线程安全问题了解吗\",\"contents\":[]},{\"header\":\"谈谈你对 Spring 中的事物的理解？\",\"slug\":\"谈谈你对-spring-中的事物的理解\",\"contents\":[]},{\"header\":\"Spring 中的事务隔离级别？\",\"slug\":\"spring-中的事务隔离级别\",\"contents\":[]},{\"header\":\"Spring 中的事物传播行为？\",\"slug\":\"spring-中的事物传播行为\",\"contents\":[]},{\"header\":\"Spring 常用的注入方式有哪些？\",\"slug\":\"spring-常用的注入方式有哪些\",\"contents\":[]},{\"header\":\"Spring 框架中用到了哪些设计模式？\",\"slug\":\"spring-框架中用到了哪些设计模式\",\"contents\":[]},{\"header\":\"ApplicationContext 通常的实现有哪些?\",\"slug\":\"applicationcontext-通常的实现有哪些\",\"contents\":[]},{\"header\":\"谈谈你对 MVC 模式的理解？\",\"slug\":\"谈谈你对-mvc-模式的理解\",\"contents\":[]},{\"header\":\"SpringMVC 的工作原理/执行流程？\",\"slug\":\"springmvc-的工作原理-执行流程\",\"contents\":[]},{\"header\":\"SpringMVC 的核心组件有哪些？\",\"slug\":\"springmvc-的核心组件有哪些\",\"contents\":[]},{\"header\":\"SpringMVC 常用的注解有哪些？\",\"slug\":\"springmvc-常用的注解有哪些\",\"contents\":[]},{\"header\":\"@RequestMapping 的作用是什么？\",\"slug\":\"requestmapping-的作用是什么\",\"contents\":[]},{\"header\":\"如何解决 POST 请求中文乱码问题，GET 的又如何处理呢？\",\"slug\":\"如何解决-post-请求中文乱码问题-get-的又如何处理呢\",\"contents\":[]},{\"header\":\"SpringMVC 的控制器是不是单例模式，如果是会有什么问题，怎么解决？\",\"slug\":\"springmvc-的控制器是不是单例模式-如果是会有什么问题-怎么解决\",\"contents\":[]},{\"header\":\"SpringMVC 怎么样设定重定向和转发的？\",\"slug\":\"springmvc-怎么样设定重定向和转发的\",\"contents\":[]},{\"header\":\"SpringMVC 里面拦截器是怎么写的？\",\"slug\":\"springmvc-里面拦截器是怎么写的\",\"contents\":[]},{\"header\":\"SpringMVC 和 Struts2 的区别有哪些?\",\"slug\":\"springmvc-和-struts2-的区别有哪些\",\"contents\":[]},{\"header\":\"谈谈你对 MyBatis 的理解？\",\"slug\":\"谈谈你对-mybatis-的理解\",\"contents\":[]},{\"header\":\"MyBaits 的优缺点有哪些？\",\"slug\":\"mybaits-的优缺点有哪些\",\"contents\":[]},{\"header\":\"MyBatis 与 Hibernate 有哪些不同？\",\"slug\":\"mybatis-与-hibernate-有哪些不同\",\"contents\":[]},{\"header\":\"MyBatis 中 #{} 和 ${}的区别是什么？\",\"slug\":\"mybatis-中-和-的区别是什么\",\"contents\":[]},{\"header\":\"MyBatis 是如何进行分页的？分页插件的原理是什么？\",\"slug\":\"mybatis-是如何进行分页的-分页插件的原理是什么\",\"contents\":[]},{\"header\":\"MyBatis 有几种分页方式？\",\"slug\":\"mybatis-有几种分页方式\",\"contents\":[]},{\"header\":\"MyBatis 逻辑分页和物理分页的区别是什么？\",\"slug\":\"mybatis-逻辑分页和物理分页的区别是什么\",\"contents\":[]},{\"header\":\"MyBatis 是否支持延迟加载？如果支持，它的实现原理是什么？\",\"slug\":\"mybatis-是否支持延迟加载-如果支持-它的实现原理是什么\",\"contents\":[]},{\"header\":\"说一下 MyBatis 的一级缓存和二级缓存？\",\"slug\":\"说一下-mybatis-的一级缓存和二级缓存\",\"contents\":[]},{\"header\":\"Mybatis 有哪些执行器（Executor）？\",\"slug\":\"mybatis-有哪些执行器-executor\",\"contents\":[]},{\"header\":\"MyBatis 动态 SQL 是做什么的？都有哪些动态 SQL？能简述一下动态 SQL的执行原理不？\",\"slug\":\"mybatis-动态-sql-是做什么的-都有哪些动态-sql-能简述一下动态-sql的执行原理不\",\"contents\":[]},{\"header\":\"答案在我整理的一本《Java面试八股文》PDF里都有，如果需要可以直接点击获取。\",\"slug\":\"答案在我整理的一本《java面试八股文》pdf里都有-如果需要可以直接点击获取。\",\"contents\":[]},{\"header\":\"七、MySQL 31 道\",\"slug\":\"七、mysql-31-道\",\"contents\":[]},{\"header\":\"请说下你对 MySQL 架构的了解？\",\"slug\":\"请说下你对-mysql-架构的了解\",\"contents\":[]},{\"header\":\"一条 SQL 语句在数据库框架中的执行流程？\",\"slug\":\"一条-sql-语句在数据库框架中的执行流程\",\"contents\":[]},{\"header\":\"数据库的三范式是什么？\",\"slug\":\"数据库的三范式是什么\",\"contents\":[]},{\"header\":\"char 和 varchar 的区别？\",\"slug\":\"char-和-varchar-的区别\",\"contents\":[]},{\"header\":\"varchar(10) 和 varchar(20) 的区别？\",\"slug\":\"varchar-10-和-varchar-20-的区别\",\"contents\":[]},{\"header\":\"谈谈你对索引的理解？\",\"slug\":\"谈谈你对索引的理解\",\"contents\":[]},{\"header\":\"索引的底层使用的是什么数据结构？\",\"slug\":\"索引的底层使用的是什么数据结构\",\"contents\":[]},{\"header\":\"谈谈你对 B+ 树的理解？\",\"slug\":\"谈谈你对-b-树的理解\",\"contents\":[]},{\"header\":\"为什么 InnoDB 存储引擎选用 B+ 树而不是 B 树呢？\",\"slug\":\"为什么-innodb-存储引擎选用-b-树而不是-b-树呢\",\"contents\":[]},{\"header\":\"谈谈你对聚簇索引的理解？\",\"slug\":\"谈谈你对聚簇索引的理解\",\"contents\":[]},{\"header\":\"谈谈你对哈希索引的理解？\",\"slug\":\"谈谈你对哈希索引的理解\",\"contents\":[]},{\"header\":\"谈谈你对覆盖索引的认识？\",\"slug\":\"谈谈你对覆盖索引的认识\",\"contents\":[]},{\"header\":\"索引的分类？\",\"slug\":\"索引的分类\",\"contents\":[]},{\"header\":\"谈谈你对最左前缀原则的理解？\",\"slug\":\"谈谈你对最左前缀原则的理解\",\"contents\":[]},{\"header\":\"怎么知道创建的索引有没有被使用到？或者说怎么才可以知道这条语句运行很慢的原因?\",\"slug\":\"怎么知道创建的索引有没有被使用到-或者说怎么才可以知道这条语句运行很慢的原因\",\"contents\":[]},{\"header\":\"什么情况下索引会失效？即查询不走索引？\",\"slug\":\"什么情况下索引会失效-即查询不走索引\",\"contents\":[]},{\"header\":\"查询性能的优化方法？\",\"slug\":\"查询性能的优化方法\",\"contents\":[]},{\"header\":\"InnoDB 和 MyISAM 的比较？\",\"slug\":\"innodb-和-myisam-的比较\",\"contents\":[]},{\"header\":\"谈谈你对水平切分和垂直切分的理解？\",\"slug\":\"谈谈你对水平切分和垂直切分的理解\",\"contents\":[]},{\"header\":\"主从复制中涉及到哪三个线程？\",\"slug\":\"主从复制中涉及到哪三个线程\",\"contents\":[]},{\"header\":\"主从同步的延迟原因及解决办法？\",\"slug\":\"主从同步的延迟原因及解决办法\",\"contents\":[]},{\"header\":\"谈谈你对数据库读写分离的理解？\",\"slug\":\"谈谈你对数据库读写分离的理解\",\"contents\":[]},{\"header\":\"请你描述下事务的特性？\",\"slug\":\"请你描述下事务的特性\",\"contents\":[]},{\"header\":\"谈谈你对事务隔离级别的理解？\",\"slug\":\"谈谈你对事务隔离级别的理解\",\"contents\":[]},{\"header\":\"解释下什么叫脏读、不可重复读和幻读？\",\"slug\":\"解释下什么叫脏读、不可重复读和幻读\",\"contents\":[]},{\"header\":\"MySQL 默认的隔离级别是什么？\",\"slug\":\"mysql-默认的隔离级别是什么\",\"contents\":[]},{\"header\":\"谈谈你对MVCC 的了解？\",\"slug\":\"谈谈你对mvcc-的了解\",\"contents\":[]},{\"header\":\"说一下 MySQL 的行锁和表锁？\",\"slug\":\"说一下-mysql-的行锁和表锁\",\"contents\":[]},{\"header\":\"InnoDB 存储引擎的锁的算法有哪些？\",\"slug\":\"innodb-存储引擎的锁的算法有哪些\",\"contents\":[]},{\"header\":\"MySQL 问题排查都有哪些手段？\",\"slug\":\"mysql-问题排查都有哪些手段\",\"contents\":[]},{\"header\":\"MySQL 数据库 CPU 飙升到 500% 的话他怎么处理？\",\"slug\":\"mysql-数据库-cpu-飙升到-500-的话他怎么处理\",\"contents\":[]},{\"header\":\"八、Redis 12 道\",\"slug\":\"八、redis-12-道\",\"contents\":[]},{\"header\":\"谈下你对 Redis 的了解？\",\"slug\":\"谈下你对-redis-的了解\",\"contents\":[]},{\"header\":\"Redis 一般都有哪些使用场景？\",\"slug\":\"redis-一般都有哪些使用场景\",\"contents\":[]},{\"header\":\"Redis 有哪些常见的功能？\",\"slug\":\"redis-有哪些常见的功能\",\"contents\":[]},{\"header\":\"Redis 支持的数据类型有哪些？\",\"slug\":\"redis-支持的数据类型有哪些\",\"contents\":[]},{\"header\":\"Redis 为什么这么快？\",\"slug\":\"redis-为什么这么快\",\"contents\":[]},{\"header\":\"什么是缓存穿透？怎么解决？\",\"slug\":\"什么是缓存穿透-怎么解决\",\"contents\":[]},{\"header\":\"什么是缓存雪崩？该如何解决？\",\"slug\":\"什么是缓存雪崩-该如何解决\",\"contents\":[]},{\"header\":\"怎么保证缓存和数据库数据的一致性？\",\"slug\":\"怎么保证缓存和数据库数据的一致性\",\"contents\":[]},{\"header\":\"Redis 持久化有几种方式？\",\"slug\":\"redis-持久化有几种方式\",\"contents\":[]},{\"header\":\"Redis 怎么实现分布式锁？\",\"slug\":\"redis-怎么实现分布式锁\",\"contents\":[]},{\"header\":\"Redis 淘汰策略有哪些？\",\"slug\":\"redis-淘汰策略有哪些\",\"contents\":[]},{\"header\":\"Redis 常见性能问题和解决方案？\",\"slug\":\"redis-常见性能问题和解决方案\",\"contents\":[]},{\"header\":\"九、计算机网络 45 道\",\"slug\":\"九、计算机网络-45-道\",\"contents\":[]},{\"header\":\"为什么需要三次握手？两次不行？\",\"slug\":\"为什么需要三次握手-两次不行\",\"contents\":[]},{\"header\":\"为什么需要四次挥手？三次不行？\",\"slug\":\"为什么需要四次挥手-三次不行\",\"contents\":[]},{\"header\":\"TCP与UDP有哪些区别？各自应用场景？\",\"slug\":\"tcp与udp有哪些区别-各自应用场景\",\"contents\":[]},{\"header\":\"HTTP1.0，1.1，2.0 的版本区别\",\"slug\":\"http1-0-1-1-2-0-的版本区别\",\"contents\":[]},{\"header\":\"POST和GET有哪些区别？各自应用场景？\",\"slug\":\"post和get有哪些区别-各自应用场景\",\"contents\":[]},{\"header\":\"HTTP 哪些常用的状态码及使用场景？\",\"slug\":\"http-哪些常用的状态码及使用场景\",\"contents\":[]},{\"header\":\"HTTP状态码301和302的区别，都有哪些用途？\",\"slug\":\"http状态码301和302的区别-都有哪些用途\",\"contents\":[]},{\"header\":\"在交互过程中如果数据传送完了，还不想断开连接怎么办，怎么维持？\",\"slug\":\"在交互过程中如果数据传送完了-还不想断开连接怎么办-怎么维持\",\"contents\":[]},{\"header\":\"HTTP 如何实现长连接？在什么时候会超时？\",\"slug\":\"http-如何实现长连接-在什么时候会超时\",\"contents\":[]},{\"header\":\"TCP 如何保证有效传输及拥塞控制原理\",\"slug\":\"tcp-如何保证有效传输及拥塞控制原理\",\"contents\":[]},{\"header\":\"IP地址有哪些分类？\",\"slug\":\"ip地址有哪些分类\",\"contents\":[]},{\"header\":\"GET请求中URL编码的意义\",\"slug\":\"get请求中url编码的意义\",\"contents\":[]},{\"header\":\"什么是SQL 注入？举个例子？\",\"slug\":\"什么是sql-注入-举个例子\",\"contents\":[]},{\"header\":\"谈一谈 XSS 攻击，举个例子？\",\"slug\":\"谈一谈-xss-攻击-举个例子\",\"contents\":[]},{\"header\":\"讲一下网络五层模型，每一层的职责？\",\"slug\":\"讲一下网络五层模型-每一层的职责\",\"contents\":[]},{\"header\":\"简单说下 HTTPS 和 HTTP 的区别\",\"slug\":\"简单说下-https-和-http-的区别\",\"contents\":[]},{\"header\":\"对称加密与非对称加密的区别\",\"slug\":\"对称加密与非对称加密的区别\",\"contents\":[]},{\"header\":\"简单说下每一层对应的网络协议有哪些？\",\"slug\":\"简单说下每一层对应的网络协议有哪些\",\"contents\":[]},{\"header\":\"ARP 协议的工作原理？\",\"slug\":\"arp-协议的工作原理\",\"contents\":[]},{\"header\":\"TCP 的主要特点是什么？\",\"slug\":\"tcp-的主要特点是什么\",\"contents\":[]},{\"header\":\"UDP 的主要特点是什么？\",\"slug\":\"udp-的主要特点是什么\",\"contents\":[]},{\"header\":\"TCP 和 UDP 分别对应的常见应用层协议有哪些？\",\"slug\":\"tcp-和-udp-分别对应的常见应用层协议有哪些\",\"contents\":[]},{\"header\":\"为什么 TIME-WAIT 状态必须等待 2MSL 的时间呢？\",\"slug\":\"为什么-time-wait-状态必须等待-2msl-的时间呢\",\"contents\":[]},{\"header\":\"保活计时器的作用？\",\"slug\":\"保活计时器的作用\",\"contents\":[]},{\"header\":\"TCP 协议是如何保证可靠传输的？\",\"slug\":\"tcp-协议是如何保证可靠传输的\",\"contents\":[]},{\"header\":\"谈谈你对停止等待协议的理解？\",\"slug\":\"谈谈你对停止等待协议的理解\",\"contents\":[]},{\"header\":\"谈谈你对 ARQ 协议的理解？\",\"slug\":\"谈谈你对-arq-协议的理解\",\"contents\":[]},{\"header\":\"谈谈你对滑动窗口的了解？\",\"slug\":\"谈谈你对滑动窗口的了解\",\"contents\":[]},{\"header\":\"谈下你对流量控制的理解？\",\"slug\":\"谈下你对流量控制的理解\",\"contents\":[]},{\"header\":\"谈下你对 TCP 拥塞控制的理解？使用了哪些算法？\",\"slug\":\"谈下你对-tcp-拥塞控制的理解-使用了哪些算法\",\"contents\":[]},{\"header\":\"什么是粘包？\",\"slug\":\"什么是粘包\",\"contents\":[]},{\"header\":\"TCP 黏包是怎么产生的？\",\"slug\":\"tcp-黏包是怎么产生的\",\"contents\":[]},{\"header\":\"怎么解决拆包和粘包？\",\"slug\":\"怎么解决拆包和粘包\",\"contents\":[]},{\"header\":\"forward 和 redirect 的区别？\",\"slug\":\"forward-和-redirect-的区别\",\"contents\":[]},{\"header\":\"HTTP 方法有哪些？\",\"slug\":\"http-方法有哪些\",\"contents\":[]},{\"header\":\"在浏览器中输入 URL 地址到显示主页的过程？\",\"slug\":\"在浏览器中输入-url-地址到显示主页的过程\",\"contents\":[]},{\"header\":\"DNS 的解析过程？\",\"slug\":\"dns-的解析过程\",\"contents\":[]},{\"header\":\"谈谈你对域名缓存的了解？\",\"slug\":\"谈谈你对域名缓存的了解\",\"contents\":[]},{\"header\":\"谈下你对 HTTP 长连接和短连接的理解？分别应用于哪些场景？\",\"slug\":\"谈下你对-http-长连接和短连接的理解-分别应用于哪些场景\",\"contents\":[]},{\"header\":\"HTTPS 的工作过程？\",\"slug\":\"https-的工作过程\",\"contents\":[]},{\"header\":\"HTTP 和 HTTPS 的区别？\",\"slug\":\"http-和-https-的区别\",\"contents\":[]},{\"header\":\"HTTPS 的优缺点？\",\"slug\":\"https-的优缺点\",\"contents\":[]},{\"header\":\"什么是数字签名？\",\"slug\":\"什么是数字签名\",\"contents\":[]},{\"header\":\"什么是数字证书？\",\"slug\":\"什么是数字证书\",\"contents\":[]},{\"header\":\"Cookie 和 Session 有什么区别？\",\"slug\":\"cookie-和-session-有什么区别\",\"contents\":[]},{\"header\":\"十、操作系统 32 道\",\"slug\":\"十、操作系统-32-道\",\"contents\":[]},{\"header\":\"简单说下你对并发和并行的理解？\",\"slug\":\"简单说下你对并发和并行的理解\",\"contents\":[]},{\"header\":\"同步、异步、阻塞、非阻塞的概念\",\"slug\":\"同步、异步、阻塞、非阻塞的概念\",\"contents\":[]},{\"header\":\"进程和线程的基本概念\",\"slug\":\"进程和线程的基本概念\",\"contents\":[]},{\"header\":\"进程与线程的区别？\",\"slug\":\"进程与线程的区别\",\"contents\":[]},{\"header\":\"为什么有了进程，还要有线程呢？\",\"slug\":\"为什么有了进程-还要有线程呢\",\"contents\":[]},{\"header\":\"进程的状态转换\",\"slug\":\"进程的状态转换\",\"contents\":[]},{\"header\":\"进程间的通信方式有哪些？\",\"slug\":\"进程间的通信方式有哪些\",\"contents\":[]},{\"header\":\"进程的调度算法有哪些？\",\"slug\":\"进程的调度算法有哪些\",\"contents\":[]},{\"header\":\"什么是死锁？\",\"slug\":\"什么是死锁\",\"contents\":[]},{\"header\":\"产生死锁的原因？\",\"slug\":\"产生死锁的原因\",\"contents\":[]},{\"header\":\"死锁产生的必要条件？\",\"slug\":\"死锁产生的必要条件\",\"contents\":[]},{\"header\":\"解决死锁的基本方法？\",\"slug\":\"解决死锁的基本方法\",\"contents\":[]},{\"header\":\"怎么预防死锁？\",\"slug\":\"怎么预防死锁\",\"contents\":[]},{\"header\":\"怎么避免死锁？\",\"slug\":\"怎么避免死锁\",\"contents\":[]},{\"header\":\"怎么解除死锁？\",\"slug\":\"怎么解除死锁\",\"contents\":[]},{\"header\":\"什么是缓冲区溢出？有什么危害？\",\"slug\":\"什么是缓冲区溢出-有什么危害\",\"contents\":[]},{\"header\":\"分页与分段的区别？\",\"slug\":\"分页与分段的区别\",\"contents\":[]},{\"header\":\"物理地址、逻辑地址、虚拟内存的概念\",\"slug\":\"物理地址、逻辑地址、虚拟内存的概念\",\"contents\":[]},{\"header\":\"页面置换算法有哪些？\",\"slug\":\"页面置换算法有哪些\",\"contents\":[]},{\"header\":\"谈谈你对动态链接库和静态链接库的理解？\",\"slug\":\"谈谈你对动态链接库和静态链接库的理解\",\"contents\":[]},{\"header\":\"外中断和异常有什么区别？\",\"slug\":\"外中断和异常有什么区别\",\"contents\":[]},{\"header\":\"一个程序从开始运行到结束的完整过程，你能说出来多少？\",\"slug\":\"一个程序从开始运行到结束的完整过程-你能说出来多少\",\"contents\":[]},{\"header\":\"什么是用户态和内核态\",\"slug\":\"什么是用户态和内核态\",\"contents\":[]},{\"header\":\"用户态和内核态是如何切换的？\",\"slug\":\"用户态和内核态是如何切换的\",\"contents\":[]},{\"header\":\"进程终止的方式\",\"slug\":\"进程终止的方式\",\"contents\":[]},{\"header\":\"守护进程、僵尸进程和孤儿进程\",\"slug\":\"守护进程、僵尸进程和孤儿进程\",\"contents\":[]},{\"header\":\"如何避免僵尸进程？\",\"slug\":\"如何避免僵尸进程\",\"contents\":[]},{\"header\":\"介绍一下几种典型的锁？\",\"slug\":\"介绍一下几种典型的锁\",\"contents\":[]},{\"header\":\"常见内存分配内存错误\",\"slug\":\"常见内存分配内存错误\",\"contents\":[]},{\"header\":\"内存交换中，被换出的进程保存在哪里？\",\"slug\":\"内存交换中-被换出的进程保存在哪里\",\"contents\":[]},{\"header\":\"原子操作的是如何实现的\",\"slug\":\"原子操作的是如何实现的\",\"contents\":[]},{\"header\":\"抖动你知道是什么吗？它也叫颠簸现象\",\"slug\":\"抖动你知道是什么吗-它也叫颠簸现象\",\"contents\":[]},{\"header\":\"十一、消息队列与分布式 26 道\",\"slug\":\"十一、消息队列与分布式-26-道\",\"contents\":[]},{\"header\":\"消息队列的基本作用？\",\"slug\":\"消息队列的基本作用\",\"contents\":[]},{\"header\":\"消息队列的优缺点有哪些？\",\"slug\":\"消息队列的优缺点有哪些\",\"contents\":[]},{\"header\":\"如何保证消息队列的高可用？\",\"slug\":\"如何保证消息队列的高可用\",\"contents\":[]},{\"header\":\"如何保证消息不被重复消费？或者说，如何保证消息消费的幂等性？\",\"slug\":\"如何保证消息不被重复消费-或者说-如何保证消息消费的幂等性\",\"contents\":[]},{\"header\":\"如何保证消息的可靠性传输？或者说，如何处理消息丢失的问题？\",\"slug\":\"如何保证消息的可靠性传输-或者说-如何处理消息丢失的问题\",\"contents\":[]},{\"header\":\"如何保证消息的顺序性？\",\"slug\":\"如何保证消息的顺序性\",\"contents\":[]},{\"header\":\"大量消息在 MQ 里长时间积压，该如何解决？\",\"slug\":\"大量消息在-mq-里长时间积压-该如何解决\",\"contents\":[]},{\"header\":\"MQ 中的消息过期失效了怎么办？\",\"slug\":\"mq-中的消息过期失效了怎么办\",\"contents\":[]},{\"header\":\"RabbitMQ 有哪些重要的角色？\",\"slug\":\"rabbitmq-有哪些重要的角色\",\"contents\":[]},{\"header\":\"RabbitMQ 有哪些重要的组件？\",\"slug\":\"rabbitmq-有哪些重要的组件\",\"contents\":[]},{\"header\":\"RabbitMQ 有几种广播类型？\",\"slug\":\"rabbitmq-有几种广播类型\",\"contents\":[]},{\"header\":\"Kafka 可以脱离 zookeeper 单独使用吗？为什么？\",\"slug\":\"kafka-可以脱离-zookeeper-单独使用吗-为什么\",\"contents\":[]},{\"header\":\"Kafka 有几种数据保留的策略？\",\"slug\":\"kafka-有几种数据保留的策略\",\"contents\":[]},{\"header\":\"Kafka 的分区策略有哪些？\",\"slug\":\"kafka-的分区策略有哪些\",\"contents\":[]},{\"header\":\"谈下你对 Zookeeper 的认识？\",\"slug\":\"谈下你对-zookeeper-的认识\",\"contents\":[]},{\"header\":\"Zookeeper 都有哪些功能？\",\"slug\":\"zookeeper-都有哪些功能\",\"contents\":[]},{\"header\":\"谈下你对 ZAB 协议的了解？\",\"slug\":\"谈下你对-zab-协议的了解\",\"contents\":[]},{\"header\":\"Zookeeper 怎么保证主从节点的状态同步？\",\"slug\":\"zookeeper-怎么保证主从节点的状态同步\",\"contents\":[]},{\"header\":\"Zookeeper 有几种部署模式？\",\"slug\":\"zookeeper-有几种部署模式\",\"contents\":[]},{\"header\":\"说一下 Zookeeper 的通知机制？\",\"slug\":\"说一下-zookeeper-的通知机制\",\"contents\":[]},{\"header\":\"集群中为什么要有主节点？\",\"slug\":\"集群中为什么要有主节点\",\"contents\":[]},{\"header\":\"集群中有 3 台服务器，其中一个节点宕机，这个时候 Zookeeper 还可以使用吗？\",\"slug\":\"集群中有-3-台服务器-其中一个节点宕机-这个时候-zookeeper-还可以使用吗\",\"contents\":[]},{\"header\":\"说一下两阶段提交和三阶段提交的过程？分别有什么问题？\",\"slug\":\"说一下两阶段提交和三阶段提交的过程-分别有什么问题\",\"contents\":[]},{\"header\":\"Zookeeper 宕机如何处理？\",\"slug\":\"zookeeper-宕机如何处理\",\"contents\":[]},{\"header\":\"说下四种类型的数据节点 Znode？\",\"slug\":\"说下四种类型的数据节点-znode\",\"contents\":[]}]},\"/posts/interview/interview.html\":{\"title\":\"个人经验总结\",\"contents\":[{\"header\":\"基础\",\"slug\":\"基础\",\"contents\":[]},{\"header\":\"Integer小知识:\",\"slug\":\"integer小知识\",\"contents\":[]},{\"header\":\"NIO 和 IO 区别\",\"slug\":\"nio-和-io-区别\",\"contents\":[]},{\"header\":\"Spring\",\"slug\":\"spring\",\"contents\":[]},{\"header\":\"Spring boot 生命周期\",\"slug\":\"spring-boot-生命周期\",\"contents\":[]},{\"header\":\"获取上下文方式：\",\"slug\":\"获取上下文方式\",\"contents\":[]},{\"header\":\"Mysql\",\"slug\":\"mysql\",\"contents\":[]},{\"header\":\"存储引擎\",\"slug\":\"存储引擎\",\"contents\":[]},{\"header\":\"SQL 优化\",\"slug\":\"sql-优化\",\"contents\":[]},{\"header\":\"Redis\",\"slug\":\"redis\",\"contents\":[]},{\"header\":\"分布式锁\",\"slug\":\"分布式锁\",\"contents\":[]},{\"header\":\"缓存\",\"slug\":\"缓存\",\"contents\":[]},{\"header\":\"MQ\",\"slug\":\"mq\",\"contents\":[]},{\"header\":\"集群高可用部署\",\"slug\":\"集群高可用部署\",\"contents\":[]},{\"header\":\"事务\",\"slug\":\"事务\",\"contents\":[]},{\"header\":\"分布事务\",\"slug\":\"分布事务\",\"contents\":[]},{\"header\":\"Spring事务\",\"slug\":\"spring事务\",\"contents\":[]},{\"header\":\"设计模式\",\"slug\":\"设计模式\",\"contents\":[]},{\"header\":\"Spring中应用的设计模式\",\"slug\":\"spring中应用的设计模式\",\"contents\":[]},{\"header\":\"多线程\",\"slug\":\"多线程\",\"contents\":[]},{\"header\":\"线程使用方式\",\"slug\":\"线程使用方式\",\"contents\":[]},{\"header\":\"ThreadLocal\",\"slug\":\"threadlocal\",\"contents\":[]},{\"header\":\"分布式\",\"slug\":\"分布式\",\"contents\":[]},{\"header\":\"跨服务之间分页查询实现及大量数据导出情况\",\"slug\":\"跨服务之间分页查询实现及大量数据导出情况\",\"contents\":[]},{\"header\":\"分库分表实现\",\"slug\":\"分库分表实现\",\"contents\":[]},{\"header\":\"分布式锁实现\",\"slug\":\"分布式锁实现\",\"contents\":[]},{\"header\":\"分布式 ID 实现\",\"slug\":\"分布式-id-实现\",\"contents\":[]},{\"header\":\"微服务组件\",\"slug\":\"微服务组件\",\"contents\":[]},{\"header\":\"高并发\",\"slug\":\"高并发\",\"contents\":[]},{\"header\":\"接口幂等性\",\"slug\":\"接口幂等性\",\"contents\":[]},{\"header\":\"其它\",\"slug\":\"其它\",\"contents\":[]},{\"header\":\"秒杀系统\",\"slug\":\"秒杀系统\",\"contents\":[]}]},\"/posts/interview/linear-data-structures.html\":{\"title\":\"线性数据结构相关\",\"contents\":[{\"header\":\"链表 Link List\",\"slug\":\"链表-link-list\",\"contents\":[]},{\"header\":\"描述一下链表的数据结构？\",\"slug\":\"描述一下链表的数据结构\",\"contents\":[]},{\"header\":\"Java 中 LinkedList 使用的是单向链表、双向链表还是循环链表？\",\"slug\":\"java-中-linkedlist-使用的是单向链表、双向链表还是循环链表\",\"contents\":[]},{\"header\":\"链表中数据的插入、删除、获取元素，时间复杂度是多少？\",\"slug\":\"链表中数据的插入、删除、获取元素-时间复杂度是多少\",\"contents\":[]},{\"header\":\"数组 Array\",\"slug\":\"数组-array\",\"contents\":[]},{\"header\":\"数组的元素删除和获取，时间复杂度是多少？\",\"slug\":\"数组的元素删除和获取-时间复杂度是多少\",\"contents\":[]},{\"header\":\"ArrayList 中默认的初始化长度是多少？\",\"slug\":\"arraylist-中默认的初始化长度是多少\",\"contents\":[]},{\"header\":\"ArrayList 中扩容的范围是多大一次？\",\"slug\":\"arraylist-中扩容的范围是多大一次\",\"contents\":[]},{\"header\":\"ArrayList 是如何完成扩容的，System.arraycopy 各个入参的作用是什么？\",\"slug\":\"arraylist-是如何完成扩容的-system-arraycopy-各个入参的作用是什么\",\"contents\":[]},{\"header\":\"什么场景下使用数组或链表更合适？\",\"slug\":\"什么场景下使用数组或链表更合适\",\"contents\":[]}]},\"/posts/knowledge-reserve/\":{\"title\":\"\",\"contents\":[{\"header\":\"\",\"slug\":\"\",\"contents\":[\"收藏笔记\",\"Emoji 表情\"]}]},\"/posts/knowledge-reserve/collect-note.html\":{\"title\":\"收藏笔记\",\"contents\":[{\"header\":\"命令\",\"slug\":\"命令\",\"contents\":[]},{\"header\":\"删除过多层文件夹\",\"slug\":\"删除过多层文件夹\",\"contents\":[]},{\"header\":\"编程\",\"slug\":\"编程\",\"contents\":[]},{\"header\":\"Node相关\",\"slug\":\"node相关\",\"contents\":[]},{\"header\":\"Go相关\",\"slug\":\"go相关\",\"contents\":[]},{\"header\":\"代码工具类\",\"slug\":\"代码工具类\",\"contents\":[]},{\"header\":\"AI 相关\",\"slug\":\"ai-相关\",\"contents\":[]},{\"header\":\"常用软件相关\",\"slug\":\"常用软件相关\",\"contents\":[]},{\"header\":\"学习\",\"slug\":\"学习\",\"contents\":[]}]},\"/posts/knowledge-reserve/emoji.html\":{\"title\":\"Emoji表情\",\"contents\":[]},\"/posts/knowledge-reserve/microservices.html\":{\"title\":\"Cloud技术选型\",\"contents\":[{\"header\":\"服务注册中心\",\"slug\":\"服务注册中心\",\"contents\":[]},{\"header\":\"服务调用\",\"slug\":\"服务调用\",\"contents\":[]},{\"header\":\"服务熔断与降级\",\"slug\":\"服务熔断与降级\",\"contents\":[]},{\"header\":\"服务网关\",\"slug\":\"服务网关\",\"contents\":[]},{\"header\":\"服务配置\",\"slug\":\"服务配置\",\"contents\":[]},{\"header\":\"服务总线\",\"slug\":\"服务总线\",\"contents\":[]},{\"header\":\"链路追踪\",\"slug\":\"链路追踪\",\"contents\":[]},{\"header\":\"鉴权\",\"slug\":\"鉴权\",\"contents\":[]},{\"header\":\"分布式事务\",\"slug\":\"分布式事务\",\"contents\":[]},{\"header\":\"服务监控\",\"slug\":\"服务监控\",\"contents\":[]},{\"header\":\"日志收集\",\"slug\":\"日志收集\",\"contents\":[]}]},\"/posts/ops/\":{\"title\":\"\",\"contents\":[{\"header\":\"\",\"slug\":\"\",\"contents\":[\"wsl2 防淡忘\",\"Linux 备忘录\",\"运维相关\"]}]},\"/posts/ops/deploy.html\":{\"title\":\"项目部署\",\"contents\":[{\"header\":\"问题\",\"slug\":\"问题\",\"contents\":[]},{\"header\":\"Docker 容器日期与宿主主机时间不一致解决\",\"slug\":\"docker-容器日期与宿主主机时间不一致解决\",\"contents\":[]},{\"header\":\"已非 jar 包形式部署 Spring boot 项目挂载项目\",\"slug\":\"已非-jar-包形式部署-spring-boot-项目挂载项目\",\"contents\":[]}]},\"/posts/ops/fio.html\":{\"title\":\"磁盘 IO 测试工具\",\"contents\":[{\"header\":\"前情提要\",\"slug\":\"前情提要\",\"contents\":[\"Rancher 部署 ES 发现客户提供的挂载卷比较慢，因而采取 FIO 测试得到读写数据\"]},{\"header\":\"前期准备\",\"slug\":\"前期准备\",\"contents\":[\"# ubuntu 环境可以直接装,软不存在软件包则执行 apt-get update 更新。 apt-get -y install fio \"]},{\"header\":\"具体命令\",\"slug\":\"具体命令\",\"contents\":[\"顺序读 fio -filename=/usr/share/elasticsearch/data/sda -direct=1 -iodepth 1 -thread -rw=read -ioengine=psync -bs=16k -size=200G -numjobs=30 -runtime=1000 -group_reporting -name=mytest 顺序写 fio -filename=/usr/share/elasticsearch/data/sda -direct=1 -iodepth 1 -thread -rw=write -ioengine=psync -bs=16k -size=200G -numjobs=30 -runtime=1000 -group_reporting -name=mytest 随机读 fio -filename=/usr/share/elasticsearch/data/sda -direct=1 -iodepth 1 -thread -rw=randread -ioengine=psync -bs=16k -size=200G -numjobs=30 -runtime=1000 -group_reporting -name=mytest 随机写 fio -filename=/usr/share/elasticsearch/data/sda -direct=1 -iodepth 1 -thread -rw=randwrite -ioengine=psync -bs=16k -size=200G -numjobs=30 -runtime=1000 -group_reporting -name=mytest 混合随机读写 fio -filename=/usr/share/elasticsearch/data/sda -direct=1 -iodepth 1 -thread -rw=randrw -rwmixread=70 -ioengine=psync -bs=16k -size=200G -numjobs=30 -runtime=100 -group_reporting -name=mytest -ioscheduler=noop \"]},{\"header\":\"说明\",\"slug\":\"说明\",\"contents\":[\"filename=/dev/sdb1 测试文件名称，通常选择需要测试的盘的data目录。 direct=1 测试过程绕过机器自带的buffer。使测试结果更真实。 rw=randwrite 测试随机写的I/O rw=randrw 测试随机写和读的I/O bs=16k 单次io的块文件大小为16k bsrange=512-2048 同上，提定数据块的大小范围 size=5g 本次的测试文件大小为5g，以每次4k的io进行测试。 numjobs=30 本次的测试线程为30. runtime=1000 测试时间为1000秒，如果不写则一直将5g文件分4k每次写完为止。 ioengine=psync io引擎使用pync方式 rwmixwrite=30 在混合读写的模式下，写占30% group_reporting 关于显示结果的，汇总每个进程的信息。 \"]}]},\"/posts/ops/github-actions.html\":{\"title\":\"Github-Actions 部署博客\",\"contents\":[]},\"/posts/ops/linux.html\":{\"title\":\"linux经验汇总\",\"contents\":[{\"header\":\"命令\",\"slug\":\"命令\",\"contents\":[]},{\"header\":\"根据日期查询并复制到新路径\",\"slug\":\"根据日期查询并复制到新路径\",\"contents\":[]}]},\"/posts/ops/wsl2.html\":{\"title\":\"Docker Desktop(WSL2) 修改镜像存储位置\",\"contents\":[{\"header\":\"问题\",\"slug\":\"问题\",\"contents\":[]}]},\"/posts/question/\":{\"title\":\"\",\"contents\":[{\"header\":\"\",\"slug\":\"\",\"contents\":[\"java webservice如何配置安全性问题\",\"跨域问题\",\"Spring 注入自定义 Job Factory\",\"统一注解继承相同接口类\",\"Druid 错误\",\"Nginx 问题\",\"Gitalk 问题\",\"Prometheus 问题\"]}]},\"/posts/question/article-1.html\":{\"title\":\"java webservice如何配置安全性问题\",\"contents\":[]},\"/posts/question/article-3.html\":{\"title\":\"Spring boot项目出现跨域问题\",\"contents\":[]},\"/posts/question/article-4.html\":{\"title\":\"解决Spring boot项目quartz的job没法使用注解方式实例化对象\",\"contents\":[]},\"/posts/question/article-5.html\":{\"title\":\"解决spring boot项目多个类implements于同一个接口类，使用注解需要多个@Qualifier\",\"contents\":[]},\"/posts/question/article-8.html\":{\"title\":\"connection holder is null\",\"contents\":[]},\"/posts/question/gitalk.html\":{\"title\":\"Docsify 配置 Gitalk 问题记录记录\",\"contents\":[]},\"/posts/question/nginx.html\":{\"title\":\"Nginx\",\"contents\":[{\"header\":\"强制 HTTP 跳转 HTTPS\",\"slug\":\"强制-http-跳转-https\",\"contents\":[]},{\"header\":\"使用 Nginx 将 HTTP 重定向到 HTTPS\",\"slug\":\"使用-nginx-将-http-重定向到-https\",\"contents\":[]},{\"header\":\"项目处于安全考虑，通过 nginx 强制 http 转换成 https，但遇到报 GET 不支持错误。\",\"slug\":\"项目处于安全考虑-通过-nginx-强制-http-转换成-https-但遇到报-get-不支持错误。\",\"contents\":[]}]},\"/posts/question/prometheus.html\":{\"title\":\"Fastjson 导致 Spring boot 接入 Prometheus 返回结果不正确\",\"contents\":[{\"header\":\"解决办法\",\"slug\":\"解决办法\",\"contents\":[\"添加 StringHttpMessageConverter 单独处理返回字符串类型，需要注意顺序排在 FastJsonHttpMessageConverter 之前\",\"同时需要注意的一点，由于项目统一切片封装返回对象： \",\"返回 String 的接口也会封装多一层成对象，导致 StringHttpMessageConverter 处理的时候将对象转成 String 从而出现错误\",\"指定 MediaType 针对 prometheus 所用限制处理\",\"@EnableWebMvc @Configuration @ComponentScan public class MyWebMvcConfigurer implements WebMvcConfigurer { @Override public void configureMessageConverters(List<HttpMessageConverter<?>> converters) { converters.add(stringConverter()); converters.add(fastJsonHttpMessageConverters()); //无论白名单和黑名单，都不支持autoType ParserConfig.getGlobalInstance().setSafeMode(true); } /** * 修改默认的JSON实现为FastJson */ @Bean public FastJsonHttpMessageConverter fastJsonHttpMessageConverters() { FastJsonHttpMessageConverter httpMessageConverter = new FastJsonHttpMessageConverter(); httpMessageConverter.setFastJsonConfig(getFastJsonConfig()); httpMessageConverter.setDefaultCharset(Charset.forName(\\\"UTF-8\\\")); return httpMessageConverter; } private FastJsonConfig getFastJsonConfig() { FastJsonConfig fastJsonConfig = new FastJsonConfig(); fastJsonConfig.setDateFormat(\\\"yyyy-MM-dd HH:mm:ss.SSS\\\"); fastJsonConfig.setCharset(Charset.forName(\\\"UTF-8\\\")); fastJsonConfig.setSerializerFeatures( SerializerFeature.WriteMapNullValue, SerializerFeature.QuoteFieldNames, SerializerFeature.WriteNullListAsEmpty, // SerializerFeature.WriteEnumUsingToString, SerializerFeature.WriteDateUseDateFormat); return fastJsonConfig; } public HttpMessageConverter<String> stringConverter() { StringHttpMessageConverter converter = new StringHttpMessageConverter( Charset.forName(\\\"UTF-8\\\")); List<MediaType> supportedMediaTypes = new ArrayList<>(); //提供只针对 prometheus 所用到类型支持 mediaType supportedMediaTypes.add(MediaType.valueOf(\\\"application/openmetrics-text;version=1.0.0;charset=utf-8\\\")); converter.setSupportedMediaTypes(supportedMediaTypes); return converter; } } \"]},{\"header\":\"补充\",\"slug\":\"补充\",\"contents\":[\"WebMvcMetricsFilter stopped working since 2.7.0\"]}]},\"/posts/coding-related/datasource/alter-column.html\":{\"title\":\"结合两个数据库表结构生成修改表字段语句\",\"contents\":[{\"header\":\"原因\",\"slug\":\"原因\",\"contents\":[]}]},\"/posts/coding-related/datasource/tls10.html\":{\"title\":\"JDK 停用 TLS10 导致数据库连接出错\",\"contents\":[{\"header\":\"原因\",\"slug\":\"原因\",\"contents\":[\"因为新版的 JDK 不推荐使用旧的 TLSV1.0 的协议，所以默认停用 TLS10 的支持\"]},{\"header\":\"解决\",\"slug\":\"解决\",\"contents\":[]},{\"header\":\"更换 JDK 版本\",\"slug\":\"更换-jdk-版本\",\"contents\":[]},{\"header\":\"修改 jre 配置\",\"slug\":\"修改-jre-配置\",\"contents\":[\"jre\\\\lib\\\\security\\\\ java.security 文件\",\"修改 jdk.tls.disabledAlgorithms= 这行，去除 TLSv1 等\"]},{\"header\":\"Dockerfile 里添加修改命令\",\"slug\":\"dockerfile-里添加修改命令\",\"contents\":[\"首先通过 grep 找到对应行数\",\"通过 grep -n jdk.tls.disabledAlgorithms= /opt/java/openjdk/jre/lib/security/java.security 找到对应行数\",\"通过 sed -i 替换对应字段\",\"RUN sed -i '703s/SSLv3, TLSv1, TLSv1.1,//' /opt/java/openjdk/jre/lib/security/java.security\"]}]},\"/posts/coding-related/java/prometheus.html\":{\"title\":\"Prometheus 搭配 Grafana 监控 Spring boot 项目\",\"contents\":[{\"header\":\"Spring boot 配置\",\"slug\":\"spring-boot-配置\",\"contents\":[]},{\"header\":\"Docker 部署 Prometheus 和 Grafana\",\"slug\":\"docker-部署-prometheus-和-grafana\",\"contents\":[]},{\"header\":\"Prometheus 配置文件\",\"slug\":\"prometheus-配置文件\",\"contents\":[]},{\"header\":\"Docker-Compose 配置文件\",\"slug\":\"docker-compose-配置文件\",\"contents\":[]}]},\"/posts/coding-related/java/type.html\":{\"title\":\"Type 类型\",\"contents\":[{\"header\":\"Type 接口简介\",\"slug\":\"type-接口简介\",\"contents\":[]},{\"header\":\"如何获取泛型的参数类型？\",\"slug\":\"如何获取泛型的参数类型\",\"contents\":[]}]},\"/posts/coding-related/typescript/electron-base.html\":{\"title\":\"Electron React Typescript Antd 环境搭建\",\"contents\":[{\"header\":\"前言\",\"slug\":\"前言\",\"contents\":[\"最近打算 Electron React Typescript Antd 结合学习,网上搜索事例优点问题重新整理了下。\",\"注意事项： \",\"main.ts nodeIntegration 和 contextIsolation 配置不对会导致编译时提示 react 导入 node 代码出错\",\"未创建 preload.js 文件 导致 electron 启动界面加载空白\",\"不同版本 electron 的 dialog 存在使用差异 \",\"旧事例使用 remote 若继续使用需要添加 @electron/remote\",\"新事例 dialog 只能在主线程进行调用,可通过事件监听显现效果\",\"electron 下载慢,虽然 yrm 切换不同的镜像源仍然较慢,需单独设置 ELECTRON_MIRROR \",\"yarn config set ELECTRON_MIRROR https://npm.taobao.org/mirrors/electron/\"]},{\"header\":\"基本环境搭建\",\"slug\":\"基本环境搭建\",\"contents\":[]},{\"header\":\"创建 react + typescript 项目\",\"slug\":\"创建-react-typescript-项目\",\"contents\":[\"yarn create react-app --template typescript\"]},{\"header\":\"安装 react-app-rewired 以及 cross-env\",\"slug\":\"安装-react-app-rewired-以及-cross-env\",\"contents\":[\"yarn add react-app-rewired cross-env -D\"]},{\"header\":\"创建 react-app-rewired 配置文件 config-overrides.js 用于扩展 webpack 配置\",\"slug\":\"创建-react-app-rewired-配置文件-config-overrides-js-用于扩展-webpack-配置\",\"contents\":[\"module.exports = (config, env) => { // 为了方便使用 electron 以及 node.js 相关的 api // 需要将 target 设置为 electron-renderer // 设置了 target 之后，原生浏览器的环境将无法运行此 react 项目(因为不支持 node.js 相关的 api)，会抛出 Uncaught ReferenceError: require is not defined 异常 // 需要在 electron 的环境才能运行(因为支持 node.js 相关的 api) // 这一步的操作, 都是为了能与 electron 进行更好的集成 config.target = 'electron-renderer'; return config; }; \"]},{\"header\":\"安装 electron 环境\",\"slug\":\"安装-electron-环境\",\"contents\":[\"yarn add electron -D\",\"这里加 -D 是为了只添加到 package.json 下的 devDependencies\",\"如果 electron 存在 dependencies 里面在后续使用 electron-builder 会出现报错情况\"]},{\"header\":\"创建 electron 环境\",\"slug\":\"创建-electron-环境\",\"contents\":[\"新建 electron 文件夹 \",\"新建 tsconfig.json\",\"{ \\\"compilerOptions\\\": { \\\"target\\\": \\\"es5\\\", \\\"module\\\": \\\"commonjs\\\", \\\"sourceMap\\\": true, \\\"strict\\\": true, \\\"outDir\\\": \\\"../build/\\\", \\\"rootDir\\\": \\\"../electron/\\\", \\\"noEmitOnError\\\": true, \\\"typeRoots\\\": [ \\\"node_modules/@types\\\" ] } } \",\"新建 electron 入库文件 main.ts\",\"import {app, BrowserWindow, ipcMain, dialog} from \\\"electron\\\"; import * as path from \\\"path\\\"; function createWindow() { // Create the browser window. const mainWindow = new BrowserWindow({ height: 600, webPreferences: { nodeIntegration: true, contextIsolation: false, preload: path.join(__dirname, \\\"preload.js\\\"), }, width: 800, }); /** * loadURL 分为两种情况 * 1.开发环境，指向 react 的开发环境地址 * 2.生产环境，指向 react build 后的 index.html */ const startUrl = process.env.NODE_ENV === 'development' ? 'http://localhost:3000' : path.join(__dirname, 'index.html'); mainWindow.loadURL(startUrl); // Open the DevTools. mainWindow.webContents.openDevTools(); } // This method will be called when Electron has finished // initialization and is ready to create browser windows. // Some APIs can only be used after this event occurs. app.on(\\\"ready\\\", () => { createWindow(); app.on(\\\"activate\\\", function () { // On macOS it's common to re-create a window in the app when the // dock icon is clicked and there are no other windows open. if (BrowserWindow.getAllWindows().length === 0) createWindow(); }); }); // Quit when all windows are closed, except on macOS. There, it's common // for applications and their menu bar to stay active until the user quits // explicitly with Cmd + Q. app.on(\\\"window-all-closed\\\", () => { if (process.platform !== \\\"darwin\\\") { app.quit(); } }); // In this file you can include the rest of your app\\\"s specific main process // code. You can also put them in separate files and require them here. // 监听渲染程序发来的事件 ipcMain.on('open-file-dialog', (event, data) => { dialog .showOpenDialog({ title: '请选择 .txt 文件', filters: [ { name: 'txt', extensions: ['txt'], }, ], }) .then((res) => { event.sender.send('open-file-dialog', res.filePaths); }) .catch(console.log); }); \",\"新建预加载文件 preload.ts \",\"若是不添加则会出现空白情况\",\"window.addEventListener('DOMContentLoaded', () => { const replaceText = (selector: string, text: string) => { const element = document.getElementById(selector) if (element) element.innerText = text } for (const type of ['chrome', 'node', 'electron']) { replaceText(`${type}-version`, <string>process.versions[type]) } }) \"]},{\"header\":\"添加相关脚本\",\"slug\":\"添加相关脚本\",\"contents\":[\"/package.json\",\"{ \\\"scripts\\\": { \\\"prestart\\\": \\\"tsc -p electron\\\", \\\"start\\\": \\\"cross-env BROWSER=none react-app-rewired start\\\", \\\"build\\\": \\\"react-app-rewired build & tsc -p electron\\\", \\\"test\\\": \\\"react-app-rewired test --env=jsdom\\\", \\\"eject\\\": \\\"react-scripts eject\\\", \\\"start-electron\\\": \\\"cross-env NODE_ENV=development electron .\\\", \\\"start-electron-prod\\\": \\\"electron .\\\", \\\"build-electron\\\": \\\"electron-builder\\\" } } \"]},{\"header\":\"添加 electron 及 node.js 相关代码，用于测试是否集成完毕\",\"slug\":\"添加-electron-及-node-js-相关代码-用于测试是否集成完毕\",\"contents\":[\"/src/App.css\",\"@import '~antd/dist/antd.css'; .App { text-align: center; } .App-logo { height: 40vmin; pointer-events: none; } @media (prefers-reduced-motion: no-preference) { .App-logo { animation: App-logo-spin infinite 20s linear; } } .App-header { background-color: #282c34; min-height: 100vh; display: flex; flex-direction: column; align-items: center; justify-content: center; font-size: calc(10px + 2vmin); color: white; } .App-link { color: #61dafb; } @keyframes App-logo-spin { from { transform: rotate(0deg); } to { transform: rotate(360deg); } } \",\"/src/App.tsx\",\"import React from 'react'; import fs from 'fs'; import { Button } from 'antd'; import './App.css'; const { ipcRenderer} = require('electron') interface Props {} interface State { txtFileData: string; } export default class App extends React.Component<Props, State> { constructor(props: Props) { super(props); this.state = { txtFileData: '', }; } /** * 弹出文件选择框，选择 .txt 文件 * 将选中的 .txt 内容展示到页面 */ public readTxtFileData = async () => { // 发送事件给主进程 ipcRenderer.send('open-file-dialog', '传输给主进程的值'); // 监听主进程发来的事件 ipcRenderer.on('open-file-dialog', (event : any, data : Array<string>) => { if (!data[0]) return; fs.readFile(data[0], 'utf-8', (err, data) => { if (err) { console.error(err); } else { this.setState({ txtFileData: data.replace(/\\\\n|\\\\r\\\\n/g, '<br/>'), }); } }); }) }; public render = (): JSX.Element => { return ( <section> <Button type={\\\"primary\\\"} onClick={this.readTxtFileData}>读取一个txt文件的内容</Button> <div dangerouslySetInnerHTML={{ __html: this.state.txtFileData }} /> </section> ); }; } \"]},{\"header\":\"运行测试\",\"slug\":\"运行测试\",\"contents\":[\"一个命令行窗口跑 react 项目\",\"yarn start\",\"另一个命令行窗口跑 electron 项目\",\"yarn start-electron\"]},{\"header\":\"项目打包\",\"slug\":\"项目打包\",\"contents\":[\"添加 electron-builder 工具\",\"yarn add electron-builder -D\",\"添加脚本以及打包相关配置 \",\"oneClick 是否启用一键安装\",\"allowToChangeInstallationDirectory 是否允许修改安装路径\",\"{ \\\"build\\\": { \\\"appId\\\": \\\"com.example.my-app\\\", \\\"productName\\\": \\\"react-electron\\\", \\\"extends\\\": null, \\\"directories\\\": { \\\"output\\\": \\\"build-electron\\\" }, \\\"files\\\": [ \\\"./build/**/*\\\", \\\"./package.json\\\" ], \\\"win\\\": { \\\"icon\\\": \\\"src/asset/icon.ico\\\" }, \\\"nsis\\\": { \\\"oneClick\\\": false, \\\"allowToChangeInstallationDirectory\\\": true } } } \"]},{\"header\":\"开始打包\",\"slug\":\"开始打包\",\"contents\":[\"打包 react\",\"yarn build\",\"react 打包完成后，可以运行 electron 生产环境查看一下功能是否正常运行\",\"yarn start-electron-prod\",\"打包 electron 项目为安装包，安装包会生成到指定的 build-electron 目录\",\"yarn build-electron\"]},{\"header\":\"Github\",\"slug\":\"github\",\"contents\":[\"react-electron-antd-demo\"]},{\"header\":\"参考文章\",\"slug\":\"参考文章\",\"contents\":[\"electron + react + typescript 环境搭建\"]}]},\"/posts/knowledge-reserve/redis/redis-base.html\":{\"title\":\"Redis 基础知识梳理\",\"contents\":[{\"header\":\"什么是Redis\",\"slug\":\"什么是redis\",\"contents\":[\"Redis是一款内存高速缓存数据库。Redis全称为：Remote Dictionary Server（远程数据服务），使用C语言编写，Redis是一个key-value存储系统（键值存储系统），支持丰富的数据类型，如：String、list、set、zset、hash。\",\"Redis是一种支持key-value等多种数据结构的存储系统。可用于缓存，事件发布或订阅，高速队列等场景。支持网络，提供字符串，哈希，列表，队列，集合结构直接存取，基于内存，可持久化\"]},{\"header\":\"官方资料\",\"slug\":\"官方资料\",\"contents\":[\"Redis官网:http://redis.io/Redis\"]}]},\"/posts/english/\":{\"title\":\"English\",\"contents\":[]},\"/posts/\":{\"title\":\"Posts\",\"contents\":[]},\"/posts/coding-related/datasource/\":{\"title\":\"Datasource\",\"contents\":[]},\"/posts/coding-related/\":{\"title\":\"Coding Related\",\"contents\":[]},\"/posts/coding-related/java/\":{\"title\":\"Java\",\"contents\":[]},\"/posts/coding-related/typescript/\":{\"title\":\"Typescript\",\"contents\":[]},\"/posts/knowledge-reserve/redis/\":{\"title\":\"Redis\",\"contents\":[]}}}");self.onmessage=({data:o})=>{self.postMessage($(o.query,m[o.routeLocale]))};
//# sourceMappingURL=original.js.map

const V=Object.entries,et=Object.fromEntries,st="ENTRIES",L="KEYS",T="VALUES",_="";class D{set;_type;_path;constructor(t,s){const n=t._tree,o=Array.from(n.keys());this.set=t,this._type=s,this._path=o.length>0?[{node:n,keys:o}]:[]}next(){const t=this.dive();return this.backtrack(),t}dive(){if(this._path.length===0)return{done:!0,value:void 0};const{node:t,keys:s}=E(this._path);if(E(s)===_)return{done:!1,value:this.result()};const n=t.get(E(s));return this._path.push({node:n,keys:Array.from(n.keys())}),this.dive()}backtrack(){if(this._path.length===0)return;const t=E(this._path).keys;t.pop(),!(t.length>0)&&(this._path.pop(),this.backtrack())}key(){return this.set._prefix+this._path.map(({keys:t})=>E(t)).filter(t=>t!==_).join("")}value(){return E(this._path).node.get(_)}result(){switch(this._type){case T:return this.value();case L:return this.key();default:return[this.key(),this.value()]}}[Symbol.iterator](){return this}}const E=e=>e[e.length-1],nt=(e,t,s)=>{const n=new Map;if(t===void 0)return n;const o=t.length+1,u=o+s,i=new Uint8Array(u*o).fill(s+1);for(let r=0;r<o;++r)i[r]=r;for(let r=1;r<u;++r)i[r*o]=r;return R(e,t,s,n,i,1,o,""),n},R=(e,t,s,n,o,u,i,r)=>{const d=u*i;t:for(const c of e.keys())if(c===_){const a=o[d-1];a<=s&&n.set(r,[e.get(c),a])}else{let a=u;for(let h=0;h<c.length;++h,++a){const g=c[h],m=i*a,p=m-i;let l=o[m];const f=Math.max(0,a-s-1),y=Math.min(i-1,a+s);for(let F=f;F<y;++F){const v=g!==t[F],z=o[p+F]+ +v,A=o[p+F+1]+1,w=o[m+F]+1,j=o[m+F+1]=Math.min(z,A,w);j<l&&(l=j)}if(l>s)continue t}R(e.get(c),t,s,n,o,a,i,r+c)}};class C{_tree;_prefix;_size=void 0;constructor(t=new Map,s=""){this._tree=t,this._prefix=s}atPrefix(t){if(!t.startsWith(this._prefix))throw new Error("Mismatched prefix");const[s,n]=x(this._tree,t.slice(this._prefix.length));if(s===void 0){const[o,u]=O(n);for(const i of o.keys())if(i!==_&&i.startsWith(u)){const r=new Map;return r.set(i.slice(u.length),o.get(i)),new C(r,t)}}return new C(s,t)}clear(){this._size=void 0,this._tree.clear()}delete(t){return this._size=void 0,ot(this._tree,t)}entries(){return new D(this,st)}forEach(t){for(const[s,n]of this)t(s,n,this)}fuzzyGet(t,s){return nt(this._tree,t,s)}get(t){const s=k(this._tree,t);return s!==void 0?s.get(_):void 0}has(t){const s=k(this._tree,t);return s!==void 0&&s.has(_)}keys(){return new D(this,L)}set(t,s){if(typeof t!="string")throw new Error("key must be a string");return this._size=void 0,I(this._tree,t).set(_,s),this}get size(){if(this._size)return this._size;this._size=0;const t=this.entries();for(;!t.next().done;)this._size+=1;return this._size}update(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=I(this._tree,t);return n.set(_,s(n.get(_))),this}fetch(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=I(this._tree,t);let o=n.get(_);return o===void 0&&n.set(_,o=s()),o}values(){return new D(this,T)}[Symbol.iterator](){return this.entries()}static from(t){const s=new C;for(const[n,o]of t)s.set(n,o);return s}static fromObject(t){return C.from(Object.entries(t))}}const x=(e,t,s=[])=>{if(t.length===0||e==null)return[e,s];for(const n of e.keys())if(n!==_&&t.startsWith(n))return s.push([e,n]),x(e.get(n),t.slice(n.length),s);return s.push([e,t]),x(void 0,"",s)},k=(e,t)=>{if(t.length===0||e==null)return e;for(const s of e.keys())if(s!==_&&t.startsWith(s))return k(e.get(s),t.slice(s.length))},I=(e,t)=>{const s=t.length;t:for(let n=0;e&&n<s;){for(const u of e.keys())if(u!==_&&t[n]===u[0]){const i=Math.min(s-n,u.length);let r=1;for(;r<i&&t[n+r]===u[r];)++r;const d=e.get(u);if(r===u.length)e=d;else{const c=new Map;c.set(u.slice(r),d),e.set(t.slice(n,n+r),c),e.delete(u),e=c}n+=r;continue t}const o=new Map;return e.set(t.slice(n),o),o}return e},ot=(e,t)=>{const[s,n]=x(e,t);if(s!==void 0){if(s.delete(_),s.size===0)W(n);else if(s.size===1){const[o,u]=s.entries().next().value;q(n,o,u)}}},W=e=>{if(e.length===0)return;const[t,s]=O(e);if(t.delete(s),t.size===0)W(e.slice(0,-1));else if(t.size===1){const[n,o]=t.entries().next().value;n!==_&&q(e.slice(0,-1),n,o)}},q=(e,t,s)=>{if(e.length===0)return;const[n,o]=O(e);n.set(o+t,s),n.delete(o)},O=e=>e[e.length-1],ut=(e,t)=>{const s=e._idToShortId.get(t);if(s!=null)return e._storedFields.get(s)},it=/[\n\r -#%-*,-/:;?@[-\]_{}\u00A0\u00A1\u00A7\u00AB\u00B6\u00B7\u00BB\u00BF\u037E\u0387\u055A-\u055F\u0589\u058A\u05BE\u05C0\u05C3\u05C6\u05F3\u05F4\u0609\u060A\u060C\u060D\u061B\u061E\u061F\u066A-\u066D\u06D4\u0700-\u070D\u07F7-\u07F9\u0830-\u083E\u085E\u0964\u0965\u0970\u09FD\u0A76\u0AF0\u0C77\u0C84\u0DF4\u0E4F\u0E5A\u0E5B\u0F04-\u0F12\u0F14\u0F3A-\u0F3D\u0F85\u0FD0-\u0FD4\u0FD9\u0FDA\u104A-\u104F\u10FB\u1360-\u1368\u1400\u166E\u1680\u169B\u169C\u16EB-\u16ED\u1735\u1736\u17D4-\u17D6\u17D8-\u17DA\u1800-\u180A\u1944\u1945\u1A1E\u1A1F\u1AA0-\u1AA6\u1AA8-\u1AAD\u1B5A-\u1B60\u1BFC-\u1BFF\u1C3B-\u1C3F\u1C7E\u1C7F\u1CC0-\u1CC7\u1CD3\u2000-\u200A\u2010-\u2029\u202F-\u2043\u2045-\u2051\u2053-\u205F\u207D\u207E\u208D\u208E\u2308-\u230B\u2329\u232A\u2768-\u2775\u27C5\u27C6\u27E6-\u27EF\u2983-\u2998\u29D8-\u29DB\u29FC\u29FD\u2CF9-\u2CFC\u2CFE\u2CFF\u2D70\u2E00-\u2E2E\u2E30-\u2E4F\u3000-\u3003\u3008-\u3011\u3014-\u301F\u3030\u303D\u30A0\u30FB\uA4FE\uA4FF\uA60D-\uA60F\uA673\uA67E\uA6F2-\uA6F7\uA874-\uA877\uA8CE\uA8CF\uA8F8-\uA8FA\uA8FC\uA92E\uA92F\uA95F\uA9C1-\uA9CD\uA9DE\uA9DF\uAA5C-\uAA5F\uAADE\uAADF\uAAF0\uAAF1\uABEB\uFD3E\uFD3F\uFE10-\uFE19\uFE30-\uFE52\uFE54-\uFE61\uFE63\uFE68\uFE6A\uFE6B\uFF01-\uFF03\uFF05-\uFF0A\uFF0C-\uFF0F\uFF1A\uFF1B\uFF1F\uFF20\uFF3B-\uFF3D\uFF3F\uFF5B\uFF5D\uFF5F-\uFF65]+/u,M="or",$="and",rt="and_not",ct=(e,t)=>{e.includes(t)||e.push(t)},N=(e,t)=>{for(const s of t)e.includes(s)||e.push(s)},P=({score:e},{score:t})=>t-e,lt=()=>new Map,b=e=>{const t=new Map;for(const s of Object.keys(e))t.set(parseInt(s,10),e[s]);return t},G=(e,t)=>Object.prototype.hasOwnProperty.call(e,t)?e[t]:void 0,ht={[M]:(e,t)=>{for(const s of t.keys()){const n=e.get(s);if(n==null)e.set(s,t.get(s));else{const{score:o,terms:u,match:i}=t.get(s);n.score=n.score+o,n.match=Object.assign(n.match,i),N(n.terms,u)}}return e},[$]:(e,t)=>{const s=new Map;for(const n of t.keys()){const o=e.get(n);if(o==null)continue;const{score:u,terms:i,match:r}=t.get(n);N(o.terms,i),s.set(n,{score:o.score+u,terms:o.terms,match:Object.assign(o.match,r)})}return s},[rt]:(e,t)=>{for(const s of t.keys())e.delete(s);return e}},dt=(e,t,s,n,o,u)=>{const{k:i,b:r,d}=u;return Math.log(1+(s-t+.5)/(t+.5))*(d+e*(i+1)/(e+i*(1-r+r*n/o)))},at=e=>(t,s,n)=>{const o=typeof e.fuzzy=="function"?e.fuzzy(t,s,n):e.fuzzy||!1,u=typeof e.prefix=="function"?e.prefix(t,s,n):e.prefix===!0;return{term:t,fuzzy:o,prefix:u}},H=(e,t,s,n)=>{for(const o of Object.keys(e._fieldIds))if(e._fieldIds[o]===s){e._options.logger("warn",`SlimSearch: document with ID ${e._documentIds.get(t)} has changed before removal: term "${n}" was not present in field "${o}". Removing a document after it has changed can corrupt the index!`,"version_conflict");return}},ft=(e,t,s,n)=>{if(!e._index.has(n)){H(e,s,t,n);return}const o=e._index.fetch(n,lt),u=o.get(t);u==null||u.get(s)==null?H(e,s,t,n):u.get(s)<=1?u.size<=1?o.delete(t):u.delete(s):u.set(s,u.get(s)-1),e._index.get(n).size===0&&e._index.delete(n)},gt={k:1.2,b:.7,d:.5},mt={idField:"id",extractField:(e,t)=>e[t],tokenize:e=>e.split(it),processTerm:e=>e.toLowerCase(),fields:void 0,searchOptions:void 0,storeFields:[],logger:(e,t)=>{typeof console?.[e]=="function"&&console[e](t)},autoVacuum:!0},J={combineWith:M,prefix:!1,fuzzy:!1,maxFuzzy:6,boost:{},weights:{fuzzy:.45,prefix:.375},bm25:gt},pt={combineWith:$,prefix:(e,t,s)=>t===s.length-1},Ft={batchSize:1e3,batchWait:10},U={minDirtFactor:.1,minDirtCount:20},_t={...Ft,...U},K=Symbol("*"),yt=(e,t)=>{const s=new Map,n={...e._options.searchOptions,...t};for(const[o,u]of e._documentIds){const i=n.boostDocument?n.boostDocument(u,"",e._storedFields.get(o)):1;s.set(o,{score:i,terms:[],match:{}})}return s},X=(e,t=M)=>{if(e.length===0)return new Map;const s=t.toLowerCase(),n=ht[s];if(!n)throw new Error(`Invalid combination operator: ${t}`);return e.reduce(n)||new Map},S=(e,t,s,n,o,u,i,r,d=new Map)=>{if(o==null)return d;for(const c of Object.keys(u)){const a=u[c],h=e._fieldIds[c],g=o.get(h);if(g==null)continue;let m=g.size;const p=e._avgFieldLength[h];for(const l of g.keys()){if(!e._documentIds.has(l)){ft(e,h,l,s),m-=1;continue}const f=i?i(e._documentIds.get(l),s,e._storedFields.get(l)):1;if(!f)continue;const y=g.get(l),F=e._fieldLength.get(l)[h],v=dt(y,m,e._documentCount,F,p,r),z=n*a*f*v,A=d.get(l);if(A){A.score+=z,ct(A.terms,t);const w=G(A.match,s);w?w.push(c):A.match[s]=[c]}else d.set(l,{score:z,terms:[t],match:{[s]:[c]}})}}return d},At=(e,t,s)=>{const n={...e._options.searchOptions,...s},o=(n.fields||e._options.fields).reduce((l,f)=>({...l,[f]:G(n.boost,f)||1}),{}),{boostDocument:u,weights:i,maxFuzzy:r,bm25:d}=n,{fuzzy:c,prefix:a}={...J.weights,...i},h=e._index.get(t.term),g=S(e,t.term,t.term,1,h,o,u,d);let m,p;if(t.prefix&&(m=e._index.atPrefix(t.term)),t.fuzzy){const l=t.fuzzy===!0?.2:t.fuzzy,f=l<1?Math.min(r,Math.round(t.term.length*l)):l;f&&(p=e._index.fuzzyGet(t.term,f))}if(m)for(const[l,f]of m){const y=l.length-t.term.length;if(!y)continue;p?.delete(l);const F=a*l.length/(l.length+.3*y);S(e,t.term,l,F,f,o,u,d,g)}if(p)for(const l of p.keys()){const[f,y]=p.get(l);if(!y)continue;const F=c*l.length/(l.length+y);S(e,t.term,l,F,f,o,u,d,g)}return g},Y=(e,t,s={})=>{if(t===K)return yt(e,s);if(typeof t!="string"){const a={...s,...t,queries:void 0},h=t.queries.map(g=>Y(e,g,a));return X(h,a.combineWith)}const{tokenize:n,processTerm:o,searchOptions:u}=e._options,i={tokenize:n,processTerm:o,...u,...s},{tokenize:r,processTerm:d}=i,c=r(t).flatMap(a=>d(a)).filter(a=>!!a).map(at(i)).map(a=>At(e,a,i));return X(c,i.combineWith)},Q=(e,t,s={})=>{const n=Y(e,t,s),o=[];for(const[u,{score:i,terms:r,match:d}]of n){const c=r.length||1,a={id:e._documentIds.get(u),score:i*c,terms:Object.keys(d),queryTerms:r,match:d};Object.assign(a,e._storedFields.get(u)),(s.filter==null||s.filter(a))&&o.push(a)}return t===K&&s.boostDocument==null&&e._options.searchOptions.boostDocument==null||o.sort(P),o},Ct=(e,t,s={})=>{s={...e._options.autoSuggestOptions,...s};const n=new Map;for(const{score:u,terms:i}of Q(e,t,s)){const r=i.join(" "),d=n.get(r);d!=null?(d.score+=u,d.count+=1):n.set(r,{score:u,terms:i,count:1})}const o=[];for(const[u,{score:i,terms:r,count:d}]of n)o.push({suggestion:u,terms:r,score:i/d});return o.sort(P),o};class Et{_options;_index;_documentCount;_documentIds;_idToShortId;_fieldIds;_fieldLength;_avgFieldLength;_nextId;_storedFields;_dirtCount;_currentVacuum;_enqueuedVacuum;_enqueuedVacuumConditions;constructor(t){if(t?.fields==null)throw new Error('SlimSearch: option "fields" must be provided');const s=t.autoVacuum==null||t.autoVacuum===!0?_t:t.autoVacuum;this._options={...mt,...t,autoVacuum:s,searchOptions:{...J,...t.searchOptions||{}},autoSuggestOptions:{...pt,...t.autoSuggestOptions||{}}},this._index=new C,this._documentCount=0,this._documentIds=new Map,this._idToShortId=new Map,this._fieldIds={},this._fieldLength=new Map,this._avgFieldLength=[],this._nextId=0,this._storedFields=new Map,this._dirtCount=0,this._currentVacuum=null,this._enqueuedVacuum=null,this._enqueuedVacuumConditions=U,this.addFields(this._options.fields)}get isVacuuming(){return this._currentVacuum!=null}get dirtCount(){return this._dirtCount}get dirtFactor(){return this._dirtCount/(1+this._documentCount+this._dirtCount)}get documentCount(){return this._documentCount}get termCount(){return this._index.size}toJSON(){const t=[];for(const[s,n]of this._index){const o={};for(const[u,i]of n)o[u]=Object.fromEntries(i);t.push([s,o])}return{documentCount:this._documentCount,nextId:this._nextId,documentIds:Object.fromEntries(this._documentIds),fieldIds:this._fieldIds,fieldLength:Object.fromEntries(this._fieldLength),averageFieldLength:this._avgFieldLength,storedFields:Object.fromEntries(this._storedFields),dirtCount:this._dirtCount,index:t,serializationVersion:2}}addFields(t){for(let s=0;s<t.length;s++)this._fieldIds[t[s]]=s}}const zt=({index:e,documentCount:t,nextId:s,documentIds:n,fieldIds:o,fieldLength:u,averageFieldLength:i,storedFields:r,dirtCount:d,serializationVersion:c},a)=>{if(c!==1&&c!==2)throw new Error("SlimSearch: cannot deserialize an index created with an incompatible version");const h=new Et(a);h._documentCount=t,h._nextId=s,h._documentIds=b(n),h._idToShortId=new Map,h._fieldIds=o,h._fieldLength=b(u),h._avgFieldLength=i,h._storedFields=b(r),h._dirtCount=d||0,h._index=new C;for(const[g,m]of h._documentIds)h._idToShortId.set(m,g);for(const[g,m]of e){const p=new Map;for(const l of Object.keys(m)){let f=m[l];c===1&&(f=f.ds),p.set(parseInt(l,10),b(f))}h._index.set(g,p)}return h},B=(e,t)=>{const s=e.toLowerCase(),n=t.toLowerCase(),o=[];let u=0,i=0;const r=(c,a=!1)=>{let h="";i===0?h=c.length>20?`… ${c.slice(-20)}`:c:a?h=c.length+i>100?`${c.slice(0,100-i)}… `:c:h=c.length>20?`${c.slice(0,20)} … ${c.slice(-20)}`:c,h&&o.push(h),i+=h.length,a||(o.push(["mark",t]),i+=t.length,i>=100&&o.push(" …"))};let d=s.indexOf(n,u);if(d===-1)return null;for(;d>=0;){const c=d+n.length;if(r(e.slice(u,d)),u=c,i>100)break;d=s.indexOf(n,u)}return i<100&&r(e.slice(u),!0),o},wt=(e,t)=>t.contents.reduce((s,[,n])=>s+n,0)-e.contents.reduce((s,[,n])=>s+n,0),xt=(e,t)=>Math.max(...t.contents.map(([,s])=>s))-Math.max(...e.contents.map(([,s])=>s)),Z=(e,t,s={})=>{const n={};return Q(t,e,{boost:{h:2,t:1,c:4},prefix:!0,...s}).forEach(o=>{const{id:u,terms:i,score:r}=o,d=u.includes("@"),c=u.includes("#"),[a,h]=u.split(/[#@]/),g=Number(a),m=i.sort((l,f)=>l.length-f.length).filter((l,f)=>i.slice(f+1).every(y=>!y.includes(l))),{contents:p}=n[g]??={title:"",contents:[]};if(d)p.push([{type:"customField",id:g,index:h,display:m.map(l=>o.c.map(f=>B(f,l))).flat().filter(l=>l!==null)},r]);else{const l=m.map(f=>B(o.h,f)).filter(f=>f!==null);if(l.length&&p.push([{type:c?"heading":"title",id:g,...c&&{anchor:h},display:l},r]),"t"in o)for(const f of o.t){const y=m.map(F=>B(f,F)).filter(F=>F!==null);y.length&&p.push([{type:"text",id:g,...c&&{anchor:h},display:y},r])}}}),V(n).sort(([,o],[,u])=>"max"==="total"?wt(o,u):xt(o,u)).map(([o,{title:u,contents:i}])=>{if(!u){const r=ut(t,o);r&&(u=r.h)}return{title:u,contents:i.map(([r])=>r)}})},tt=(e,t,s={})=>Ct(t,e,{fuzzy:.2,maxFuzzy:3,...s}).map(({suggestion:n})=>n),bt=et(V(JSON.parse("{\"/\":{\"documentCount\":497,\"nextId\":497,\"documentIds\":{\"0\":\"2\",\"1\":\"2#翻唱\",\"2\":\"2@0\",\"3\":\"3\",\"4\":\"4\",\"5\":\"5\",\"6\":\"5#命令\",\"7\":\"5#删除过多层文件夹\",\"8\":\"5#编程\",\"9\":\"5#node相关\",\"10\":\"5#go相关\",\"11\":\"5#java-相关\",\"12\":\"5#python-相关\",\"13\":\"5#rust-相关\",\"14\":\"5#前端\",\"15\":\"5#数据解构及设计模式\",\"16\":\"5#运维\",\"17\":\"5#ai-相关\",\"18\":\"5#英语\",\"19\":\"5#电子书\",\"20\":\"5#未分类\",\"21\":\"5#常用软件相关\",\"22\":\"5#娱乐\",\"23\":\"5@0\",\"24\":\"5@1\",\"25\":\"6\",\"26\":\"7\",\"27\":\"7#服务注册中心\",\"28\":\"7#服务调用\",\"29\":\"7#服务熔断与降级\",\"30\":\"7#服务网关\",\"31\":\"7#服务配置\",\"32\":\"7#服务总线\",\"33\":\"7#链路追踪\",\"34\":\"7#鉴权\",\"35\":\"7#分布式事务\",\"36\":\"7#服务监控\",\"37\":\"7#日志收集\",\"38\":\"7#部署\",\"39\":\"8\",\"40\":\"9\",\"41\":\"9#问题\",\"42\":\"9#docker-容器日期与宿主主机时间不一致解决\",\"43\":\"9#已非-jar-包形式部署-spring-boot-项目挂载项目\",\"44\":\"9#收藏网址\",\"45\":\"9@0\",\"46\":\"9@1\",\"47\":\"10\",\"48\":\"10#前情提要\",\"49\":\"10#前期准备\",\"50\":\"10#具体命令\",\"51\":\"10#说明\",\"52\":\"10@0\",\"53\":\"10@1\",\"54\":\"11\",\"55\":\"11@0\",\"56\":\"11@1\",\"57\":\"12\",\"58\":\"12#命令\",\"59\":\"12#根据日期查询并复制到新路径\",\"60\":\"12#常用\",\"61\":\"12#收藏网址\",\"62\":\"12@0\",\"63\":\"12@1\",\"64\":\"13\",\"65\":\"13#问题\",\"66\":\"13#解决\",\"67\":\"13@0\",\"68\":\"13@1\",\"69\":\"14\",\"70\":\"15\",\"71\":\"15@0\",\"72\":\"15@1\",\"73\":\"16\",\"74\":\"16@0\",\"75\":\"16@1\",\"76\":\"17\",\"77\":\"17@0\",\"78\":\"17@1\",\"79\":\"18\",\"80\":\"18@0\",\"81\":\"18@1\",\"82\":\"19\",\"83\":\"19#发现错误过程\",\"84\":\"19@0\",\"85\":\"19@1\",\"86\":\"20\",\"87\":\"20#问题\",\"88\":\"20@0\",\"89\":\"20@1\",\"90\":\"21\",\"91\":\"21#强制-http-跳转-https\",\"92\":\"21#使用-nginx-将-http-重定向到-https\",\"93\":\"21#项目处于安全考虑-通过-nginx-强制-http-转换成-https-但遇到报-get-不支持错误。\",\"94\":\"21#_3xx-重定向\",\"95\":\"21@0\",\"96\":\"21@1\",\"97\":\"22\",\"98\":\"22#解决办法\",\"99\":\"22#补充\",\"100\":\"22@0\",\"101\":\"22@1\",\"102\":\"23\",\"103\":\"23#原因\",\"104\":\"23#解决方法\",\"105\":\"23@0\",\"106\":\"23@1\",\"107\":\"24\",\"108\":\"24#索引\",\"109\":\"24#单列索引\",\"110\":\"24#组合索引\",\"111\":\"24#explain\",\"112\":\"24#最左优先原则\",\"113\":\"24#底层原理\",\"114\":\"24#锁机制\",\"115\":\"24#事务隔离级别\",\"116\":\"24#差异摘要-mongodb-与mysql\",\"117\":\"24@0\",\"118\":\"24@1\",\"119\":\"25\",\"120\":\"25#持久化\",\"121\":\"25#事务\",\"122\":\"25#锁\",\"123\":\"25#分布式\",\"124\":\"25#主从复制\",\"125\":\"25#哨兵模式\",\"126\":\"25#集群部署\",\"127\":\"25@0\",\"128\":\"25@1\",\"129\":\"26\",\"130\":\"26#原因\",\"131\":\"26#解决\",\"132\":\"26#更换-jdk-版本\",\"133\":\"26#修改-jre-配置\",\"134\":\"26#dockerfile-里添加修改命令\",\"135\":\"26#修改数据库支持-tlsv1-2\",\"136\":\"26@0\",\"137\":\"26@1\",\"138\":\"27\",\"139\":\"27#面向对象设计原则\",\"140\":\"27#单一职责原则\",\"141\":\"27#开闭原则\",\"142\":\"27#里氏替换原则\",\"143\":\"27#依赖倒转原则\",\"144\":\"27#接口隔离原则\",\"145\":\"27#合成复用原则\",\"146\":\"27#迪米特法则\",\"147\":\"27#创建型-设计模式\",\"148\":\"27#工厂方法模式\",\"149\":\"27#优点\",\"150\":\"27#缺点\",\"151\":\"27#抽象工厂类\",\"152\":\"27#优点-1\",\"153\":\"27#缺点-1\",\"154\":\"27#建造者-生成器模式\",\"155\":\"27#优点-2\",\"156\":\"27#缺点-2\",\"157\":\"27#单例模式\",\"158\":\"27#优点-3\",\"159\":\"27#缺点-3\",\"160\":\"27#原型模式\",\"161\":\"27#优点-4\",\"162\":\"27#缺点-4\",\"163\":\"27#结构型-设计模式\",\"164\":\"27#类-对象适配器模式\",\"165\":\"27#优点-5\",\"166\":\"27#缺点-5\",\"167\":\"27#桥接模式\",\"168\":\"27#优点-6\",\"169\":\"27#缺点-6\",\"170\":\"27#组合模式\",\"171\":\"27#优点-7\",\"172\":\"27#缺点-7\",\"173\":\"27#装饰模式\",\"174\":\"27#优点-8\",\"175\":\"27#缺点-8\",\"176\":\"27#代理模式\",\"177\":\"27#优点-9\",\"178\":\"27#缺点-9\",\"179\":\"27#外观模式\",\"180\":\"27#优点-10\",\"181\":\"27#缺点-10\",\"182\":\"27#享元模式\",\"183\":\"27#优点-11\",\"184\":\"27#缺点-11\",\"185\":\"27#行为型-设计模式\",\"186\":\"27#解释器模式\",\"187\":\"27#模板方法模式\",\"188\":\"27#优点-12\",\"189\":\"27#缺点-12\",\"190\":\"27#责任链模式\",\"191\":\"27#优点-13\",\"192\":\"27#缺点-13\",\"193\":\"27#命令模式\",\"194\":\"27#优点-14\",\"195\":\"27#缺点-14\",\"196\":\"27#迭代器模式\",\"197\":\"27#优点-15\",\"198\":\"27#缺点-15\",\"199\":\"27#中介者模式\",\"200\":\"27#优点-16\",\"201\":\"27#缺点-16\",\"202\":\"27#备忘录模式\",\"203\":\"27#优点-17\",\"204\":\"27#缺点-17\",\"205\":\"27#观察者模式\",\"206\":\"27#优点-18\",\"207\":\"27#缺点-18\",\"208\":\"27#状态模式\",\"209\":\"27#优点-19\",\"210\":\"27#缺点-19\",\"211\":\"27#策略模式\",\"212\":\"27#优点-20\",\"213\":\"27#缺点-20\",\"214\":\"27#访问者模式\",\"215\":\"27#优点-21\",\"216\":\"27#缺点-21\",\"217\":\"27#项目所用到\",\"218\":\"27#参考文章\",\"219\":\"27@0\",\"220\":\"27@1\",\"221\":\"28\",\"222\":\"28#并发与并行\",\"223\":\"28#锁机制\",\"224\":\"28#重量级锁\",\"225\":\"28#轻量级锁\",\"226\":\"28#偏向锁\",\"227\":\"28#锁消除和锁粗化\",\"228\":\"28#jmm-内存模型\",\"229\":\"28#java-内存模型\",\"230\":\"28#指令重排序\",\"231\":\"28#volatile-关键字\",\"232\":\"28#happens-before-原则\",\"233\":\"28#锁框架\",\"234\":\"28#lock和condition接口\",\"235\":\"28#可重入锁\",\"236\":\"28#公平锁与非公平锁\",\"237\":\"28#读写锁\",\"238\":\"28#锁降级和锁升级\",\"239\":\"28#原子类\",\"240\":\"28#aba-问题\",\"241\":\"28#并发容器\",\"242\":\"28#线程池\",\"243\":\"28#fork-join框架\",\"244\":\"28#自我感悟\",\"245\":\"28#参考文章\",\"246\":\"28@0\",\"247\":\"28@1\",\"248\":\"29\",\"249\":\"29#技术概括\",\"250\":\"29#jvm-启动流程探究\",\"251\":\"29#jni调用本地方法\",\"252\":\"29#jvm-内存管理\",\"253\":\"29#内存区域划分\",\"254\":\"29#爆内存和爆栈\",\"255\":\"29#申请堆外内存\",\"256\":\"29#垃圾回收机制\",\"257\":\"29#对象存活判定算法\",\"258\":\"29#引用计数法\",\"259\":\"29#可达性分析法\",\"260\":\"29#最终判定\",\"261\":\"29#垃圾回收算法\",\"262\":\"29#分代收集机制\",\"263\":\"29#空间分配担保\",\"264\":\"29#标记-清除算法\",\"265\":\"29#标记-复制算法\",\"266\":\"29#标记-整理算法\",\"267\":\"29#垃圾集实现\",\"268\":\"29#garbage-first-g1-收集器\",\"269\":\"29#元空间\",\"270\":\"29#引用类型\",\"271\":\"29#类与类加载\",\"272\":\"29#参考文章\",\"273\":\"29@0\",\"274\":\"29@1\",\"275\":\"30\",\"276\":\"30#二进制\",\"277\":\"30#反码\",\"278\":\"30#补码\",\"279\":\"30#斐波那契数列\",\"280\":\"30#lambda-表达式\",\"281\":\"30#函数式接口\",\"282\":\"30#数据解构\",\"283\":\"30#线性表-顺序表\",\"284\":\"30#线性表-链表\",\"285\":\"30#线性表-栈\",\"286\":\"30#线性表-队列\",\"287\":\"30#树-二叉树\",\"288\":\"30#二叉查找树和平衡二叉树\",\"289\":\"30#树-红黑树\",\"290\":\"30#哈希表\",\"291\":\"30#集合类与-io\",\"292\":\"30#list-列表\",\"293\":\"30#queue-和-deque-双端队列\",\"294\":\"30#set-集合\",\"295\":\"30#map-映射\",\"296\":\"30#文件字节流\",\"297\":\"30#字符流\",\"298\":\"30#缓冲流\",\"299\":\"30#转换流\",\"300\":\"30#打印流\",\"301\":\"30#数据流\",\"302\":\"30#对象流\",\"303\":\"30#多线程与反射\",\"304\":\"30#线程的休眠和中断\",\"305\":\"30#线程优先级\",\"306\":\"30#线程的礼让和加入\",\"307\":\"30#线程锁和线程同步\",\"308\":\"30#死锁\",\"309\":\"30#wait-和-notify-方法\",\"310\":\"30#threalocal\",\"311\":\"30#定时器\",\"312\":\"30#守护线程\",\"313\":\"30#java-类加载机制\",\"314\":\"30#反射创建类对象\",\"315\":\"30#反射调用类方法\",\"316\":\"30#反射修改类的属性\",\"317\":\"30#类加载器\",\"318\":\"30#注解\",\"319\":\"30#预设注解\",\"320\":\"30#元注解\",\"321\":\"30#参考文章\",\"322\":\"30@0\",\"323\":\"30@1\",\"324\":\"31\",\"325\":\"31#spring-boot-配置\",\"326\":\"31#docker-部署-prometheus-和-grafana\",\"327\":\"31#prometheus-配置文件\",\"328\":\"31#docker-compose-配置文件\",\"329\":\"31#grafana-配置-prometheus-数据源\",\"330\":\"31@0\",\"331\":\"31@1\",\"332\":\"32\",\"333\":\"32#type-接口简介\",\"334\":\"32#如何获取泛型的参数类型\",\"335\":\"32#参考文章\",\"336\":\"32@0\",\"337\":\"32@1\",\"338\":\"33\",\"339\":\"33#rust-基础入门\",\"340\":\"33#变量绑定与解构\",\"341\":\"33#变量命名\",\"342\":\"33#变量绑定\",\"343\":\"33#变量可变性\",\"344\":\"33#变量解构\",\"345\":\"33#变量和常量之间的差异\",\"346\":\"33#变量遮蔽-shadowing\",\"347\":\"33#课后练习\",\"348\":\"33#整数类型\",\"349\":\"33#浮点类型\",\"350\":\"33#位运算\",\"351\":\"33#序列\",\"352\":\"33#使用-as-完成类型转换\",\"353\":\"33#有理数和复数\",\"354\":\"33#练习\",\"355\":\"33#字符、布尔、单元类型\",\"356\":\"33#字符类型-char\",\"357\":\"33#单元类型\",\"358\":\"33#练习-1\",\"359\":\"33#语句和表达式\",\"360\":\"33#语句\",\"361\":\"33#表达式\",\"362\":\"33#练习-2\",\"363\":\"33#函数\",\"364\":\"33#函数要点\",\"365\":\"33#函数参数\",\"366\":\"33#函数返回\",\"367\":\"33#永不返回的发散函数\",\"368\":\"33#练习-3\",\"369\":\"33#所有权\",\"370\":\"33#理清栈-stack-与堆-heap-的关系\",\"371\":\"33#所有权原则\",\"372\":\"33#练习-4\",\"373\":\"33#引用与借用\",\"374\":\"33#获取变量的引用-称之为借用-borrowing\",\"375\":\"33#引用与解引用\",\"376\":\"33#不可变引用\",\"377\":\"33#可变引用\",\"378\":\"33#总结\",\"379\":\"33#练习-5\",\"380\":\"33#字符串与切片\",\"381\":\"33#字符串\",\"382\":\"33#string-与-str-的转换\",\"383\":\"33#字符串索引\",\"384\":\"33#操作字符串\",\"385\":\"33#字符串转义\",\"386\":\"33#操作-utf-8-字符串\",\"387\":\"33#练习-6\",\"388\":\"33#元组\",\"389\":\"33#示例\",\"390\":\"33#结构体\",\"391\":\"33#结构体语法\",\"392\":\"33#使用-derive-debug-来打印结构体的信息\",\"393\":\"33#练习-7\",\"394\":\"33#枚举\",\"395\":\"33#练习-8\",\"396\":\"33#数组\",\"397\":\"33#含义\",\"398\":\"33#数组切片\",\"399\":\"33#总结-1\",\"400\":\"33#练习-9\",\"401\":\"33#源文章\",\"402\":\"33@0\",\"403\":\"33@1\",\"404\":\"34\",\"405\":\"34#rust-基础入门\",\"406\":\"34#流程控制\",\"407\":\"34#注意事项\",\"408\":\"34#练习\",\"409\":\"34#match-和-if-let\",\"410\":\"34#通用形式\",\"411\":\"34#if-let-匹配\",\"412\":\"34#matches-宏\",\"413\":\"34#变量遮蔽\",\"414\":\"34#练习-1\",\"415\":\"34#解构-option\",\"416\":\"34#定义\",\"417\":\"34#方法-method\",\"418\":\"34#定义-1\",\"419\":\"34#关联函数\",\"420\":\"34#多个-impl-定义\",\"421\":\"34#练习-2\",\"422\":\"34#泛型\",\"423\":\"34#const-泛型-rust-1-51-版本引入的重要特性\",\"424\":\"34#练习-3\",\"425\":\"34#特征\",\"426\":\"34#定义-2\",\"427\":\"34#特征约束\",\"428\":\"34#练习-4\",\"429\":\"34#特征对象\",\"430\":\"34#练习-5\",\"431\":\"34#动态数组-vector\",\"432\":\"34#创建\",\"433\":\"34#更新\",\"434\":\"34#读取\",\"435\":\"34#存储不同元素\",\"436\":\"34#vector-常用方法\",\"437\":\"34#vector-的排序\",\"438\":\"34#练习-6\",\"439\":\"34#kv-存储-hashmap\",\"440\":\"34#创建-1\",\"441\":\"34#查询\",\"442\":\"34#更新-hashmap-中的值\",\"443\":\"34#练习-7\",\"444\":\"34#生命周期\",\"445\":\"34#消除规则\",\"446\":\"34#静态生命周期\",\"447\":\"34#返回值和错误处理\",\"448\":\"34#包和模块\",\"449\":\"34#注释和文档\",\"450\":\"34#格式化输出\",\"451\":\"34#源文章\",\"452\":\"34@0\",\"453\":\"34@1\",\"454\":\"35\",\"455\":\"35#ioc\",\"456\":\"35#spring-高级特性\",\"457\":\"35#springel-表达式\",\"458\":\"35#aop\",\"459\":\"35#事务\",\"460\":\"35#bean-工厂与-bean-定义\",\"461\":\"35#bean-生命周期\",\"462\":\"35#springboot-启动原理\",\"463\":\"35@0\",\"464\":\"35@1\",\"465\":\"36\",\"466\":\"36#前言\",\"467\":\"36#基本环境搭建\",\"468\":\"36#创建-react-typescript-项目\",\"469\":\"36#安装-react-app-rewired-以及-cross-env\",\"470\":\"36#创建-react-app-rewired-配置文件-config-overrides-js-用于扩展-webpack-配置\",\"471\":\"36#安装-electron-环境\",\"472\":\"36#创建-electron-环境\",\"473\":\"36#添加相关脚本\",\"474\":\"36#添加-electron-及-node-js-相关代码-用于测试是否集成完毕\",\"475\":\"36#运行测试\",\"476\":\"36#项目打包\",\"477\":\"36#开始打包\",\"478\":\"36#github\",\"479\":\"36#参考文章\",\"480\":\"36@0\",\"481\":\"36@1\",\"482\":\"37\",\"483\":\"37#什么是redis\",\"484\":\"37#官方资料\",\"485\":\"37@0\",\"486\":\"37@1\",\"487\":\"38\",\"488\":\"39\",\"489\":\"40\",\"490\":\"41\",\"491\":\"42\",\"492\":\"43\",\"493\":\"44\",\"494\":\"45\",\"495\":\"46\",\"496\":\"47\"},\"fieldIds\":{\"h\":0,\"t\":1,\"c\":2},\"fieldLength\":{\"0\":[7],\"1\":[1],\"2\":[null,null,1],\"3\":[1,2],\"4\":[1],\"5\":[1],\"6\":[1],\"7\":[1,10],\"8\":[1],\"9\":[1,19],\"10\":[1,11],\"11\":[2,17],\"12\":[2,4],\"13\":[2,2],\"14\":[1,12],\"15\":[1,3],\"16\":[1,10],\"17\":[2,5],\"18\":[1,4],\"19\":[1,7],\"20\":[1,9],\"21\":[1,47],\"22\":[1,7],\"23\":[null,null,1],\"24\":[null,null,2],\"25\":[1,3489],\"26\":[1],\"27\":[1,85],\"28\":[1,14],\"29\":[1,148],\"30\":[1,28],\"31\":[1,44],\"32\":[1,12],\"33\":[1,3],\"34\":[1,3],\"35\":[1,1],\"36\":[1,3],\"37\":[1,4],\"38\":[1,7],\"39\":[1],\"40\":[1],\"41\":[1],\"42\":[2,10],\"43\":[6,91],\"44\":[1,6],\"45\":[null,null,1],\"46\":[null,null,1],\"47\":[3],\"48\":[1,7],\"49\":[1,11],\"50\":[1,33],\"51\":[1,37],\"52\":[null,null,1],\"53\":[null,null,2],\"54\":[3,76],\"55\":[null,null,1],\"56\":[null,null,1],\"57\":[1],\"58\":[1],\"59\":[1,14],\"60\":[1,244],\"61\":[1,4],\"62\":[null,null,1],\"63\":[null,null,2],\"64\":[4],\"65\":[1,1],\"66\":[1,21],\"67\":[null,null,1],\"68\":[null,null,2],\"69\":[1],\"70\":[2,252],\"71\":[null,null,2],\"72\":[null,null,1],\"73\":[2,45],\"74\":[null,null,2],\"75\":[null,null,2],\"76\":[2,48],\"77\":[null,null,2],\"78\":[null,null,3],\"79\":[4,49],\"80\":[null,null,2],\"81\":[null,null,4],\"82\":[4],\"83\":[1,116],\"84\":[null,null,2],\"85\":[null,null,4],\"86\":[4],\"87\":[1,7],\"88\":[null,null,1],\"89\":[null,null,1],\"90\":[1],\"91\":[4],\"92\":[1,31],\"93\":[1,13],\"94\":[2,50],\"95\":[null,null,2],\"96\":[null,null,1],\"97\":[7],\"98\":[1,91],\"99\":[1,7],\"100\":[null,null,3],\"101\":[null,null,2],\"102\":[1],\"103\":[1,11],\"104\":[1,36],\"105\":[null,null,1],\"106\":[null,null,3],\"107\":[2],\"108\":[1],\"109\":[1,4],\"110\":[1,2],\"111\":[1,28],\"112\":[1],\"113\":[1,14],\"114\":[1],\"115\":[1,46],\"116\":[3,35],\"117\":[null,null,1],\"118\":[null,null,1],\"119\":[2],\"120\":[1,4],\"121\":[1,1],\"122\":[1,1],\"123\":[1],\"124\":[1],\"125\":[1],\"126\":[1],\"127\":[null,null,1],\"128\":[null,null,1],\"129\":[4],\"130\":[1,9],\"131\":[1],\"132\":[3],\"133\":[3,13],\"134\":[2,22],\"135\":[3],\"136\":[null,null,1],\"137\":[null,null,2],\"138\":[1],\"139\":[1],\"140\":[1,2],\"141\":[1,2],\"142\":[1,1],\"143\":[1,5],\"144\":[1,1],\"145\":[1,2],\"146\":[1,2],\"147\":[2],\"148\":[1,14],\"149\":[1,8],\"150\":[1,4],\"151\":[1,9],\"152\":[1,9],\"153\":[1,3],\"154\":[2,139],\"155\":[1,7],\"156\":[1,3],\"157\":[1,29],\"158\":[1,4],\"159\":[1,14],\"160\":[1,2],\"161\":[1,7],\"162\":[1,2],\"163\":[2],\"164\":[2,2],\"165\":[1,5],\"166\":[1,4],\"167\":[1],\"168\":[1,10],\"169\":[1,1],\"170\":[1],\"171\":[1,6],\"172\":[1,6],\"173\":[1,4],\"174\":[1,6],\"175\":[1,4],\"176\":[1],\"177\":[1,8],\"178\":[1,4],\"179\":[1],\"180\":[1,2],\"181\":[1,2],\"182\":[1],\"183\":[1,3],\"184\":[1,7],\"185\":[2],\"186\":[1,1],\"187\":[1],\"188\":[1,4],\"189\":[1,5],\"190\":[1],\"191\":[1,6],\"192\":[1,2],\"193\":[1],\"194\":[1,8],\"195\":[1,3],\"196\":[1],\"197\":[1,11],\"198\":[1,5],\"199\":[1],\"200\":[1,8],\"201\":[1,3],\"202\":[1],\"203\":[1,3],\"204\":[1,12],\"205\":[1],\"206\":[1,5],\"207\":[1,2],\"208\":[1],\"209\":[1,6],\"210\":[1,4],\"211\":[1],\"212\":[1,6],\"213\":[1,11],\"214\":[1],\"215\":[1,11],\"216\":[1,5],\"217\":[1,20],\"218\":[1,7],\"219\":[null,null,1],\"220\":[null,null,1],\"221\":[2],\"222\":[1],\"223\":[1],\"224\":[1,9],\"225\":[1,30],\"226\":[1],\"227\":[1,12],\"228\":[2,7],\"229\":[2],\"230\":[1,7],\"231\":[2,12],\"232\":[3],\"233\":[1],\"234\":[1],\"235\":[1,30],\"236\":[1,21],\"237\":[1,14],\"238\":[1,4],\"239\":[1,6],\"240\":[2,51],\"241\":[1],\"242\":[1,67],\"243\":[2,73],\"244\":[1,40],\"245\":[1,3],\"246\":[null,null,1],\"247\":[null,null,1],\"248\":[2],\"249\":[1,35],\"250\":[2,4],\"251\":[1],\"252\":[2],\"253\":[1,15],\"254\":[1,10],\"255\":[1],\"256\":[1],\"257\":[1],\"258\":[1,14],\"259\":[1,11],\"260\":[1,8],\"261\":[1],\"262\":[1,3],\"263\":[1],\"264\":[2],\"265\":[2],\"266\":[2],\"267\":[1],\"268\":[4,34],\"269\":[1],\"270\":[1,33],\"271\":[1],\"272\":[1,3],\"273\":[null,null,1],\"274\":[null,null,1],\"275\":[2],\"276\":[1],\"277\":[1,16],\"278\":[1,50],\"279\":[1,80],\"280\":[2,18],\"281\":[1,186],\"282\":[1],\"283\":[2],\"284\":[2],\"285\":[2,2],\"286\":[2,2],\"287\":[2,65],\"288\":[1,6],\"289\":[2,16],\"290\":[1],\"291\":[2,7],\"292\":[2,5],\"293\":[5,21],\"294\":[2,4],\"295\":[2,6],\"296\":[1,7],\"297\":[1,6],\"298\":[1,77],\"299\":[1,41],\"300\":[1,1],\"301\":[1,5],\"302\":[1,10],\"303\":[1],\"304\":[1,18],\"305\":[1,26],\"306\":[1,54],\"307\":[1,1],\"308\":[1,6],\"309\":[4,74],\"310\":[1,11],\"311\":[1],\"312\":[1,49],\"313\":[2,8],\"314\":[1],\"315\":[1],\"316\":[1],\"317\":[1,18],\"318\":[1],\"319\":[1,26],\"320\":[1,22],\"321\":[1,3],\"322\":[null,null,1],\"323\":[null,null,1],\"324\":[7],\"325\":[3,150],\"326\":[5],\"327\":[2,42],\"328\":[3,45],\"329\":[4,6],\"330\":[null,null,1],\"331\":[null,null,5],\"332\":[2],\"333\":[2,29],\"334\":[2,193],\"335\":[1,12],\"336\":[null,null,1],\"337\":[null,null,2],\"338\":[2],\"339\":[2,5],\"340\":[1],\"341\":[1,2],\"342\":[1,5],\"343\":[1,12],\"344\":[1,27],\"345\":[1,19],\"346\":[3,22],\"347\":[1,6],\"348\":[1,56],\"349\":[1,62],\"350\":[1,26],\"351\":[1,10],\"352\":[3],\"353\":[1,4],\"354\":[1,6],\"355\":[3],\"356\":[3,21],\"357\":[1,48],\"358\":[1,6],\"359\":[1],\"360\":[1,16],\"361\":[1,30],\"362\":[1,6],\"363\":[1],\"364\":[1,13],\"365\":[1,21],\"366\":[1,25],\"367\":[1,8],\"368\":[1,6],\"369\":[1],\"370\":[1],\"371\":[1,11],\"372\":[1,6],\"373\":[1],\"374\":[1],\"375\":[1,10],\"376\":[1],\"377\":[1,4],\"378\":[1,4],\"379\":[1,6],\"380\":[1],\"381\":[1,23],\"382\":[1,7],\"383\":[1,9],\"384\":[1,101],\"385\":[1],\"386\":[1,9],\"387\":[1,9],\"388\":[1],\"389\":[1,41],\"390\":[1],\"391\":[1,7],\"392\":[1],\"393\":[1,6],\"394\":[1],\"395\":[1,6],\"396\":[1],\"397\":[1,13],\"398\":[1],\"399\":[1,63],\"400\":[1,6],\"401\":[1,4],\"402\":[null,null,1],\"403\":[null,null,1],\"404\":[4],\"405\":[2,10],\"406\":[1],\"407\":[1,8],\"408\":[1,6],\"409\":[4],\"410\":[1,11],\"411\":[1,7],\"412\":[1,30],\"413\":[1],\"414\":[1,6],\"415\":[2],\"416\":[1,8],\"417\":[2],\"418\":[1,22],\"419\":[1,39],\"420\":[1,14],\"421\":[1,6],\"422\":[1],\"423\":[1],\"424\":[1,8],\"425\":[1],\"426\":[1,34],\"427\":[1,26],\"428\":[1,6],\"429\":[1],\"430\":[1,6],\"431\":[2],\"432\":[1,4],\"433\":[1,4],\"434\":[1,23],\"435\":[1,2],\"436\":[1],\"437\":[1],\"438\":[1,6],\"439\":[3],\"440\":[1,38],\"441\":[1,16],\"442\":[1],\"443\":[1,6],\"444\":[1],\"445\":[1,11],\"446\":[1,2],\"447\":[1],\"448\":[1],\"449\":[1],\"450\":[1],\"451\":[1,4],\"452\":[null,null,1],\"453\":[null,null,1],\"454\":[2],\"455\":[1,61],\"456\":[2,85],\"457\":[2,1],\"458\":[1,34],\"459\":[1],\"460\":[3,26],\"461\":[2,5],\"462\":[2,4],\"463\":[null,null,1],\"464\":[null,null,1],\"465\":[5],\"466\":[1,51],\"467\":[1],\"468\":[5,6],\"469\":[7,8],\"470\":[11,39],\"471\":[3,16],\"472\":[3,206],\"473\":[1,23],\"474\":[7,138],\"475\":[1,7],\"476\":[1,36],\"477\":[1,13],\"478\":[1,4],\"479\":[1,5],\"480\":[null,null,1],\"481\":[null,null,5],\"482\":[2],\"483\":[1,30],\"484\":[1,33],\"485\":[null,null,2],\"486\":[null,null,2],\"487\":[1,3],\"488\":[1],\"489\":[1],\"490\":[1],\"491\":[2],\"492\":[1],\"493\":[1],\"494\":[1],\"495\":[1],\"496\":[1]},\"averageFieldLength\":[1.4374929865575656,46.012889736645576,0.9088931719658128],\"storedFields\":{\"0\":{\"h\":\"That's Why (You Go Away)\"},\"1\":{\"h\":\"翻唱\"},\"2\":{\"c\":[\"English\"]},\"3\":{\"h\":\"\",\"t\":[\"目录 \"]},\"4\":{\"h\":\"\"},\"5\":{\"h\":\"收藏笔记\"},\"6\":{\"h\":\"命令\"},\"7\":{\"h\":\"删除过多层文件夹\",\"t\":[\"robocopy /MIR D:\\\\empty-folder D:\\\\folder-to-delete D:\\\\empty-folder 为新建的空文件夹 D:\\\\folder-to-delete 目标删除文件夹 \"]},\"8\":{\"h\":\"编程\"},\"9\":{\"h\":\"Node相关\",\"t\":[\"GNVM 是一个简单的 Node.js 多版本管理器\",\"[^针对 Windows 环境且只是替换 node.exe 文件]:\",\"NVM for Windows Windows 环境下管理 Node.js 多版本\",\"NRM 是一个 npm 源管理器\"]},\"10\":{\"h\":\"Go相关\",\"t\":[\"g 是一个 Linux、macOS、Windows 下的命令行工具，可以提供一个便捷的多版本 go 环境的管理和切换\",\"Golang 标准库文档\"]},\"11\":{\"h\":\"Java 相关\",\"t\":[\"Reactor 指南中文版\",\"Java 全栈知识体系\",\"Java 程序员进阶之路\",\"JavaGuide\",\"文档收集整理 计算机、Java 相关基础知识\",\"实现同样逻辑，代码量减少90%，Java 程序员必会的工具库\",\"使用时需多考虑性能方面慎用\",\"Hutool\",\"Java 工具类库\",\"Spring 中文文档\"]},\"12\":{\"h\":\"Python 相关\",\"t\":[\"Python 入门\",\"Python 最佳实践指南！\"]},\"13\":{\"h\":\"Rust 相关\",\"t\":[\"Rust 语言圣经\"]},\"14\":{\"h\":\"前端\",\"t\":[\"component party\",\"对比诸如 Vue 和 React 等前端框架语法差异\",\"现代 JavaScript 教程\",\"TypeScript 教程\",\"TypeScript 使用指南手册\"]},\"15\":{\"h\":\"数据解构及设计模式\",\"t\":[\"数据可视化\",\"便于理解B+树等数据结构\",\"设计模式\"]},\"16\":{\"h\":\"运维\",\"t\":[\"Docker 从入门到实践\",\"从 Docker 到 Kubernetes 进阶\",\"Vim 命令速查表\",\"Linux 命令搜索\"]},\"17\":{\"h\":\"AI 相关\",\"t\":[\"stable diffusion 模板下载(civitai)\"]},\"18\":{\"h\":\"英语\",\"t\":[\"英配部落 英配动漫网站\",\"Vocabulary 用英语解释英语单词便于培养英语思维并记忆\"]},\"19\":{\"h\":\"电子书\",\"t\":[\"周读\",\"Z-Library 免费电子书\",\"书栈网\",\"开源工厂\",\"Library Genesis+ 免费电子书\"]},\"20\":{\"h\":\"未分类\",\"t\":[\"Hsz's Blog\",\"Best-websites-a-programmer-should-visit\"]},\"21\":{\"h\":\"常用软件相关\",\"t\":[\"Snipaste 是一个简单但强大的截图工具，但不支持截长图\",\"Wox 是一个高效启动器，个人感觉做工简陋\",\"Flow Launcher 兼容 WOX 插件且美观，若仅为快速启动和搜索建议用这个\",\"uTools 相对 Wox 和 Flow 功能丰富但略显花哨\",\"Everything 基于名称快速定位文件和文件夹\",\"Bandizip 是一个强大的多功能压缩文件管理工具，可提供很快的解压缩速度和其他各种实用功能\",\"Typora Markdown编辑工具，最新版开始收费\",\"Sumatra PDF 是免费支持 PDF、ebook 等格式阅读器\",\"Huorong-Rules 火绒高级防护规则\",\"IDEA 相关 IDEA懂得都懂\",\"Progsoft 寻找相似软件替代品\",\"发烧友绿软软件安全无法保证谨慎安装\",\"TrafficMonitor\",\"用于Windows平台的网速监控悬浮窗软件，可以显示当前网速、CPU及内存利用率，支持嵌入到任务栏显示，支持更换皮肤、历史流量统计等功能。\",\"KeePassXC 跨平台密码管理工具\"]},\"22\":{\"h\":\"娱乐\",\"t\":[\"💻Desktop48 口袋48桌面版\",\"📻UnblockNeteaseMusic 懂得都懂\",\"📻音乐下载\",\"📺赛事直播\",\"😄emoji\"]},\"23\":{\"c\":[\"收藏\"]},\"24\":{\"c\":[\"软件\",\"收藏网址\"]},\"25\":{\"h\":\"Emoji表情\",\"t\":[\"{ \\\"100\\\": \\\"💯\\\", \\\"1234\\\": \\\"🔢\\\", \\\"grinning\\\": \\\"😀\\\", \\\"smiley\\\": \\\"😃\\\", \\\"smile\\\": \\\"😄\\\", \\\"grin\\\": \\\"😁\\\", \\\"laughing\\\": \\\"😆\\\", \\\"satisfied\\\": \\\"😆\\\", \\\"sweat_smile\\\": \\\"😅\\\", \\\"rofl\\\": \\\"🤣\\\", \\\"joy\\\": \\\"😂\\\", \\\"slightly_smiling_face\\\": \\\"🙂\\\", \\\"upside_down_face\\\": \\\"🙃\\\", \\\"wink\\\": \\\"😉\\\", \\\"blush\\\": \\\"😊\\\", \\\"innocent\\\": \\\"😇\\\", \\\"smiling_face_with_three_hearts\\\": \\\"🥰\\\", \\\"heart_eyes\\\": \\\"😍\\\", \\\"star_struck\\\": \\\"🤩\\\", \\\"kissing_heart\\\": \\\"😘\\\", \\\"kissing\\\": \\\"😗\\\", \\\"relaxed\\\": \\\"☺️\\\", \\\"kissing_closed_eyes\\\": \\\"😚\\\", \\\"kissing_smiling_eyes\\\": \\\"😙\\\", \\\"smiling_face_with_tear\\\": \\\"🥲\\\", \\\"yum\\\": \\\"😋\\\", \\\"stuck_out_tongue\\\": \\\"😛\\\", \\\"stuck_out_tongue_winking_eye\\\": \\\"😜\\\", \\\"zany_face\\\": \\\"🤪\\\", \\\"stuck_out_tongue_closed_eyes\\\": \\\"😝\\\", \\\"money_mouth_face\\\": \\\"🤑\\\", \\\"hugs\\\": \\\"🤗\\\", \\\"hand_over_mouth\\\": \\\"🤭\\\", \\\"shushing_face\\\": \\\"🤫\\\", \\\"thinking\\\": \\\"🤔\\\", \\\"zipper_mouth_face\\\": \\\"🤐\\\", \\\"raised_eyebrow\\\": \\\"🤨\\\", \\\"neutral_face\\\": \\\"😐\\\", \\\"expressionless\\\": \\\"😑\\\", \\\"no_mouth\\\": \\\"😶\\\", \\\"smirk\\\": \\\"😏\\\", \\\"unamused\\\": \\\"😒\\\", \\\"roll_eyes\\\": \\\"🙄\\\", \\\"grimacing\\\": \\\"😬\\\", \\\"lying_face\\\": \\\"🤥\\\", \\\"relieved\\\": \\\"😌\\\", \\\"pensive\\\": \\\"😔\\\", \\\"sleepy\\\": \\\"😪\\\", \\\"drooling_face\\\": \\\"🤤\\\", \\\"sleeping\\\": \\\"😴\\\", \\\"mask\\\": \\\"😷\\\", \\\"face_with_thermometer\\\": \\\"🤒\\\", \\\"face_with_head_bandage\\\": \\\"🤕\\\", \\\"nauseated_face\\\": \\\"🤢\\\", \\\"vomiting_face\\\": \\\"🤮\\\", \\\"sneezing_face\\\": \\\"🤧\\\", \\\"hot_face\\\": \\\"🥵\\\", \\\"cold_face\\\": \\\"🥶\\\", \\\"woozy_face\\\": \\\"🥴\\\", \\\"dizzy_face\\\": \\\"😵\\\", \\\"exploding_head\\\": \\\"🤯\\\", \\\"cowboy_hat_face\\\": \\\"🤠\\\", \\\"partying_face\\\": \\\"🥳\\\", \\\"disguised_face\\\": \\\"🥸\\\", \\\"sunglasses\\\": \\\"😎\\\", \\\"nerd_face\\\": \\\"🤓\\\", \\\"monocle_face\\\": \\\"🧐\\\", \\\"confused\\\": \\\"😕\\\", \\\"worried\\\": \\\"😟\\\", \\\"slightly_frowning_face\\\": \\\"🙁\\\", \\\"frowning_face\\\": \\\"☹️\\\", \\\"open_mouth\\\": \\\"😮\\\", \\\"hushed\\\": \\\"😯\\\", \\\"astonished\\\": \\\"😲\\\", \\\"flushed\\\": \\\"😳\\\", \\\"pleading_face\\\": \\\"🥺\\\", \\\"frowning\\\": \\\"😦\\\", \\\"anguished\\\": \\\"😧\\\", \\\"fearful\\\": \\\"😨\\\", \\\"cold_sweat\\\": \\\"😰\\\", \\\"disappointed_relieved\\\": \\\"😥\\\", \\\"cry\\\": \\\"😢\\\", \\\"sob\\\": \\\"😭\\\", \\\"scream\\\": \\\"😱\\\", \\\"confounded\\\": \\\"😖\\\", \\\"persevere\\\": \\\"😣\\\", \\\"disappointed\\\": \\\"😞\\\", \\\"sweat\\\": \\\"😓\\\", \\\"weary\\\": \\\"😩\\\", \\\"tired_face\\\": \\\"😫\\\", \\\"yawning_face\\\": \\\"🥱\\\", \\\"triumph\\\": \\\"😤\\\", \\\"rage\\\": \\\"😡\\\", \\\"pout\\\": \\\"😡\\\", \\\"angry\\\": \\\"😠\\\", \\\"cursing_face\\\": \\\"🤬\\\", \\\"smiling_imp\\\": \\\"😈\\\", \\\"imp\\\": \\\"👿\\\", \\\"skull\\\": \\\"💀\\\", \\\"skull_and_crossbones\\\": \\\"☠️\\\", \\\"hankey\\\": \\\"💩\\\", \\\"poop\\\": \\\"💩\\\", \\\"shit\\\": \\\"💩\\\", \\\"clown_face\\\": \\\"🤡\\\", \\\"japanese_ogre\\\": \\\"👹\\\", \\\"japanese_goblin\\\": \\\"👺\\\", \\\"ghost\\\": \\\"👻\\\", \\\"alien\\\": \\\"👽\\\", \\\"space_invader\\\": \\\"👾\\\", \\\"robot\\\": \\\"🤖\\\", \\\"smiley_cat\\\": \\\"😺\\\", \\\"smile_cat\\\": \\\"😸\\\", \\\"joy_cat\\\": \\\"😹\\\", \\\"heart_eyes_cat\\\": \\\"😻\\\", \\\"smirk_cat\\\": \\\"😼\\\", \\\"kissing_cat\\\": \\\"😽\\\", \\\"scream_cat\\\": \\\"🙀\\\", \\\"crying_cat_face\\\": \\\"😿\\\", \\\"pouting_cat\\\": \\\"😾\\\", \\\"see_no_evil\\\": \\\"🙈\\\", \\\"hear_no_evil\\\": \\\"🙉\\\", \\\"speak_no_evil\\\": \\\"🙊\\\", \\\"kiss\\\": \\\"💋\\\", \\\"love_letter\\\": \\\"💌\\\", \\\"cupid\\\": \\\"💘\\\", \\\"gift_heart\\\": \\\"💝\\\", \\\"sparkling_heart\\\": \\\"💖\\\", \\\"heartpulse\\\": \\\"💗\\\", \\\"heartbeat\\\": \\\"💓\\\", \\\"revolving_hearts\\\": \\\"💞\\\", \\\"two_hearts\\\": \\\"💕\\\", \\\"heart_decoration\\\": \\\"💟\\\", \\\"heavy_heart_exclamation\\\": \\\"❣️\\\", \\\"broken_heart\\\": \\\"💔\\\", \\\"heart\\\": \\\"❤️\\\", \\\"orange_heart\\\": \\\"🧡\\\", \\\"yellow_heart\\\": \\\"💛\\\", \\\"green_heart\\\": \\\"💚\\\", \\\"blue_heart\\\": \\\"💙\\\", \\\"purple_heart\\\": \\\"💜\\\", \\\"brown_heart\\\": \\\"🤎\\\", \\\"black_heart\\\": \\\"🖤\\\", \\\"white_heart\\\": \\\"🤍\\\", \\\"anger\\\": \\\"💢\\\", \\\"boom\\\": \\\"💥\\\", \\\"collision\\\": \\\"💥\\\", \\\"dizzy\\\": \\\"💫\\\", \\\"sweat_drops\\\": \\\"💦\\\", \\\"dash\\\": \\\"💨\\\", \\\"hole\\\": \\\"🕳️\\\", \\\"bomb\\\": \\\"💣\\\", \\\"speech_balloon\\\": \\\"💬\\\", \\\"eye_speech_bubble\\\": \\\"👁️‍🗨️\\\", \\\"left_speech_bubble\\\": \\\"🗨️\\\", \\\"right_anger_bubble\\\": \\\"🗯️\\\", \\\"thought_balloon\\\": \\\"💭\\\", \\\"zzz\\\": \\\"💤\\\", \\\"wave\\\": \\\"👋\\\", \\\"raised_back_of_hand\\\": \\\"🤚\\\", \\\"raised_hand_with_fingers_splayed\\\": \\\"🖐️\\\", \\\"hand\\\": \\\"✋\\\", \\\"raised_hand\\\": \\\"✋\\\", \\\"vulcan_salute\\\": \\\"🖖\\\", \\\"ok_hand\\\": \\\"👌\\\", \\\"pinched_fingers\\\": \\\"🤌\\\", \\\"pinching_hand\\\": \\\"🤏\\\", \\\"v\\\": \\\"✌️\\\", \\\"crossed_fingers\\\": \\\"🤞\\\", \\\"love_you_gesture\\\": \\\"🤟\\\", \\\"metal\\\": \\\"🤘\\\", \\\"call_me_hand\\\": \\\"🤙\\\", \\\"point_left\\\": \\\"👈\\\", \\\"point_right\\\": \\\"👉\\\", \\\"point_up_2\\\": \\\"👆\\\", \\\"middle_finger\\\": \\\"🖕\\\", \\\"fu\\\": \\\"🖕\\\", \\\"point_down\\\": \\\"👇\\\", \\\"point_up\\\": \\\"☝️\\\", \\\"+1\\\": \\\"👍\\\", \\\"thumbsup\\\": \\\"👍\\\", \\\"-1\\\": \\\"👎\\\", \\\"thumbsdown\\\": \\\"👎\\\", \\\"fist_raised\\\": \\\"✊\\\", \\\"fist\\\": \\\"✊\\\", \\\"fist_oncoming\\\": \\\"👊\\\", \\\"facepunch\\\": \\\"👊\\\", \\\"punch\\\": \\\"👊\\\", \\\"fist_left\\\": \\\"🤛\\\", \\\"fist_right\\\": \\\"🤜\\\", \\\"clap\\\": \\\"👏\\\", \\\"raised_hands\\\": \\\"🙌\\\", \\\"open_hands\\\": \\\"👐\\\", \\\"palms_up_together\\\": \\\"🤲\\\", \\\"handshake\\\": \\\"🤝\\\", \\\"pray\\\": \\\"🙏\\\", \\\"writing_hand\\\": \\\"✍️\\\", \\\"nail_care\\\": \\\"💅\\\", \\\"selfie\\\": \\\"🤳\\\", \\\"muscle\\\": \\\"💪\\\", \\\"mechanical_arm\\\": \\\"🦾\\\", \\\"mechanical_leg\\\": \\\"🦿\\\", \\\"leg\\\": \\\"🦵\\\", \\\"foot\\\": \\\"🦶\\\", \\\"ear\\\": \\\"👂\\\", \\\"ear_with_hearing_aid\\\": \\\"🦻\\\", \\\"nose\\\": \\\"👃\\\", \\\"brain\\\": \\\"🧠\\\", \\\"anatomical_heart\\\": \\\"🫀\\\", \\\"lungs\\\": \\\"🫁\\\", \\\"tooth\\\": \\\"🦷\\\", \\\"bone\\\": \\\"🦴\\\", \\\"eyes\\\": \\\"👀\\\", \\\"eye\\\": \\\"👁️\\\", \\\"tongue\\\": \\\"👅\\\", \\\"lips\\\": \\\"👄\\\", \\\"baby\\\": \\\"👶\\\", \\\"child\\\": \\\"🧒\\\", \\\"boy\\\": \\\"👦\\\", \\\"girl\\\": \\\"👧\\\", \\\"adult\\\": \\\"🧑\\\", \\\"blond_haired_person\\\": \\\"👱\\\", \\\"man\\\": \\\"👨\\\", \\\"bearded_person\\\": \\\"🧔\\\", \\\"red_haired_man\\\": \\\"👨‍🦰\\\", \\\"curly_haired_man\\\": \\\"👨‍🦱\\\", \\\"white_haired_man\\\": \\\"👨‍🦳\\\", \\\"bald_man\\\": \\\"👨‍🦲\\\", \\\"woman\\\": \\\"👩\\\", \\\"red_haired_woman\\\": \\\"👩‍🦰\\\", \\\"person_red_hair\\\": \\\"🧑‍🦰\\\", \\\"curly_haired_woman\\\": \\\"👩‍🦱\\\", \\\"person_curly_hair\\\": \\\"🧑‍🦱\\\", \\\"white_haired_woman\\\": \\\"👩‍🦳\\\", \\\"person_white_hair\\\": \\\"🧑‍🦳\\\", \\\"bald_woman\\\": \\\"👩‍🦲\\\", \\\"person_bald\\\": \\\"🧑‍🦲\\\", \\\"blond_haired_woman\\\": \\\"👱‍♀️\\\", \\\"blonde_woman\\\": \\\"👱‍♀️\\\", \\\"blond_haired_man\\\": \\\"👱‍♂️\\\", \\\"older_adult\\\": \\\"🧓\\\", \\\"older_man\\\": \\\"👴\\\", \\\"older_woman\\\": \\\"👵\\\", \\\"frowning_person\\\": \\\"🙍\\\", \\\"frowning_man\\\": \\\"🙍‍♂️\\\", \\\"frowning_woman\\\": \\\"🙍‍♀️\\\", \\\"pouting_face\\\": \\\"🙎\\\", \\\"pouting_man\\\": \\\"🙎‍♂️\\\", \\\"pouting_woman\\\": \\\"🙎‍♀️\\\", \\\"no_good\\\": \\\"🙅\\\", \\\"no_good_man\\\": \\\"🙅‍♂️\\\", \\\"ng_man\\\": \\\"🙅‍♂️\\\", \\\"no_good_woman\\\": \\\"🙅‍♀️\\\", \\\"ng_woman\\\": \\\"🙅‍♀️\\\", \\\"ok_person\\\": \\\"🙆\\\", \\\"ok_man\\\": \\\"🙆‍♂️\\\", \\\"ok_woman\\\": \\\"🙆‍♀️\\\", \\\"tipping_hand_person\\\": \\\"💁\\\", \\\"information_desk_person\\\": \\\"💁\\\", \\\"tipping_hand_man\\\": \\\"💁‍♂️\\\", \\\"sassy_man\\\": \\\"💁‍♂️\\\", \\\"tipping_hand_woman\\\": \\\"💁‍♀️\\\", \\\"sassy_woman\\\": \\\"💁‍♀️\\\", \\\"raising_hand\\\": \\\"🙋\\\", \\\"raising_hand_man\\\": \\\"🙋‍♂️\\\", \\\"raising_hand_woman\\\": \\\"🙋‍♀️\\\", \\\"deaf_person\\\": \\\"🧏\\\", \\\"deaf_man\\\": \\\"🧏‍♂️\\\", \\\"deaf_woman\\\": \\\"🧏‍♀️\\\", \\\"bow\\\": \\\"🙇\\\", \\\"bowing_man\\\": \\\"🙇‍♂️\\\", \\\"bowing_woman\\\": \\\"🙇‍♀️\\\", \\\"facepalm\\\": \\\"🤦\\\", \\\"man_facepalming\\\": \\\"🤦‍♂️\\\", \\\"woman_facepalming\\\": \\\"🤦‍♀️\\\", \\\"shrug\\\": \\\"🤷\\\", \\\"man_shrugging\\\": \\\"🤷‍♂️\\\", \\\"woman_shrugging\\\": \\\"🤷‍♀️\\\", \\\"health_worker\\\": \\\"🧑‍⚕️\\\", \\\"man_health_worker\\\": \\\"👨‍⚕️\\\", \\\"woman_health_worker\\\": \\\"👩‍⚕️\\\", \\\"student\\\": \\\"🧑‍🎓\\\", \\\"man_student\\\": \\\"👨‍🎓\\\", \\\"woman_student\\\": \\\"👩‍🎓\\\", \\\"teacher\\\": \\\"🧑‍🏫\\\", \\\"man_teacher\\\": \\\"👨‍🏫\\\", \\\"woman_teacher\\\": \\\"👩‍🏫\\\", \\\"judge\\\": \\\"🧑‍⚖️\\\", \\\"man_judge\\\": \\\"👨‍⚖️\\\", \\\"woman_judge\\\": \\\"👩‍⚖️\\\", \\\"farmer\\\": \\\"🧑‍🌾\\\", \\\"man_farmer\\\": \\\"👨‍🌾\\\", \\\"woman_farmer\\\": \\\"👩‍🌾\\\", \\\"cook\\\": \\\"🧑‍🍳\\\", \\\"man_cook\\\": \\\"👨‍🍳\\\", \\\"woman_cook\\\": \\\"👩‍🍳\\\", \\\"mechanic\\\": \\\"🧑‍🔧\\\", \\\"man_mechanic\\\": \\\"👨‍🔧\\\", \\\"woman_mechanic\\\": \\\"👩‍🔧\\\", \\\"factory_worker\\\": \\\"🧑‍🏭\\\", \\\"man_factory_worker\\\": \\\"👨‍🏭\\\", \\\"woman_factory_worker\\\": \\\"👩‍🏭\\\", \\\"office_worker\\\": \\\"🧑‍💼\\\", \\\"man_office_worker\\\": \\\"👨‍💼\\\", \\\"woman_office_worker\\\": \\\"👩‍💼\\\", \\\"scientist\\\": \\\"🧑‍🔬\\\", \\\"man_scientist\\\": \\\"👨‍🔬\\\", \\\"woman_scientist\\\": \\\"👩‍🔬\\\", \\\"technologist\\\": \\\"🧑‍💻\\\", \\\"man_technologist\\\": \\\"👨‍💻\\\", \\\"woman_technologist\\\": \\\"👩‍💻\\\", \\\"singer\\\": \\\"🧑‍🎤\\\", \\\"man_singer\\\": \\\"👨‍🎤\\\", \\\"woman_singer\\\": \\\"👩‍🎤\\\", \\\"artist\\\": \\\"🧑‍🎨\\\", \\\"man_artist\\\": \\\"👨‍🎨\\\", \\\"woman_artist\\\": \\\"👩‍🎨\\\", \\\"pilot\\\": \\\"🧑‍✈️\\\", \\\"man_pilot\\\": \\\"👨‍✈️\\\", \\\"woman_pilot\\\": \\\"👩‍✈️\\\", \\\"astronaut\\\": \\\"🧑‍🚀\\\", \\\"man_astronaut\\\": \\\"👨‍🚀\\\", \\\"woman_astronaut\\\": \\\"👩‍🚀\\\", \\\"firefighter\\\": \\\"🧑‍🚒\\\", \\\"man_firefighter\\\": \\\"👨‍🚒\\\", \\\"woman_firefighter\\\": \\\"👩‍🚒\\\", \\\"police_officer\\\": \\\"👮\\\", \\\"cop\\\": \\\"👮\\\", \\\"policeman\\\": \\\"👮‍♂️\\\", \\\"policewoman\\\": \\\"👮‍♀️\\\", \\\"detective\\\": \\\"🕵️\\\", \\\"male_detective\\\": \\\"🕵️‍♂️\\\", \\\"female_detective\\\": \\\"🕵️‍♀️\\\", \\\"guard\\\": \\\"💂\\\", \\\"guardsman\\\": \\\"💂‍♂️\\\", \\\"guardswoman\\\": \\\"💂‍♀️\\\", \\\"ninja\\\": \\\"🥷\\\", \\\"construction_worker\\\": \\\"👷\\\", \\\"construction_worker_man\\\": \\\"👷‍♂️\\\", \\\"construction_worker_woman\\\": \\\"👷‍♀️\\\", \\\"prince\\\": \\\"🤴\\\", \\\"princess\\\": \\\"👸\\\", \\\"person_with_turban\\\": \\\"👳\\\", \\\"man_with_turban\\\": \\\"👳‍♂️\\\", \\\"woman_with_turban\\\": \\\"👳‍♀️\\\", \\\"man_with_gua_pi_mao\\\": \\\"👲\\\", \\\"woman_with_headscarf\\\": \\\"🧕\\\", \\\"person_in_tuxedo\\\": \\\"🤵\\\", \\\"man_in_tuxedo\\\": \\\"🤵‍♂️\\\", \\\"woman_in_tuxedo\\\": \\\"🤵‍♀️\\\", \\\"person_with_veil\\\": \\\"👰\\\", \\\"man_with_veil\\\": \\\"👰‍♂️\\\", \\\"woman_with_veil\\\": \\\"👰‍♀️\\\", \\\"bride_with_veil\\\": \\\"👰‍♀️\\\", \\\"pregnant_woman\\\": \\\"🤰\\\", \\\"breast_feeding\\\": \\\"🤱\\\", \\\"woman_feeding_baby\\\": \\\"👩‍🍼\\\", \\\"man_feeding_baby\\\": \\\"👨‍🍼\\\", \\\"person_feeding_baby\\\": \\\"🧑‍🍼\\\", \\\"angel\\\": \\\"👼\\\", \\\"santa\\\": \\\"🎅\\\", \\\"mrs_claus\\\": \\\"🤶\\\", \\\"mx_claus\\\": \\\"🧑‍🎄\\\", \\\"superhero\\\": \\\"🦸\\\", \\\"superhero_man\\\": \\\"🦸‍♂️\\\", \\\"superhero_woman\\\": \\\"🦸‍♀️\\\", \\\"supervillain\\\": \\\"🦹\\\", \\\"supervillain_man\\\": \\\"🦹‍♂️\\\", \\\"supervillain_woman\\\": \\\"🦹‍♀️\\\", \\\"mage\\\": \\\"🧙\\\", \\\"mage_man\\\": \\\"🧙‍♂️\\\", \\\"mage_woman\\\": \\\"🧙‍♀️\\\", \\\"fairy\\\": \\\"🧚\\\", \\\"fairy_man\\\": \\\"🧚‍♂️\\\", \\\"fairy_woman\\\": \\\"🧚‍♀️\\\", \\\"vampire\\\": \\\"🧛\\\", \\\"vampire_man\\\": \\\"🧛‍♂️\\\", \\\"vampire_woman\\\": \\\"🧛‍♀️\\\", \\\"merperson\\\": \\\"🧜\\\", \\\"merman\\\": \\\"🧜‍♂️\\\", \\\"mermaid\\\": \\\"🧜‍♀️\\\", \\\"elf\\\": \\\"🧝\\\", \\\"elf_man\\\": \\\"🧝‍♂️\\\", \\\"elf_woman\\\": \\\"🧝‍♀️\\\", \\\"genie\\\": \\\"🧞\\\", \\\"genie_man\\\": \\\"🧞‍♂️\\\", \\\"genie_woman\\\": \\\"🧞‍♀️\\\", \\\"zombie\\\": \\\"🧟\\\", \\\"zombie_man\\\": \\\"🧟‍♂️\\\", \\\"zombie_woman\\\": \\\"🧟‍♀️\\\", \\\"massage\\\": \\\"💆\\\", \\\"massage_man\\\": \\\"💆‍♂️\\\", \\\"massage_woman\\\": \\\"💆‍♀️\\\", \\\"haircut\\\": \\\"💇\\\", \\\"haircut_man\\\": \\\"💇‍♂️\\\", \\\"haircut_woman\\\": \\\"💇‍♀️\\\", \\\"walking\\\": \\\"🚶\\\", \\\"walking_man\\\": \\\"🚶‍♂️\\\", \\\"walking_woman\\\": \\\"🚶‍♀️\\\", \\\"standing_person\\\": \\\"🧍\\\", \\\"standing_man\\\": \\\"🧍‍♂️\\\", \\\"standing_woman\\\": \\\"🧍‍♀️\\\", \\\"kneeling_person\\\": \\\"🧎\\\", \\\"kneeling_man\\\": \\\"🧎‍♂️\\\", \\\"kneeling_woman\\\": \\\"🧎‍♀️\\\", \\\"person_with_probing_cane\\\": \\\"🧑‍🦯\\\", \\\"man_with_probing_cane\\\": \\\"👨‍🦯\\\", \\\"woman_with_probing_cane\\\": \\\"👩‍🦯\\\", \\\"person_in_motorized_wheelchair\\\": \\\"🧑‍🦼\\\", \\\"man_in_motorized_wheelchair\\\": \\\"👨‍🦼\\\", \\\"woman_in_motorized_wheelchair\\\": \\\"👩‍🦼\\\", \\\"person_in_manual_wheelchair\\\": \\\"🧑‍🦽\\\", \\\"man_in_manual_wheelchair\\\": \\\"👨‍🦽\\\", \\\"woman_in_manual_wheelchair\\\": \\\"👩‍🦽\\\", \\\"runner\\\": \\\"🏃\\\", \\\"running\\\": \\\"🏃\\\", \\\"running_man\\\": \\\"🏃‍♂️\\\", \\\"running_woman\\\": \\\"🏃‍♀️\\\", \\\"woman_dancing\\\": \\\"💃\\\", \\\"dancer\\\": \\\"💃\\\", \\\"man_dancing\\\": \\\"🕺\\\", \\\"business_suit_levitating\\\": \\\"🕴️\\\", \\\"dancers\\\": \\\"👯\\\", \\\"dancing_men\\\": \\\"👯‍♂️\\\", \\\"dancing_women\\\": \\\"👯‍♀️\\\", \\\"sauna_person\\\": \\\"🧖\\\", \\\"sauna_man\\\": \\\"🧖‍♂️\\\", \\\"sauna_woman\\\": \\\"🧖‍♀️\\\", \\\"climbing\\\": \\\"🧗\\\", \\\"climbing_man\\\": \\\"🧗‍♂️\\\", \\\"climbing_woman\\\": \\\"🧗‍♀️\\\", \\\"person_fencing\\\": \\\"🤺\\\", \\\"horse_racing\\\": \\\"🏇\\\", \\\"skier\\\": \\\"⛷️\\\", \\\"snowboarder\\\": \\\"🏂\\\", \\\"golfing\\\": \\\"🏌️\\\", \\\"golfing_man\\\": \\\"🏌️‍♂️\\\", \\\"golfing_woman\\\": \\\"🏌️‍♀️\\\", \\\"surfer\\\": \\\"🏄\\\", \\\"surfing_man\\\": \\\"🏄‍♂️\\\", \\\"surfing_woman\\\": \\\"🏄‍♀️\\\", \\\"rowboat\\\": \\\"🚣\\\", \\\"rowing_man\\\": \\\"🚣‍♂️\\\", \\\"rowing_woman\\\": \\\"🚣‍♀️\\\", \\\"swimmer\\\": \\\"🏊\\\", \\\"swimming_man\\\": \\\"🏊‍♂️\\\", \\\"swimming_woman\\\": \\\"🏊‍♀️\\\", \\\"bouncing_ball_person\\\": \\\"⛹️\\\", \\\"bouncing_ball_man\\\": \\\"⛹️‍♂️\\\", \\\"basketball_man\\\": \\\"⛹️‍♂️\\\", \\\"bouncing_ball_woman\\\": \\\"⛹️‍♀️\\\", \\\"basketball_woman\\\": \\\"⛹️‍♀️\\\", \\\"weight_lifting\\\": \\\"🏋️\\\", \\\"weight_lifting_man\\\": \\\"🏋️‍♂️\\\", \\\"weight_lifting_woman\\\": \\\"🏋️‍♀️\\\", \\\"bicyclist\\\": \\\"🚴\\\", \\\"biking_man\\\": \\\"🚴‍♂️\\\", \\\"biking_woman\\\": \\\"🚴‍♀️\\\", \\\"mountain_bicyclist\\\": \\\"🚵\\\", \\\"mountain_biking_man\\\": \\\"🚵‍♂️\\\", \\\"mountain_biking_woman\\\": \\\"🚵‍♀️\\\", \\\"cartwheeling\\\": \\\"🤸\\\", \\\"man_cartwheeling\\\": \\\"🤸‍♂️\\\", \\\"woman_cartwheeling\\\": \\\"🤸‍♀️\\\", \\\"wrestling\\\": \\\"🤼\\\", \\\"men_wrestling\\\": \\\"🤼‍♂️\\\", \\\"women_wrestling\\\": \\\"🤼‍♀️\\\", \\\"water_polo\\\": \\\"🤽\\\", \\\"man_playing_water_polo\\\": \\\"🤽‍♂️\\\", \\\"woman_playing_water_polo\\\": \\\"🤽‍♀️\\\", \\\"handball_person\\\": \\\"🤾\\\", \\\"man_playing_handball\\\": \\\"🤾‍♂️\\\", \\\"woman_playing_handball\\\": \\\"🤾‍♀️\\\", \\\"juggling_person\\\": \\\"🤹\\\", \\\"man_juggling\\\": \\\"🤹‍♂️\\\", \\\"woman_juggling\\\": \\\"🤹‍♀️\\\", \\\"lotus_position\\\": \\\"🧘\\\", \\\"lotus_position_man\\\": \\\"🧘‍♂️\\\", \\\"lotus_position_woman\\\": \\\"🧘‍♀️\\\", \\\"bath\\\": \\\"🛀\\\", \\\"sleeping_bed\\\": \\\"🛌\\\", \\\"people_holding_hands\\\": \\\"🧑‍🤝‍🧑\\\", \\\"two_women_holding_hands\\\": \\\"👭\\\", \\\"couple\\\": \\\"👫\\\", \\\"two_men_holding_hands\\\": \\\"👬\\\", \\\"couplekiss\\\": \\\"💏\\\", \\\"couplekiss_man_woman\\\": \\\"👩‍❤️‍💋‍👨\\\", \\\"couplekiss_man_man\\\": \\\"👨‍❤️‍💋‍👨\\\", \\\"couplekiss_woman_woman\\\": \\\"👩‍❤️‍💋‍👩\\\", \\\"couple_with_heart\\\": \\\"💑\\\", \\\"couple_with_heart_woman_man\\\": \\\"👩‍❤️‍👨\\\", \\\"couple_with_heart_man_man\\\": \\\"👨‍❤️‍👨\\\", \\\"couple_with_heart_woman_woman\\\": \\\"👩‍❤️‍👩\\\", \\\"family\\\": \\\"👪\\\", \\\"family_man_woman_boy\\\": \\\"👨‍👩‍👦\\\", \\\"family_man_woman_girl\\\": \\\"👨‍👩‍👧\\\", \\\"family_man_woman_girl_boy\\\": \\\"👨‍👩‍👧‍👦\\\", \\\"family_man_woman_boy_boy\\\": \\\"👨‍👩‍👦‍👦\\\", \\\"family_man_woman_girl_girl\\\": \\\"👨‍👩‍👧‍👧\\\", \\\"family_man_man_boy\\\": \\\"👨‍👨‍👦\\\", \\\"family_man_man_girl\\\": \\\"👨‍👨‍👧\\\", \\\"family_man_man_girl_boy\\\": \\\"👨‍👨‍👧‍👦\\\", \\\"family_man_man_boy_boy\\\": \\\"👨‍👨‍👦‍👦\\\", \\\"family_man_man_girl_girl\\\": \\\"👨‍👨‍👧‍👧\\\", \\\"family_woman_woman_boy\\\": \\\"👩‍👩‍👦\\\", \\\"family_woman_woman_girl\\\": \\\"👩‍👩‍👧\\\", \\\"family_woman_woman_girl_boy\\\": \\\"👩‍👩‍👧‍👦\\\", \\\"family_woman_woman_boy_boy\\\": \\\"👩‍👩‍👦‍👦\\\", \\\"family_woman_woman_girl_girl\\\": \\\"👩‍👩‍👧‍👧\\\", \\\"family_man_boy\\\": \\\"👨‍👦\\\", \\\"family_man_boy_boy\\\": \\\"👨‍👦‍👦\\\", \\\"family_man_girl\\\": \\\"👨‍👧\\\", \\\"family_man_girl_boy\\\": \\\"👨‍👧‍👦\\\", \\\"family_man_girl_girl\\\": \\\"👨‍👧‍👧\\\", \\\"family_woman_boy\\\": \\\"👩‍👦\\\", \\\"family_woman_boy_boy\\\": \\\"👩‍👦‍👦\\\", \\\"family_woman_girl\\\": \\\"👩‍👧\\\", \\\"family_woman_girl_boy\\\": \\\"👩‍👧‍👦\\\", \\\"family_woman_girl_girl\\\": \\\"👩‍👧‍👧\\\", \\\"speaking_head\\\": \\\"🗣️\\\", \\\"bust_in_silhouette\\\": \\\"👤\\\", \\\"busts_in_silhouette\\\": \\\"👥\\\", \\\"people_hugging\\\": \\\"🫂\\\", \\\"footprints\\\": \\\"👣\\\", \\\"monkey_face\\\": \\\"🐵\\\", \\\"monkey\\\": \\\"🐒\\\", \\\"gorilla\\\": \\\"🦍\\\", \\\"orangutan\\\": \\\"🦧\\\", \\\"dog\\\": \\\"🐶\\\", \\\"dog2\\\": \\\"🐕\\\", \\\"guide_dog\\\": \\\"🦮\\\", \\\"service_dog\\\": \\\"🐕‍🦺\\\", \\\"poodle\\\": \\\"🐩\\\", \\\"wolf\\\": \\\"🐺\\\", \\\"fox_face\\\": \\\"🦊\\\", \\\"raccoon\\\": \\\"🦝\\\", \\\"cat\\\": \\\"🐱\\\", \\\"cat2\\\": \\\"🐈\\\", \\\"black_cat\\\": \\\"🐈‍⬛\\\", \\\"lion\\\": \\\"🦁\\\", \\\"tiger\\\": \\\"🐯\\\", \\\"tiger2\\\": \\\"🐅\\\", \\\"leopard\\\": \\\"🐆\\\", \\\"horse\\\": \\\"🐴\\\", \\\"racehorse\\\": \\\"🐎\\\", \\\"unicorn\\\": \\\"🦄\\\", \\\"zebra\\\": \\\"🦓\\\", \\\"deer\\\": \\\"🦌\\\", \\\"bison\\\": \\\"🦬\\\", \\\"cow\\\": \\\"🐮\\\", \\\"ox\\\": \\\"🐂\\\", \\\"water_buffalo\\\": \\\"🐃\\\", \\\"cow2\\\": \\\"🐄\\\", \\\"pig\\\": \\\"🐷\\\", \\\"pig2\\\": \\\"🐖\\\", \\\"boar\\\": \\\"🐗\\\", \\\"pig_nose\\\": \\\"🐽\\\", \\\"ram\\\": \\\"🐏\\\", \\\"sheep\\\": \\\"🐑\\\", \\\"goat\\\": \\\"🐐\\\", \\\"dromedary_camel\\\": \\\"🐪\\\", \\\"camel\\\": \\\"🐫\\\", \\\"llama\\\": \\\"🦙\\\", \\\"giraffe\\\": \\\"🦒\\\", \\\"elephant\\\": \\\"🐘\\\", \\\"mammoth\\\": \\\"🦣\\\", \\\"rhinoceros\\\": \\\"🦏\\\", \\\"hippopotamus\\\": \\\"🦛\\\", \\\"mouse\\\": \\\"🐭\\\", \\\"mouse2\\\": \\\"🐁\\\", \\\"rat\\\": \\\"🐀\\\", \\\"hamster\\\": \\\"🐹\\\", \\\"rabbit\\\": \\\"🐰\\\", \\\"rabbit2\\\": \\\"🐇\\\", \\\"chipmunk\\\": \\\"🐿️\\\", \\\"beaver\\\": \\\"🦫\\\", \\\"hedgehog\\\": \\\"🦔\\\", \\\"bat\\\": \\\"🦇\\\", \\\"bear\\\": \\\"🐻\\\", \\\"polar_bear\\\": \\\"🐻‍❄️\\\", \\\"koala\\\": \\\"🐨\\\", \\\"panda_face\\\": \\\"🐼\\\", \\\"sloth\\\": \\\"🦥\\\", \\\"otter\\\": \\\"🦦\\\", \\\"skunk\\\": \\\"🦨\\\", \\\"kangaroo\\\": \\\"🦘\\\", \\\"badger\\\": \\\"🦡\\\", \\\"feet\\\": \\\"🐾\\\", \\\"paw_prints\\\": \\\"🐾\\\", \\\"turkey\\\": \\\"🦃\\\", \\\"chicken\\\": \\\"🐔\\\", \\\"rooster\\\": \\\"🐓\\\", \\\"hatching_chick\\\": \\\"🐣\\\", \\\"baby_chick\\\": \\\"🐤\\\", \\\"hatched_chick\\\": \\\"🐥\\\", \\\"bird\\\": \\\"🐦\\\", \\\"penguin\\\": \\\"🐧\\\", \\\"dove\\\": \\\"🕊️\\\", \\\"eagle\\\": \\\"🦅\\\", \\\"duck\\\": \\\"🦆\\\", \\\"swan\\\": \\\"🦢\\\", \\\"owl\\\": \\\"🦉\\\", \\\"dodo\\\": \\\"🦤\\\", \\\"feather\\\": \\\"🪶\\\", \\\"flamingo\\\": \\\"🦩\\\", \\\"peacock\\\": \\\"🦚\\\", \\\"parrot\\\": \\\"🦜\\\", \\\"frog\\\": \\\"🐸\\\", \\\"crocodile\\\": \\\"🐊\\\", \\\"turtle\\\": \\\"🐢\\\", \\\"lizard\\\": \\\"🦎\\\", \\\"snake\\\": \\\"🐍\\\", \\\"dragon_face\\\": \\\"🐲\\\", \\\"dragon\\\": \\\"🐉\\\", \\\"sauropod\\\": \\\"🦕\\\", \\\"t-rex\\\": \\\"🦖\\\", \\\"whale\\\": \\\"🐳\\\", \\\"whale2\\\": \\\"🐋\\\", \\\"dolphin\\\": \\\"🐬\\\", \\\"flipper\\\": \\\"🐬\\\", \\\"seal\\\": \\\"🦭\\\", \\\"fish\\\": \\\"🐟\\\", \\\"tropical_fish\\\": \\\"🐠\\\", \\\"blowfish\\\": \\\"🐡\\\", \\\"shark\\\": \\\"🦈\\\", \\\"octopus\\\": \\\"🐙\\\", \\\"shell\\\": \\\"🐚\\\", \\\"snail\\\": \\\"🐌\\\", \\\"butterfly\\\": \\\"🦋\\\", \\\"bug\\\": \\\"🐛\\\", \\\"ant\\\": \\\"🐜\\\", \\\"bee\\\": \\\"🐝\\\", \\\"honeybee\\\": \\\"🐝\\\", \\\"beetle\\\": \\\"🪲\\\", \\\"lady_beetle\\\": \\\"🐞\\\", \\\"cricket\\\": \\\"🦗\\\", \\\"cockroach\\\": \\\"🪳\\\", \\\"spider\\\": \\\"🕷️\\\", \\\"spider_web\\\": \\\"🕸️\\\", \\\"scorpion\\\": \\\"🦂\\\", \\\"mosquito\\\": \\\"🦟\\\", \\\"fly\\\": \\\"🪰\\\", \\\"worm\\\": \\\"🪱\\\", \\\"microbe\\\": \\\"🦠\\\", \\\"bouquet\\\": \\\"💐\\\", \\\"cherry_blossom\\\": \\\"🌸\\\", \\\"white_flower\\\": \\\"💮\\\", \\\"rosette\\\": \\\"🏵️\\\", \\\"rose\\\": \\\"🌹\\\", \\\"wilted_flower\\\": \\\"🥀\\\", \\\"hibiscus\\\": \\\"🌺\\\", \\\"sunflower\\\": \\\"🌻\\\", \\\"blossom\\\": \\\"🌼\\\", \\\"tulip\\\": \\\"🌷\\\", \\\"seedling\\\": \\\"🌱\\\", \\\"potted_plant\\\": \\\"🪴\\\", \\\"evergreen_tree\\\": \\\"🌲\\\", \\\"deciduous_tree\\\": \\\"🌳\\\", \\\"palm_tree\\\": \\\"🌴\\\", \\\"cactus\\\": \\\"🌵\\\", \\\"ear_of_rice\\\": \\\"🌾\\\", \\\"herb\\\": \\\"🌿\\\", \\\"shamrock\\\": \\\"☘️\\\", \\\"four_leaf_clover\\\": \\\"🍀\\\", \\\"maple_leaf\\\": \\\"🍁\\\", \\\"fallen_leaf\\\": \\\"🍂\\\", \\\"leaves\\\": \\\"🍃\\\", \\\"grapes\\\": \\\"🍇\\\", \\\"melon\\\": \\\"🍈\\\", \\\"watermelon\\\": \\\"🍉\\\", \\\"tangerine\\\": \\\"🍊\\\", \\\"orange\\\": \\\"🍊\\\", \\\"mandarin\\\": \\\"🍊\\\", \\\"lemon\\\": \\\"🍋\\\", \\\"banana\\\": \\\"🍌\\\", \\\"pineapple\\\": \\\"🍍\\\", \\\"mango\\\": \\\"🥭\\\", \\\"apple\\\": \\\"🍎\\\", \\\"green_apple\\\": \\\"🍏\\\", \\\"pear\\\": \\\"🍐\\\", \\\"peach\\\": \\\"🍑\\\", \\\"cherries\\\": \\\"🍒\\\", \\\"strawberry\\\": \\\"🍓\\\", \\\"blueberries\\\": \\\"🫐\\\", \\\"kiwi_fruit\\\": \\\"🥝\\\", \\\"tomato\\\": \\\"🍅\\\", \\\"olive\\\": \\\"🫒\\\", \\\"coconut\\\": \\\"🥥\\\", \\\"avocado\\\": \\\"🥑\\\", \\\"eggplant\\\": \\\"🍆\\\", \\\"potato\\\": \\\"🥔\\\", \\\"carrot\\\": \\\"🥕\\\", \\\"corn\\\": \\\"🌽\\\", \\\"hot_pepper\\\": \\\"🌶️\\\", \\\"bell_pepper\\\": \\\"🫑\\\", \\\"cucumber\\\": \\\"🥒\\\", \\\"leafy_green\\\": \\\"🥬\\\", \\\"broccoli\\\": \\\"🥦\\\", \\\"garlic\\\": \\\"🧄\\\", \\\"onion\\\": \\\"🧅\\\", \\\"mushroom\\\": \\\"🍄\\\", \\\"peanuts\\\": \\\"🥜\\\", \\\"chestnut\\\": \\\"🌰\\\", \\\"bread\\\": \\\"🍞\\\", \\\"croissant\\\": \\\"🥐\\\", \\\"baguette_bread\\\": \\\"🥖\\\", \\\"flatbread\\\": \\\"🫓\\\", \\\"pretzel\\\": \\\"🥨\\\", \\\"bagel\\\": \\\"🥯\\\", \\\"pancakes\\\": \\\"🥞\\\", \\\"waffle\\\": \\\"🧇\\\", \\\"cheese\\\": \\\"🧀\\\", \\\"meat_on_bone\\\": \\\"🍖\\\", \\\"poultry_leg\\\": \\\"🍗\\\", \\\"cut_of_meat\\\": \\\"🥩\\\", \\\"bacon\\\": \\\"🥓\\\", \\\"hamburger\\\": \\\"🍔\\\", \\\"fries\\\": \\\"🍟\\\", \\\"pizza\\\": \\\"🍕\\\", \\\"hotdog\\\": \\\"🌭\\\", \\\"sandwich\\\": \\\"🥪\\\", \\\"taco\\\": \\\"🌮\\\", \\\"burrito\\\": \\\"🌯\\\", \\\"tamale\\\": \\\"🫔\\\", \\\"stuffed_flatbread\\\": \\\"🥙\\\", \\\"falafel\\\": \\\"🧆\\\", \\\"egg\\\": \\\"🥚\\\", \\\"fried_egg\\\": \\\"🍳\\\", \\\"shallow_pan_of_food\\\": \\\"🥘\\\", \\\"stew\\\": \\\"🍲\\\", \\\"fondue\\\": \\\"🫕\\\", \\\"bowl_with_spoon\\\": \\\"🥣\\\", \\\"green_salad\\\": \\\"🥗\\\", \\\"popcorn\\\": \\\"🍿\\\", \\\"butter\\\": \\\"🧈\\\", \\\"salt\\\": \\\"🧂\\\", \\\"canned_food\\\": \\\"🥫\\\", \\\"bento\\\": \\\"🍱\\\", \\\"rice_cracker\\\": \\\"🍘\\\", \\\"rice_ball\\\": \\\"🍙\\\", \\\"rice\\\": \\\"🍚\\\", \\\"curry\\\": \\\"🍛\\\", \\\"ramen\\\": \\\"🍜\\\", \\\"spaghetti\\\": \\\"🍝\\\", \\\"sweet_potato\\\": \\\"🍠\\\", \\\"oden\\\": \\\"🍢\\\", \\\"sushi\\\": \\\"🍣\\\", \\\"fried_shrimp\\\": \\\"🍤\\\", \\\"fish_cake\\\": \\\"🍥\\\", \\\"moon_cake\\\": \\\"🥮\\\", \\\"dango\\\": \\\"🍡\\\", \\\"dumpling\\\": \\\"🥟\\\", \\\"fortune_cookie\\\": \\\"🥠\\\", \\\"takeout_box\\\": \\\"🥡\\\", \\\"crab\\\": \\\"🦀\\\", \\\"lobster\\\": \\\"🦞\\\", \\\"shrimp\\\": \\\"🦐\\\", \\\"squid\\\": \\\"🦑\\\", \\\"oyster\\\": \\\"🦪\\\", \\\"icecream\\\": \\\"🍦\\\", \\\"shaved_ice\\\": \\\"🍧\\\", \\\"ice_cream\\\": \\\"🍨\\\", \\\"doughnut\\\": \\\"🍩\\\", \\\"cookie\\\": \\\"🍪\\\", \\\"birthday\\\": \\\"🎂\\\", \\\"cake\\\": \\\"🍰\\\", \\\"cupcake\\\": \\\"🧁\\\", \\\"pie\\\": \\\"🥧\\\", \\\"chocolate_bar\\\": \\\"🍫\\\", \\\"candy\\\": \\\"🍬\\\", \\\"lollipop\\\": \\\"🍭\\\", \\\"custard\\\": \\\"🍮\\\", \\\"honey_pot\\\": \\\"🍯\\\", \\\"baby_bottle\\\": \\\"🍼\\\", \\\"milk_glass\\\": \\\"🥛\\\", \\\"coffee\\\": \\\"☕\\\", \\\"teapot\\\": \\\"🫖\\\", \\\"tea\\\": \\\"🍵\\\", \\\"sake\\\": \\\"🍶\\\", \\\"champagne\\\": \\\"🍾\\\", \\\"wine_glass\\\": \\\"🍷\\\", \\\"cocktail\\\": \\\"🍸\\\", \\\"tropical_drink\\\": \\\"🍹\\\", \\\"beer\\\": \\\"🍺\\\", \\\"beers\\\": \\\"🍻\\\", \\\"clinking_glasses\\\": \\\"🥂\\\", \\\"tumbler_glass\\\": \\\"🥃\\\", \\\"cup_with_straw\\\": \\\"🥤\\\", \\\"bubble_tea\\\": \\\"🧋\\\", \\\"beverage_box\\\": \\\"🧃\\\", \\\"mate\\\": \\\"🧉\\\", \\\"ice_cube\\\": \\\"🧊\\\", \\\"chopsticks\\\": \\\"🥢\\\", \\\"plate_with_cutlery\\\": \\\"🍽️\\\", \\\"fork_and_knife\\\": \\\"🍴\\\", \\\"spoon\\\": \\\"🥄\\\", \\\"hocho\\\": \\\"🔪\\\", \\\"knife\\\": \\\"🔪\\\", \\\"amphora\\\": \\\"🏺\\\", \\\"earth_africa\\\": \\\"🌍\\\", \\\"earth_americas\\\": \\\"🌎\\\", \\\"earth_asia\\\": \\\"🌏\\\", \\\"globe_with_meridians\\\": \\\"🌐\\\", \\\"world_map\\\": \\\"🗺️\\\", \\\"japan\\\": \\\"🗾\\\", \\\"compass\\\": \\\"🧭\\\", \\\"mountain_snow\\\": \\\"🏔️\\\", \\\"mountain\\\": \\\"⛰️\\\", \\\"volcano\\\": \\\"🌋\\\", \\\"mount_fuji\\\": \\\"🗻\\\", \\\"camping\\\": \\\"🏕️\\\", \\\"beach_umbrella\\\": \\\"🏖️\\\", \\\"desert\\\": \\\"🏜️\\\", \\\"desert_island\\\": \\\"🏝️\\\", \\\"national_park\\\": \\\"🏞️\\\", \\\"stadium\\\": \\\"🏟️\\\", \\\"classical_building\\\": \\\"🏛️\\\", \\\"building_construction\\\": \\\"🏗️\\\", \\\"bricks\\\": \\\"🧱\\\", \\\"rock\\\": \\\"🪨\\\", \\\"wood\\\": \\\"🪵\\\", \\\"hut\\\": \\\"🛖\\\", \\\"houses\\\": \\\"🏘️\\\", \\\"derelict_house\\\": \\\"🏚️\\\", \\\"house\\\": \\\"🏠\\\", \\\"house_with_garden\\\": \\\"🏡\\\", \\\"office\\\": \\\"🏢\\\", \\\"post_office\\\": \\\"🏣\\\", \\\"european_post_office\\\": \\\"🏤\\\", \\\"hospital\\\": \\\"🏥\\\", \\\"bank\\\": \\\"🏦\\\", \\\"hotel\\\": \\\"🏨\\\", \\\"love_hotel\\\": \\\"🏩\\\", \\\"convenience_store\\\": \\\"🏪\\\", \\\"school\\\": \\\"🏫\\\", \\\"department_store\\\": \\\"🏬\\\", \\\"factory\\\": \\\"🏭\\\", \\\"japanese_castle\\\": \\\"🏯\\\", \\\"european_castle\\\": \\\"🏰\\\", \\\"wedding\\\": \\\"💒\\\", \\\"tokyo_tower\\\": \\\"🗼\\\", \\\"statue_of_liberty\\\": \\\"🗽\\\", \\\"church\\\": \\\"⛪\\\", \\\"mosque\\\": \\\"🕌\\\", \\\"hindu_temple\\\": \\\"🛕\\\", \\\"synagogue\\\": \\\"🕍\\\", \\\"shinto_shrine\\\": \\\"⛩️\\\", \\\"kaaba\\\": \\\"🕋\\\", \\\"fountain\\\": \\\"⛲\\\", \\\"tent\\\": \\\"⛺\\\", \\\"foggy\\\": \\\"🌁\\\", \\\"night_with_stars\\\": \\\"🌃\\\", \\\"cityscape\\\": \\\"🏙️\\\", \\\"sunrise_over_mountains\\\": \\\"🌄\\\", \\\"sunrise\\\": \\\"🌅\\\", \\\"city_sunset\\\": \\\"🌆\\\", \\\"city_sunrise\\\": \\\"🌇\\\", \\\"bridge_at_night\\\": \\\"🌉\\\", \\\"hotsprings\\\": \\\"♨️\\\", \\\"carousel_horse\\\": \\\"🎠\\\", \\\"ferris_wheel\\\": \\\"🎡\\\", \\\"roller_coaster\\\": \\\"🎢\\\", \\\"barber\\\": \\\"💈\\\", \\\"circus_tent\\\": \\\"🎪\\\", \\\"steam_locomotive\\\": \\\"🚂\\\", \\\"railway_car\\\": \\\"🚃\\\", \\\"bullettrain_side\\\": \\\"🚄\\\", \\\"bullettrain_front\\\": \\\"🚅\\\", \\\"train2\\\": \\\"🚆\\\", \\\"metro\\\": \\\"🚇\\\", \\\"light_rail\\\": \\\"🚈\\\", \\\"station\\\": \\\"🚉\\\", \\\"tram\\\": \\\"🚊\\\", \\\"monorail\\\": \\\"🚝\\\", \\\"mountain_railway\\\": \\\"🚞\\\", \\\"train\\\": \\\"🚋\\\", \\\"bus\\\": \\\"🚌\\\", \\\"oncoming_bus\\\": \\\"🚍\\\", \\\"trolleybus\\\": \\\"🚎\\\", \\\"minibus\\\": \\\"🚐\\\", \\\"ambulance\\\": \\\"🚑\\\", \\\"fire_engine\\\": \\\"🚒\\\", \\\"police_car\\\": \\\"🚓\\\", \\\"oncoming_police_car\\\": \\\"🚔\\\", \\\"taxi\\\": \\\"🚕\\\", \\\"oncoming_taxi\\\": \\\"🚖\\\", \\\"car\\\": \\\"🚗\\\", \\\"red_car\\\": \\\"🚗\\\", \\\"oncoming_automobile\\\": \\\"🚘\\\", \\\"blue_car\\\": \\\"🚙\\\", \\\"pickup_truck\\\": \\\"🛻\\\", \\\"truck\\\": \\\"🚚\\\", \\\"articulated_lorry\\\": \\\"🚛\\\", \\\"tractor\\\": \\\"🚜\\\", \\\"racing_car\\\": \\\"🏎️\\\", \\\"motorcycle\\\": \\\"🏍️\\\", \\\"motor_scooter\\\": \\\"🛵\\\", \\\"manual_wheelchair\\\": \\\"🦽\\\", \\\"motorized_wheelchair\\\": \\\"🦼\\\", \\\"auto_rickshaw\\\": \\\"🛺\\\", \\\"bike\\\": \\\"🚲\\\", \\\"kick_scooter\\\": \\\"🛴\\\", \\\"skateboard\\\": \\\"🛹\\\", \\\"roller_skate\\\": \\\"🛼\\\", \\\"busstop\\\": \\\"🚏\\\", \\\"motorway\\\": \\\"🛣️\\\", \\\"railway_track\\\": \\\"🛤️\\\", \\\"oil_drum\\\": \\\"🛢️\\\", \\\"fuelpump\\\": \\\"⛽\\\", \\\"rotating_light\\\": \\\"🚨\\\", \\\"traffic_light\\\": \\\"🚥\\\", \\\"vertical_traffic_light\\\": \\\"🚦\\\", \\\"stop_sign\\\": \\\"🛑\\\", \\\"construction\\\": \\\"🚧\\\", \\\"anchor\\\": \\\"⚓\\\", \\\"boat\\\": \\\"⛵\\\", \\\"sailboat\\\": \\\"⛵\\\", \\\"canoe\\\": \\\"🛶\\\", \\\"speedboat\\\": \\\"🚤\\\", \\\"passenger_ship\\\": \\\"🛳️\\\", \\\"ferry\\\": \\\"⛴️\\\", \\\"motor_boat\\\": \\\"🛥️\\\", \\\"ship\\\": \\\"🚢\\\", \\\"airplane\\\": \\\"✈️\\\", \\\"small_airplane\\\": \\\"🛩️\\\", \\\"flight_departure\\\": \\\"🛫\\\", \\\"flight_arrival\\\": \\\"🛬\\\", \\\"parachute\\\": \\\"🪂\\\", \\\"seat\\\": \\\"💺\\\", \\\"helicopter\\\": \\\"🚁\\\", \\\"suspension_railway\\\": \\\"🚟\\\", \\\"mountain_cableway\\\": \\\"🚠\\\", \\\"aerial_tramway\\\": \\\"🚡\\\", \\\"artificial_satellite\\\": \\\"🛰️\\\", \\\"rocket\\\": \\\"🚀\\\", \\\"flying_saucer\\\": \\\"🛸\\\", \\\"bellhop_bell\\\": \\\"🛎️\\\", \\\"luggage\\\": \\\"🧳\\\", \\\"hourglass\\\": \\\"⌛\\\", \\\"hourglass_flowing_sand\\\": \\\"⏳\\\", \\\"watch\\\": \\\"⌚\\\", \\\"alarm_clock\\\": \\\"⏰\\\", \\\"stopwatch\\\": \\\"⏱️\\\", \\\"timer_clock\\\": \\\"⏲️\\\", \\\"mantelpiece_clock\\\": \\\"🕰️\\\", \\\"clock12\\\": \\\"🕛\\\", \\\"clock1230\\\": \\\"🕧\\\", \\\"clock1\\\": \\\"🕐\\\", \\\"clock130\\\": \\\"🕜\\\", \\\"clock2\\\": \\\"🕑\\\", \\\"clock230\\\": \\\"🕝\\\", \\\"clock3\\\": \\\"🕒\\\", \\\"clock330\\\": \\\"🕞\\\", \\\"clock4\\\": \\\"🕓\\\", \\\"clock430\\\": \\\"🕟\\\", \\\"clock5\\\": \\\"🕔\\\", \\\"clock530\\\": \\\"🕠\\\", \\\"clock6\\\": \\\"🕕\\\", \\\"clock630\\\": \\\"🕡\\\", \\\"clock7\\\": \\\"🕖\\\", \\\"clock730\\\": \\\"🕢\\\", \\\"clock8\\\": \\\"🕗\\\", \\\"clock830\\\": \\\"🕣\\\", \\\"clock9\\\": \\\"🕘\\\", \\\"clock930\\\": \\\"🕤\\\", \\\"clock10\\\": \\\"🕙\\\", \\\"clock1030\\\": \\\"🕥\\\", \\\"clock11\\\": \\\"🕚\\\", \\\"clock1130\\\": \\\"🕦\\\", \\\"new_moon\\\": \\\"🌑\\\", \\\"waxing_crescent_moon\\\": \\\"🌒\\\", \\\"first_quarter_moon\\\": \\\"🌓\\\", \\\"moon\\\": \\\"🌔\\\", \\\"waxing_gibbous_moon\\\": \\\"🌔\\\", \\\"full_moon\\\": \\\"🌕\\\", \\\"waning_gibbous_moon\\\": \\\"🌖\\\", \\\"last_quarter_moon\\\": \\\"🌗\\\", \\\"waning_crescent_moon\\\": \\\"🌘\\\", \\\"crescent_moon\\\": \\\"🌙\\\", \\\"new_moon_with_face\\\": \\\"🌚\\\", \\\"first_quarter_moon_with_face\\\": \\\"🌛\\\", \\\"last_quarter_moon_with_face\\\": \\\"🌜\\\", \\\"thermometer\\\": \\\"🌡️\\\", \\\"sunny\\\": \\\"☀️\\\", \\\"full_moon_with_face\\\": \\\"🌝\\\", \\\"sun_with_face\\\": \\\"🌞\\\", \\\"ringed_planet\\\": \\\"🪐\\\", \\\"star\\\": \\\"⭐\\\", \\\"star2\\\": \\\"🌟\\\", \\\"stars\\\": \\\"🌠\\\", \\\"milky_way\\\": \\\"🌌\\\", \\\"cloud\\\": \\\"☁️\\\", \\\"partly_sunny\\\": \\\"⛅\\\", \\\"cloud_with_lightning_and_rain\\\": \\\"⛈️\\\", \\\"sun_behind_small_cloud\\\": \\\"🌤️\\\", \\\"sun_behind_large_cloud\\\": \\\"🌥️\\\", \\\"sun_behind_rain_cloud\\\": \\\"🌦️\\\", \\\"cloud_with_rain\\\": \\\"🌧️\\\", \\\"cloud_with_snow\\\": \\\"🌨️\\\", \\\"cloud_with_lightning\\\": \\\"🌩️\\\", \\\"tornado\\\": \\\"🌪️\\\", \\\"fog\\\": \\\"🌫️\\\", \\\"wind_face\\\": \\\"🌬️\\\", \\\"cyclone\\\": \\\"🌀\\\", \\\"rainbow\\\": \\\"🌈\\\", \\\"closed_umbrella\\\": \\\"🌂\\\", \\\"open_umbrella\\\": \\\"☂️\\\", \\\"umbrella\\\": \\\"☔\\\", \\\"parasol_on_ground\\\": \\\"⛱️\\\", \\\"zap\\\": \\\"⚡\\\", \\\"snowflake\\\": \\\"❄️\\\", \\\"snowman_with_snow\\\": \\\"☃️\\\", \\\"snowman\\\": \\\"⛄\\\", \\\"comet\\\": \\\"☄️\\\", \\\"fire\\\": \\\"🔥\\\", \\\"droplet\\\": \\\"💧\\\", \\\"ocean\\\": \\\"🌊\\\", \\\"jack_o_lantern\\\": \\\"🎃\\\", \\\"christmas_tree\\\": \\\"🎄\\\", \\\"fireworks\\\": \\\"🎆\\\", \\\"sparkler\\\": \\\"🎇\\\", \\\"firecracker\\\": \\\"🧨\\\", \\\"sparkles\\\": \\\"✨\\\", \\\"balloon\\\": \\\"🎈\\\", \\\"tada\\\": \\\"🎉\\\", \\\"confetti_ball\\\": \\\"🎊\\\", \\\"tanabata_tree\\\": \\\"🎋\\\", \\\"bamboo\\\": \\\"🎍\\\", \\\"dolls\\\": \\\"🎎\\\", \\\"flags\\\": \\\"🎏\\\", \\\"wind_chime\\\": \\\"🎐\\\", \\\"rice_scene\\\": \\\"🎑\\\", \\\"red_envelope\\\": \\\"🧧\\\", \\\"ribbon\\\": \\\"🎀\\\", \\\"gift\\\": \\\"🎁\\\", \\\"reminder_ribbon\\\": \\\"🎗️\\\", \\\"tickets\\\": \\\"🎟️\\\", \\\"ticket\\\": \\\"🎫\\\", \\\"medal_military\\\": \\\"🎖️\\\", \\\"trophy\\\": \\\"🏆\\\", \\\"medal_sports\\\": \\\"🏅\\\", \\\"1st_place_medal\\\": \\\"🥇\\\", \\\"2nd_place_medal\\\": \\\"🥈\\\", \\\"3rd_place_medal\\\": \\\"🥉\\\", \\\"soccer\\\": \\\"⚽\\\", \\\"baseball\\\": \\\"⚾\\\", \\\"softball\\\": \\\"🥎\\\", \\\"basketball\\\": \\\"🏀\\\", \\\"volleyball\\\": \\\"🏐\\\", \\\"football\\\": \\\"🏈\\\", \\\"rugby_football\\\": \\\"🏉\\\", \\\"tennis\\\": \\\"🎾\\\", \\\"flying_disc\\\": \\\"🥏\\\", \\\"bowling\\\": \\\"🎳\\\", \\\"cricket_game\\\": \\\"🏏\\\", \\\"field_hockey\\\": \\\"🏑\\\", \\\"ice_hockey\\\": \\\"🏒\\\", \\\"lacrosse\\\": \\\"🥍\\\", \\\"ping_pong\\\": \\\"🏓\\\", \\\"badminton\\\": \\\"🏸\\\", \\\"boxing_glove\\\": \\\"🥊\\\", \\\"martial_arts_uniform\\\": \\\"🥋\\\", \\\"goal_net\\\": \\\"🥅\\\", \\\"golf\\\": \\\"⛳\\\", \\\"ice_skate\\\": \\\"⛸️\\\", \\\"fishing_pole_and_fish\\\": \\\"🎣\\\", \\\"diving_mask\\\": \\\"🤿\\\", \\\"running_shirt_with_sash\\\": \\\"🎽\\\", \\\"ski\\\": \\\"🎿\\\", \\\"sled\\\": \\\"🛷\\\", \\\"curling_stone\\\": \\\"🥌\\\", \\\"dart\\\": \\\"🎯\\\", \\\"yo_yo\\\": \\\"🪀\\\", \\\"kite\\\": \\\"🪁\\\", \\\"8ball\\\": \\\"🎱\\\", \\\"crystal_ball\\\": \\\"🔮\\\", \\\"magic_wand\\\": \\\"🪄\\\", \\\"nazar_amulet\\\": \\\"🧿\\\", \\\"video_game\\\": \\\"🎮\\\", \\\"joystick\\\": \\\"🕹️\\\", \\\"slot_machine\\\": \\\"🎰\\\", \\\"game_die\\\": \\\"🎲\\\", \\\"jigsaw\\\": \\\"🧩\\\", \\\"teddy_bear\\\": \\\"🧸\\\", \\\"pinata\\\": \\\"🪅\\\", \\\"nesting_dolls\\\": \\\"🪆\\\", \\\"spades\\\": \\\"♠️\\\", \\\"hearts\\\": \\\"♥️\\\", \\\"diamonds\\\": \\\"♦️\\\", \\\"clubs\\\": \\\"♣️\\\", \\\"chess_pawn\\\": \\\"♟️\\\", \\\"black_joker\\\": \\\"🃏\\\", \\\"mahjong\\\": \\\"🀄\\\", \\\"flower_playing_cards\\\": \\\"🎴\\\", \\\"performing_arts\\\": \\\"🎭\\\", \\\"framed_picture\\\": \\\"🖼️\\\", \\\"art\\\": \\\"🎨\\\", \\\"thread\\\": \\\"🧵\\\", \\\"sewing_needle\\\": \\\"🪡\\\", \\\"yarn\\\": \\\"🧶\\\", \\\"knot\\\": \\\"🪢\\\", \\\"eyeglasses\\\": \\\"👓\\\", \\\"dark_sunglasses\\\": \\\"🕶️\\\", \\\"goggles\\\": \\\"🥽\\\", \\\"lab_coat\\\": \\\"🥼\\\", \\\"safety_vest\\\": \\\"🦺\\\", \\\"necktie\\\": \\\"👔\\\", \\\"shirt\\\": \\\"👕\\\", \\\"tshirt\\\": \\\"👕\\\", \\\"jeans\\\": \\\"👖\\\", \\\"scarf\\\": \\\"🧣\\\", \\\"gloves\\\": \\\"🧤\\\", \\\"coat\\\": \\\"🧥\\\", \\\"socks\\\": \\\"🧦\\\", \\\"dress\\\": \\\"👗\\\", \\\"kimono\\\": \\\"👘\\\", \\\"sari\\\": \\\"🥻\\\", \\\"one_piece_swimsuit\\\": \\\"🩱\\\", \\\"swim_brief\\\": \\\"🩲\\\", \\\"shorts\\\": \\\"🩳\\\", \\\"bikini\\\": \\\"👙\\\", \\\"womans_clothes\\\": \\\"👚\\\", \\\"purse\\\": \\\"👛\\\", \\\"handbag\\\": \\\"👜\\\", \\\"pouch\\\": \\\"👝\\\", \\\"shopping\\\": \\\"🛍️\\\", \\\"school_satchel\\\": \\\"🎒\\\", \\\"thong_sandal\\\": \\\"🩴\\\", \\\"mans_shoe\\\": \\\"👞\\\", \\\"shoe\\\": \\\"👞\\\", \\\"athletic_shoe\\\": \\\"👟\\\", \\\"hiking_boot\\\": \\\"🥾\\\", \\\"flat_shoe\\\": \\\"🥿\\\", \\\"high_heel\\\": \\\"👠\\\", \\\"sandal\\\": \\\"👡\\\", \\\"ballet_shoes\\\": \\\"🩰\\\", \\\"boot\\\": \\\"👢\\\", \\\"crown\\\": \\\"👑\\\", \\\"womans_hat\\\": \\\"👒\\\", \\\"tophat\\\": \\\"🎩\\\", \\\"mortar_board\\\": \\\"🎓\\\", \\\"billed_cap\\\": \\\"🧢\\\", \\\"military_helmet\\\": \\\"🪖\\\", \\\"rescue_worker_helmet\\\": \\\"⛑️\\\", \\\"prayer_beads\\\": \\\"📿\\\", \\\"lipstick\\\": \\\"💄\\\", \\\"ring\\\": \\\"💍\\\", \\\"gem\\\": \\\"💎\\\", \\\"mute\\\": \\\"🔇\\\", \\\"speaker\\\": \\\"🔈\\\", \\\"sound\\\": \\\"🔉\\\", \\\"loud_sound\\\": \\\"🔊\\\", \\\"loudspeaker\\\": \\\"📢\\\", \\\"mega\\\": \\\"📣\\\", \\\"postal_horn\\\": \\\"📯\\\", \\\"bell\\\": \\\"🔔\\\", \\\"no_bell\\\": \\\"🔕\\\", \\\"musical_score\\\": \\\"🎼\\\", \\\"musical_note\\\": \\\"🎵\\\", \\\"notes\\\": \\\"🎶\\\", \\\"studio_microphone\\\": \\\"🎙️\\\", \\\"level_slider\\\": \\\"🎚️\\\", \\\"control_knobs\\\": \\\"🎛️\\\", \\\"microphone\\\": \\\"🎤\\\", \\\"headphones\\\": \\\"🎧\\\", \\\"radio\\\": \\\"📻\\\", \\\"saxophone\\\": \\\"🎷\\\", \\\"accordion\\\": \\\"🪗\\\", \\\"guitar\\\": \\\"🎸\\\", \\\"musical_keyboard\\\": \\\"🎹\\\", \\\"trumpet\\\": \\\"🎺\\\", \\\"violin\\\": \\\"🎻\\\", \\\"banjo\\\": \\\"🪕\\\", \\\"drum\\\": \\\"🥁\\\", \\\"long_drum\\\": \\\"🪘\\\", \\\"iphone\\\": \\\"📱\\\", \\\"calling\\\": \\\"📲\\\", \\\"phone\\\": \\\"☎️\\\", \\\"telephone\\\": \\\"☎️\\\", \\\"telephone_receiver\\\": \\\"📞\\\", \\\"pager\\\": \\\"📟\\\", \\\"fax\\\": \\\"📠\\\", \\\"battery\\\": \\\"🔋\\\", \\\"electric_plug\\\": \\\"🔌\\\", \\\"computer\\\": \\\"💻\\\", \\\"desktop_computer\\\": \\\"🖥️\\\", \\\"printer\\\": \\\"🖨️\\\", \\\"keyboard\\\": \\\"⌨️\\\", \\\"computer_mouse\\\": \\\"🖱️\\\", \\\"trackball\\\": \\\"🖲️\\\", \\\"minidisc\\\": \\\"💽\\\", \\\"floppy_disk\\\": \\\"💾\\\", \\\"cd\\\": \\\"💿\\\", \\\"dvd\\\": \\\"📀\\\", \\\"abacus\\\": \\\"🧮\\\", \\\"movie_camera\\\": \\\"🎥\\\", \\\"film_strip\\\": \\\"🎞️\\\", \\\"film_projector\\\": \\\"📽️\\\", \\\"clapper\\\": \\\"🎬\\\", \\\"tv\\\": \\\"📺\\\", \\\"camera\\\": \\\"📷\\\", \\\"camera_flash\\\": \\\"📸\\\", \\\"video_camera\\\": \\\"📹\\\", \\\"vhs\\\": \\\"📼\\\", \\\"mag\\\": \\\"🔍\\\", \\\"mag_right\\\": \\\"🔎\\\", \\\"candle\\\": \\\"🕯️\\\", \\\"bulb\\\": \\\"💡\\\", \\\"flashlight\\\": \\\"🔦\\\", \\\"izakaya_lantern\\\": \\\"🏮\\\", \\\"lantern\\\": \\\"🏮\\\", \\\"diya_lamp\\\": \\\"🪔\\\", \\\"notebook_with_decorative_cover\\\": \\\"📔\\\", \\\"closed_book\\\": \\\"📕\\\", \\\"book\\\": \\\"📖\\\", \\\"open_book\\\": \\\"📖\\\", \\\"green_book\\\": \\\"📗\\\", \\\"blue_book\\\": \\\"📘\\\", \\\"orange_book\\\": \\\"📙\\\", \\\"books\\\": \\\"📚\\\", \\\"notebook\\\": \\\"📓\\\", \\\"ledger\\\": \\\"📒\\\", \\\"page_with_curl\\\": \\\"📃\\\", \\\"scroll\\\": \\\"📜\\\", \\\"page_facing_up\\\": \\\"📄\\\", \\\"newspaper\\\": \\\"📰\\\", \\\"newspaper_roll\\\": \\\"🗞️\\\", \\\"bookmark_tabs\\\": \\\"📑\\\", \\\"bookmark\\\": \\\"🔖\\\", \\\"label\\\": \\\"🏷️\\\", \\\"moneybag\\\": \\\"💰\\\", \\\"coin\\\": \\\"🪙\\\", \\\"yen\\\": \\\"💴\\\", \\\"dollar\\\": \\\"💵\\\", \\\"euro\\\": \\\"💶\\\", \\\"pound\\\": \\\"💷\\\", \\\"money_with_wings\\\": \\\"💸\\\", \\\"credit_card\\\": \\\"💳\\\", \\\"receipt\\\": \\\"🧾\\\", \\\"chart\\\": \\\"💹\\\", \\\"envelope\\\": \\\"✉️\\\", \\\"email\\\": \\\"📧\\\", \\\"e-mail\\\": \\\"📧\\\", \\\"incoming_envelope\\\": \\\"📨\\\", \\\"envelope_with_arrow\\\": \\\"📩\\\", \\\"outbox_tray\\\": \\\"📤\\\", \\\"inbox_tray\\\": \\\"📥\\\", \\\"package\\\": \\\"📦\\\", \\\"mailbox\\\": \\\"📫\\\", \\\"mailbox_closed\\\": \\\"📪\\\", \\\"mailbox_with_mail\\\": \\\"📬\\\", \\\"mailbox_with_no_mail\\\": \\\"📭\\\", \\\"postbox\\\": \\\"📮\\\", \\\"ballot_box\\\": \\\"🗳️\\\", \\\"pencil2\\\": \\\"✏️\\\", \\\"black_nib\\\": \\\"✒️\\\", \\\"fountain_pen\\\": \\\"🖋️\\\", \\\"pen\\\": \\\"🖊️\\\", \\\"paintbrush\\\": \\\"🖌️\\\", \\\"crayon\\\": \\\"🖍️\\\", \\\"memo\\\": \\\"📝\\\", \\\"pencil\\\": \\\"📝\\\", \\\"briefcase\\\": \\\"💼\\\", \\\"file_folder\\\": \\\"📁\\\", \\\"open_file_folder\\\": \\\"📂\\\", \\\"card_index_dividers\\\": \\\"🗂️\\\", \\\"date\\\": \\\"📅\\\", \\\"calendar\\\": \\\"📆\\\", \\\"spiral_notepad\\\": \\\"🗒️\\\", \\\"spiral_calendar\\\": \\\"🗓️\\\", \\\"card_index\\\": \\\"📇\\\", \\\"chart_with_upwards_trend\\\": \\\"📈\\\", \\\"chart_with_downwards_trend\\\": \\\"📉\\\", \\\"bar_chart\\\": \\\"📊\\\", \\\"clipboard\\\": \\\"📋\\\", \\\"pushpin\\\": \\\"📌\\\", \\\"round_pushpin\\\": \\\"📍\\\", \\\"paperclip\\\": \\\"📎\\\", \\\"paperclips\\\": \\\"🖇️\\\", \\\"straight_ruler\\\": \\\"📏\\\", \\\"triangular_ruler\\\": \\\"📐\\\", \\\"scissors\\\": \\\"✂️\\\", \\\"card_file_box\\\": \\\"🗃️\\\", \\\"file_cabinet\\\": \\\"🗄️\\\", \\\"wastebasket\\\": \\\"🗑️\\\", \\\"lock\\\": \\\"🔒\\\", \\\"unlock\\\": \\\"🔓\\\", \\\"lock_with_ink_pen\\\": \\\"🔏\\\", \\\"closed_lock_with_key\\\": \\\"🔐\\\", \\\"key\\\": \\\"🔑\\\", \\\"old_key\\\": \\\"🗝️\\\", \\\"hammer\\\": \\\"🔨\\\", \\\"axe\\\": \\\"🪓\\\", \\\"pick\\\": \\\"⛏️\\\", \\\"hammer_and_pick\\\": \\\"⚒️\\\", \\\"hammer_and_wrench\\\": \\\"🛠️\\\", \\\"dagger\\\": \\\"🗡️\\\", \\\"crossed_swords\\\": \\\"⚔️\\\", \\\"gun\\\": \\\"🔫\\\", \\\"boomerang\\\": \\\"🪃\\\", \\\"bow_and_arrow\\\": \\\"🏹\\\", \\\"shield\\\": \\\"🛡️\\\", \\\"carpentry_saw\\\": \\\"🪚\\\", \\\"wrench\\\": \\\"🔧\\\", \\\"screwdriver\\\": \\\"🪛\\\", \\\"nut_and_bolt\\\": \\\"🔩\\\", \\\"gear\\\": \\\"⚙️\\\", \\\"clamp\\\": \\\"🗜️\\\", \\\"balance_scale\\\": \\\"⚖️\\\", \\\"probing_cane\\\": \\\"🦯\\\", \\\"link\\\": \\\"🔗\\\", \\\"chains\\\": \\\"⛓️\\\", \\\"hook\\\": \\\"🪝\\\", \\\"toolbox\\\": \\\"🧰\\\", \\\"magnet\\\": \\\"🧲\\\", \\\"ladder\\\": \\\"🪜\\\", \\\"alembic\\\": \\\"⚗️\\\", \\\"test_tube\\\": \\\"🧪\\\", \\\"petri_dish\\\": \\\"🧫\\\", \\\"dna\\\": \\\"🧬\\\", \\\"microscope\\\": \\\"🔬\\\", \\\"telescope\\\": \\\"🔭\\\", \\\"satellite\\\": \\\"📡\\\", \\\"syringe\\\": \\\"💉\\\", \\\"drop_of_blood\\\": \\\"🩸\\\", \\\"pill\\\": \\\"💊\\\", \\\"adhesive_bandage\\\": \\\"🩹\\\", \\\"stethoscope\\\": \\\"🩺\\\", \\\"door\\\": \\\"🚪\\\", \\\"elevator\\\": \\\"🛗\\\", \\\"mirror\\\": \\\"🪞\\\", \\\"window\\\": \\\"🪟\\\", \\\"bed\\\": \\\"🛏️\\\", \\\"couch_and_lamp\\\": \\\"🛋️\\\", \\\"chair\\\": \\\"🪑\\\", \\\"toilet\\\": \\\"🚽\\\", \\\"plunger\\\": \\\"🪠\\\", \\\"shower\\\": \\\"🚿\\\", \\\"bathtub\\\": \\\"🛁\\\", \\\"mouse_trap\\\": \\\"🪤\\\", \\\"razor\\\": \\\"🪒\\\", \\\"lotion_bottle\\\": \\\"🧴\\\", \\\"safety_pin\\\": \\\"🧷\\\", \\\"broom\\\": \\\"🧹\\\", \\\"basket\\\": \\\"🧺\\\", \\\"roll_of_paper\\\": \\\"🧻\\\", \\\"bucket\\\": \\\"🪣\\\", \\\"soap\\\": \\\"🧼\\\", \\\"toothbrush\\\": \\\"🪥\\\", \\\"sponge\\\": \\\"🧽\\\", \\\"fire_extinguisher\\\": \\\"🧯\\\", \\\"shopping_cart\\\": \\\"🛒\\\", \\\"smoking\\\": \\\"🚬\\\", \\\"coffin\\\": \\\"⚰️\\\", \\\"headstone\\\": \\\"🪦\\\", \\\"funeral_urn\\\": \\\"⚱️\\\", \\\"moyai\\\": \\\"🗿\\\", \\\"placard\\\": \\\"🪧\\\", \\\"atm\\\": \\\"🏧\\\", \\\"put_litter_in_its_place\\\": \\\"🚮\\\", \\\"potable_water\\\": \\\"🚰\\\", \\\"wheelchair\\\": \\\"♿\\\", \\\"mens\\\": \\\"🚹\\\", \\\"womens\\\": \\\"🚺\\\", \\\"restroom\\\": \\\"🚻\\\", \\\"baby_symbol\\\": \\\"🚼\\\", \\\"wc\\\": \\\"🚾\\\", \\\"passport_control\\\": \\\"🛂\\\", \\\"customs\\\": \\\"🛃\\\", \\\"baggage_claim\\\": \\\"🛄\\\", \\\"left_luggage\\\": \\\"🛅\\\", \\\"warning\\\": \\\"⚠️\\\", \\\"children_crossing\\\": \\\"🚸\\\", \\\"no_entry\\\": \\\"⛔\\\", \\\"no_entry_sign\\\": \\\"🚫\\\", \\\"no_bicycles\\\": \\\"🚳\\\", \\\"no_smoking\\\": \\\"🚭\\\", \\\"do_not_litter\\\": \\\"🚯\\\", \\\"non-potable_water\\\": \\\"🚱\\\", \\\"no_pedestrians\\\": \\\"🚷\\\", \\\"no_mobile_phones\\\": \\\"📵\\\", \\\"underage\\\": \\\"🔞\\\", \\\"radioactive\\\": \\\"☢️\\\", \\\"biohazard\\\": \\\"☣️\\\", \\\"arrow_up\\\": \\\"⬆️\\\", \\\"arrow_upper_right\\\": \\\"↗️\\\", \\\"arrow_right\\\": \\\"➡️\\\", \\\"arrow_lower_right\\\": \\\"↘️\\\", \\\"arrow_down\\\": \\\"⬇️\\\", \\\"arrow_lower_left\\\": \\\"↙️\\\", \\\"arrow_left\\\": \\\"⬅️\\\", \\\"arrow_upper_left\\\": \\\"↖️\\\", \\\"arrow_up_down\\\": \\\"↕️\\\", \\\"left_right_arrow\\\": \\\"↔️\\\", \\\"leftwards_arrow_with_hook\\\": \\\"↩️\\\", \\\"arrow_right_hook\\\": \\\"↪️\\\", \\\"arrow_heading_up\\\": \\\"⤴️\\\", \\\"arrow_heading_down\\\": \\\"⤵️\\\", \\\"arrows_clockwise\\\": \\\"🔃\\\", \\\"arrows_counterclockwise\\\": \\\"🔄\\\", \\\"back\\\": \\\"🔙\\\", \\\"end\\\": \\\"🔚\\\", \\\"on\\\": \\\"🔛\\\", \\\"soon\\\": \\\"🔜\\\", \\\"top\\\": \\\"🔝\\\", \\\"place_of_worship\\\": \\\"🛐\\\", \\\"atom_symbol\\\": \\\"⚛️\\\", \\\"om\\\": \\\"🕉️\\\", \\\"star_of_david\\\": \\\"✡️\\\", \\\"wheel_of_dharma\\\": \\\"☸️\\\", \\\"yin_yang\\\": \\\"☯️\\\", \\\"latin_cross\\\": \\\"✝️\\\", \\\"orthodox_cross\\\": \\\"☦️\\\", \\\"star_and_crescent\\\": \\\"☪️\\\", \\\"peace_symbol\\\": \\\"☮️\\\", \\\"menorah\\\": \\\"🕎\\\", \\\"six_pointed_star\\\": \\\"🔯\\\", \\\"aries\\\": \\\"♈\\\", \\\"taurus\\\": \\\"♉\\\", \\\"gemini\\\": \\\"♊\\\", \\\"cancer\\\": \\\"♋\\\", \\\"leo\\\": \\\"♌\\\", \\\"virgo\\\": \\\"♍\\\", \\\"libra\\\": \\\"♎\\\", \\\"scorpius\\\": \\\"♏\\\", \\\"sagittarius\\\": \\\"♐\\\", \\\"capricorn\\\": \\\"♑\\\", \\\"aquarius\\\": \\\"♒\\\", \\\"pisces\\\": \\\"♓\\\", \\\"ophiuchus\\\": \\\"⛎\\\", \\\"twisted_rightwards_arrows\\\": \\\"🔀\\\", \\\"repeat\\\": \\\"🔁\\\", \\\"repeat_one\\\": \\\"🔂\\\", \\\"arrow_forward\\\": \\\"▶️\\\", \\\"fast_forward\\\": \\\"⏩\\\", \\\"next_track_button\\\": \\\"⏭️\\\", \\\"play_or_pause_button\\\": \\\"⏯️\\\", \\\"arrow_backward\\\": \\\"◀️\\\", \\\"rewind\\\": \\\"⏪\\\", \\\"previous_track_button\\\": \\\"⏮️\\\", \\\"arrow_up_small\\\": \\\"🔼\\\", \\\"arrow_double_up\\\": \\\"⏫\\\", \\\"arrow_down_small\\\": \\\"🔽\\\", \\\"arrow_double_down\\\": \\\"⏬\\\", \\\"pause_button\\\": \\\"⏸️\\\", \\\"stop_button\\\": \\\"⏹️\\\", \\\"record_button\\\": \\\"⏺️\\\", \\\"eject_button\\\": \\\"⏏️\\\", \\\"cinema\\\": \\\"🎦\\\", \\\"low_brightness\\\": \\\"🔅\\\", \\\"high_brightness\\\": \\\"🔆\\\", \\\"signal_strength\\\": \\\"📶\\\", \\\"vibration_mode\\\": \\\"📳\\\", \\\"mobile_phone_off\\\": \\\"📴\\\", \\\"female_sign\\\": \\\"♀️\\\", \\\"male_sign\\\": \\\"♂️\\\", \\\"transgender_symbol\\\": \\\"⚧️\\\", \\\"heavy_multiplication_x\\\": \\\"✖️\\\", \\\"heavy_plus_sign\\\": \\\"➕\\\", \\\"heavy_minus_sign\\\": \\\"➖\\\", \\\"heavy_division_sign\\\": \\\"➗\\\", \\\"infinity\\\": \\\"♾️\\\", \\\"bangbang\\\": \\\"‼️\\\", \\\"interrobang\\\": \\\"⁉️\\\", \\\"question\\\": \\\"❓\\\", \\\"grey_question\\\": \\\"❔\\\", \\\"grey_exclamation\\\": \\\"❕\\\", \\\"exclamation\\\": \\\"❗\\\", \\\"heavy_exclamation_mark\\\": \\\"❗\\\", \\\"wavy_dash\\\": \\\"〰️\\\", \\\"currency_exchange\\\": \\\"💱\\\", \\\"heavy_dollar_sign\\\": \\\"💲\\\", \\\"medical_symbol\\\": \\\"⚕️\\\", \\\"recycle\\\": \\\"♻️\\\", \\\"fleur_de_lis\\\": \\\"⚜️\\\", \\\"trident\\\": \\\"🔱\\\", \\\"name_badge\\\": \\\"📛\\\", \\\"beginner\\\": \\\"🔰\\\", \\\"o\\\": \\\"⭕\\\", \\\"white_check_mark\\\": \\\"✅\\\", \\\"ballot_box_with_check\\\": \\\"☑️\\\", \\\"heavy_check_mark\\\": \\\"✔️\\\", \\\"x\\\": \\\"❌\\\", \\\"negative_squared_cross_mark\\\": \\\"❎\\\", \\\"curly_loop\\\": \\\"➰\\\", \\\"loop\\\": \\\"➿\\\", \\\"part_alternation_mark\\\": \\\"〽️\\\", \\\"eight_spoked_asterisk\\\": \\\"✳️\\\", \\\"eight_pointed_black_star\\\": \\\"✴️\\\", \\\"sparkle\\\": \\\"❇️\\\", \\\"copyright\\\": \\\"©️\\\", \\\"registered\\\": \\\"®️\\\", \\\"tm\\\": \\\"™️\\\", \\\"hash\\\": \\\"#️⃣\\\", \\\"asterisk\\\": \\\"*️⃣\\\", \\\"zero\\\": \\\"0️⃣\\\", \\\"one\\\": \\\"1️⃣\\\", \\\"two\\\": \\\"2️⃣\\\", \\\"three\\\": \\\"3️⃣\\\", \\\"four\\\": \\\"4️⃣\\\", \\\"five\\\": \\\"5️⃣\\\", \\\"six\\\": \\\"6️⃣\\\", \\\"seven\\\": \\\"7️⃣\\\", \\\"eight\\\": \\\"8️⃣\\\", \\\"nine\\\": \\\"9️⃣\\\", \\\"keycap_ten\\\": \\\"🔟\\\", \\\"capital_abcd\\\": \\\"🔠\\\", \\\"abcd\\\": \\\"🔡\\\", \\\"symbols\\\": \\\"🔣\\\", \\\"abc\\\": \\\"🔤\\\", \\\"a\\\": \\\"🅰️\\\", \\\"ab\\\": \\\"🆎\\\", \\\"b\\\": \\\"🅱️\\\", \\\"cl\\\": \\\"🆑\\\", \\\"cool\\\": \\\"🆒\\\", \\\"free\\\": \\\"🆓\\\", \\\"information_source\\\": \\\"ℹ️\\\", \\\"id\\\": \\\"🆔\\\", \\\"m\\\": \\\"Ⓜ️\\\", \\\"new\\\": \\\"🆕\\\", \\\"ng\\\": \\\"🆖\\\", \\\"o2\\\": \\\"🅾️\\\", \\\"ok\\\": \\\"🆗\\\", \\\"parking\\\": \\\"🅿️\\\", \\\"sos\\\": \\\"🆘\\\", \\\"up\\\": \\\"🆙\\\", \\\"vs\\\": \\\"🆚\\\", \\\"koko\\\": \\\"🈁\\\", \\\"sa\\\": \\\"🈂️\\\", \\\"ideograph_advantage\\\": \\\"🉐\\\", \\\"accept\\\": \\\"🉑\\\", \\\"congratulations\\\": \\\"㊗️\\\", \\\"secret\\\": \\\"㊙️\\\", \\\"u6e80\\\": \\\"🈵\\\", \\\"red_circle\\\": \\\"🔴\\\", \\\"orange_circle\\\": \\\"🟠\\\", \\\"yellow_circle\\\": \\\"🟡\\\", \\\"green_circle\\\": \\\"🟢\\\", \\\"large_blue_circle\\\": \\\"🔵\\\", \\\"purple_circle\\\": \\\"🟣\\\", \\\"brown_circle\\\": \\\"🟤\\\", \\\"black_circle\\\": \\\"⚫\\\", \\\"white_circle\\\": \\\"⚪\\\", \\\"red_square\\\": \\\"🟥\\\", \\\"orange_square\\\": \\\"🟧\\\", \\\"yellow_square\\\": \\\"🟨\\\", \\\"green_square\\\": \\\"🟩\\\", \\\"blue_square\\\": \\\"🟦\\\", \\\"purple_square\\\": \\\"🟪\\\", \\\"brown_square\\\": \\\"🟫\\\", \\\"black_large_square\\\": \\\"⬛\\\", \\\"white_large_square\\\": \\\"⬜\\\", \\\"black_medium_square\\\": \\\"◼️\\\", \\\"white_medium_square\\\": \\\"◻️\\\", \\\"black_medium_small_square\\\": \\\"◾\\\", \\\"white_medium_small_square\\\": \\\"◽\\\", \\\"black_small_square\\\": \\\"▪️\\\", \\\"white_small_square\\\": \\\"▫️\\\", \\\"large_orange_diamond\\\": \\\"🔶\\\", \\\"large_blue_diamond\\\": \\\"🔷\\\", \\\"small_orange_diamond\\\": \\\"🔸\\\", \\\"small_blue_diamond\\\": \\\"🔹\\\", \\\"small_red_triangle\\\": \\\"🔺\\\", \\\"small_red_triangle_down\\\": \\\"🔻\\\", \\\"diamond_shape_with_a_dot_inside\\\": \\\"💠\\\", \\\"radio_button\\\": \\\"🔘\\\", \\\"white_square_button\\\": \\\"🔳\\\", \\\"black_square_button\\\": \\\"🔲\\\", \\\"checkered_flag\\\": \\\"🏁\\\", \\\"triangular_flag_on_post\\\": \\\"🚩\\\", \\\"crossed_flags\\\": \\\"🎌\\\", \\\"black_flag\\\": \\\"🏴\\\", \\\"white_flag\\\": \\\"🏳️\\\", \\\"rainbow_flag\\\": \\\"🏳️‍🌈\\\", \\\"transgender_flag\\\": \\\"🏳️‍⚧️\\\", \\\"pirate_flag\\\": \\\"🏴‍☠️\\\", \\\"ascension_island\\\": \\\"🇦🇨\\\", \\\"andorra\\\": \\\"🇦🇩\\\", \\\"united_arab_emirates\\\": \\\"🇦🇪\\\", \\\"afghanistan\\\": \\\"🇦🇫\\\", \\\"antigua_barbuda\\\": \\\"🇦🇬\\\", \\\"anguilla\\\": \\\"🇦🇮\\\", \\\"albania\\\": \\\"🇦🇱\\\", \\\"armenia\\\": \\\"🇦🇲\\\", \\\"angola\\\": \\\"🇦🇴\\\", \\\"antarctica\\\": \\\"🇦🇶\\\", \\\"argentina\\\": \\\"🇦🇷\\\", \\\"american_samoa\\\": \\\"🇦🇸\\\", \\\"austria\\\": \\\"🇦🇹\\\", \\\"australia\\\": \\\"🇦🇺\\\", \\\"aruba\\\": \\\"🇦🇼\\\", \\\"aland_islands\\\": \\\"🇦🇽\\\", \\\"azerbaijan\\\": \\\"🇦🇿\\\", \\\"bosnia_herzegovina\\\": \\\"🇧🇦\\\", \\\"barbados\\\": \\\"🇧🇧\\\", \\\"bangladesh\\\": \\\"🇧🇩\\\", \\\"belgium\\\": \\\"🇧🇪\\\", \\\"burkina_faso\\\": \\\"🇧🇫\\\", \\\"bulgaria\\\": \\\"🇧🇬\\\", \\\"bahrain\\\": \\\"🇧🇭\\\", \\\"burundi\\\": \\\"🇧🇮\\\", \\\"benin\\\": \\\"🇧🇯\\\", \\\"st_barthelemy\\\": \\\"🇧🇱\\\", \\\"bermuda\\\": \\\"🇧🇲\\\", \\\"brunei\\\": \\\"🇧🇳\\\", \\\"bolivia\\\": \\\"🇧🇴\\\", \\\"caribbean_netherlands\\\": \\\"🇧🇶\\\", \\\"brazil\\\": \\\"🇧🇷\\\", \\\"bahamas\\\": \\\"🇧🇸\\\", \\\"bhutan\\\": \\\"🇧🇹\\\", \\\"bouvet_island\\\": \\\"🇧🇻\\\", \\\"botswana\\\": \\\"🇧🇼\\\", \\\"belarus\\\": \\\"🇧🇾\\\", \\\"belize\\\": \\\"🇧🇿\\\", \\\"canada\\\": \\\"🇨🇦\\\", \\\"cocos_islands\\\": \\\"🇨🇨\\\", \\\"congo_kinshasa\\\": \\\"🇨🇩\\\", \\\"central_african_republic\\\": \\\"🇨🇫\\\", \\\"congo_brazzaville\\\": \\\"🇨🇬\\\", \\\"switzerland\\\": \\\"🇨🇭\\\", \\\"cote_divoire\\\": \\\"🇨🇮\\\", \\\"cook_islands\\\": \\\"🇨🇰\\\", \\\"chile\\\": \\\"🇨🇱\\\", \\\"cameroon\\\": \\\"🇨🇲\\\", \\\"cn\\\": \\\"🇨🇳\\\", \\\"colombia\\\": \\\"🇨🇴\\\", \\\"clipperton_island\\\": \\\"🇨🇵\\\", \\\"costa_rica\\\": \\\"🇨🇷\\\", \\\"cuba\\\": \\\"🇨🇺\\\", \\\"cape_verde\\\": \\\"🇨🇻\\\", \\\"curacao\\\": \\\"🇨🇼\\\", \\\"christmas_island\\\": \\\"🇨🇽\\\", \\\"cyprus\\\": \\\"🇨🇾\\\", \\\"czech_republic\\\": \\\"🇨🇿\\\", \\\"de\\\": \\\"🇩🇪\\\", \\\"diego_garcia\\\": \\\"🇩🇬\\\", \\\"djibouti\\\": \\\"🇩🇯\\\", \\\"denmark\\\": \\\"🇩🇰\\\", \\\"dominica\\\": \\\"🇩🇲\\\", \\\"dominican_republic\\\": \\\"🇩🇴\\\", \\\"algeria\\\": \\\"🇩🇿\\\", \\\"ceuta_melilla\\\": \\\"🇪🇦\\\", \\\"ecuador\\\": \\\"🇪🇨\\\", \\\"estonia\\\": \\\"🇪🇪\\\", \\\"egypt\\\": \\\"🇪🇬\\\", \\\"western_sahara\\\": \\\"🇪🇭\\\", \\\"eritrea\\\": \\\"🇪🇷\\\", \\\"es\\\": \\\"🇪🇸\\\", \\\"ethiopia\\\": \\\"🇪🇹\\\", \\\"eu\\\": \\\"🇪🇺\\\", \\\"european_union\\\": \\\"🇪🇺\\\", \\\"finland\\\": \\\"🇫🇮\\\", \\\"fiji\\\": \\\"🇫🇯\\\", \\\"falkland_islands\\\": \\\"🇫🇰\\\", \\\"micronesia\\\": \\\"🇫🇲\\\", \\\"faroe_islands\\\": \\\"🇫🇴\\\", \\\"fr\\\": \\\"🇫🇷\\\", \\\"gabon\\\": \\\"🇬🇦\\\", \\\"gb\\\": \\\"🇬🇧\\\", \\\"uk\\\": \\\"🇬🇧\\\", \\\"grenada\\\": \\\"🇬🇩\\\", \\\"georgia\\\": \\\"🇬🇪\\\", \\\"french_guiana\\\": \\\"🇬🇫\\\", \\\"guernsey\\\": \\\"🇬🇬\\\", \\\"ghana\\\": \\\"🇬🇭\\\", \\\"gibraltar\\\": \\\"🇬🇮\\\", \\\"greenland\\\": \\\"🇬🇱\\\", \\\"gambia\\\": \\\"🇬🇲\\\", \\\"guinea\\\": \\\"🇬🇳\\\", \\\"guadeloupe\\\": \\\"🇬🇵\\\", \\\"equatorial_guinea\\\": \\\"🇬🇶\\\", \\\"greece\\\": \\\"🇬🇷\\\", \\\"south_georgia_south_sandwich_islands\\\": \\\"🇬🇸\\\", \\\"guatemala\\\": \\\"🇬🇹\\\", \\\"guam\\\": \\\"🇬🇺\\\", \\\"guinea_bissau\\\": \\\"🇬🇼\\\", \\\"guyana\\\": \\\"🇬🇾\\\", \\\"hong_kong\\\": \\\"🇭🇰\\\", \\\"heard_mcdonald_islands\\\": \\\"🇭🇲\\\", \\\"honduras\\\": \\\"🇭🇳\\\", \\\"croatia\\\": \\\"🇭🇷\\\", \\\"haiti\\\": \\\"🇭🇹\\\", \\\"hungary\\\": \\\"🇭🇺\\\", \\\"canary_islands\\\": \\\"🇮🇨\\\", \\\"indonesia\\\": \\\"🇮🇩\\\", \\\"ireland\\\": \\\"🇮🇪\\\", \\\"israel\\\": \\\"🇮🇱\\\", \\\"isle_of_man\\\": \\\"🇮🇲\\\", \\\"india\\\": \\\"🇮🇳\\\", \\\"british_indian_ocean_territory\\\": \\\"🇮🇴\\\", \\\"iraq\\\": \\\"🇮🇶\\\", \\\"iran\\\": \\\"🇮🇷\\\", \\\"iceland\\\": \\\"🇮🇸\\\", \\\"it\\\": \\\"🇮🇹\\\", \\\"jersey\\\": \\\"🇯🇪\\\", \\\"jamaica\\\": \\\"🇯🇲\\\", \\\"jordan\\\": \\\"🇯🇴\\\", \\\"jp\\\": \\\"🇯🇵\\\", \\\"kenya\\\": \\\"🇰🇪\\\", \\\"kyrgyzstan\\\": \\\"🇰🇬\\\", \\\"cambodia\\\": \\\"🇰🇭\\\", \\\"kiribati\\\": \\\"🇰🇮\\\", \\\"comoros\\\": \\\"🇰🇲\\\", \\\"st_kitts_nevis\\\": \\\"🇰🇳\\\", \\\"north_korea\\\": \\\"🇰🇵\\\", \\\"kr\\\": \\\"🇰🇷\\\", \\\"kuwait\\\": \\\"🇰🇼\\\", \\\"cayman_islands\\\": \\\"🇰🇾\\\", \\\"kazakhstan\\\": \\\"🇰🇿\\\", \\\"laos\\\": \\\"🇱🇦\\\", \\\"lebanon\\\": \\\"🇱🇧\\\", \\\"st_lucia\\\": \\\"🇱🇨\\\", \\\"liechtenstein\\\": \\\"🇱🇮\\\", \\\"sri_lanka\\\": \\\"🇱🇰\\\", \\\"liberia\\\": \\\"🇱🇷\\\", \\\"lesotho\\\": \\\"🇱🇸\\\", \\\"lithuania\\\": \\\"🇱🇹\\\", \\\"luxembourg\\\": \\\"🇱🇺\\\", \\\"latvia\\\": \\\"🇱🇻\\\", \\\"libya\\\": \\\"🇱🇾\\\", \\\"morocco\\\": \\\"🇲🇦\\\", \\\"monaco\\\": \\\"🇲🇨\\\", \\\"moldova\\\": \\\"🇲🇩\\\", \\\"montenegro\\\": \\\"🇲🇪\\\", \\\"st_martin\\\": \\\"🇲🇫\\\", \\\"madagascar\\\": \\\"🇲🇬\\\", \\\"marshall_islands\\\": \\\"🇲🇭\\\", \\\"macedonia\\\": \\\"🇲🇰\\\", \\\"mali\\\": \\\"🇲🇱\\\", \\\"myanmar\\\": \\\"🇲🇲\\\", \\\"mongolia\\\": \\\"🇲🇳\\\", \\\"macau\\\": \\\"🇲🇴\\\", \\\"northern_mariana_islands\\\": \\\"🇲🇵\\\", \\\"martinique\\\": \\\"🇲🇶\\\", \\\"mauritania\\\": \\\"🇲🇷\\\", \\\"montserrat\\\": \\\"🇲🇸\\\", \\\"malta\\\": \\\"🇲🇹\\\", \\\"mauritius\\\": \\\"🇲🇺\\\", \\\"maldives\\\": \\\"🇲🇻\\\", \\\"malawi\\\": \\\"🇲🇼\\\", \\\"mexico\\\": \\\"🇲🇽\\\", \\\"malaysia\\\": \\\"🇲🇾\\\", \\\"mozambique\\\": \\\"🇲🇿\\\", \\\"namibia\\\": \\\"🇳🇦\\\", \\\"new_caledonia\\\": \\\"🇳🇨\\\", \\\"niger\\\": \\\"🇳🇪\\\", \\\"norfolk_island\\\": \\\"🇳🇫\\\", \\\"nigeria\\\": \\\"🇳🇬\\\", \\\"nicaragua\\\": \\\"🇳🇮\\\", \\\"netherlands\\\": \\\"🇳🇱\\\", \\\"norway\\\": \\\"🇳🇴\\\", \\\"nepal\\\": \\\"🇳🇵\\\", \\\"nauru\\\": \\\"🇳🇷\\\", \\\"niue\\\": \\\"🇳🇺\\\", \\\"new_zealand\\\": \\\"🇳🇿\\\", \\\"oman\\\": \\\"🇴🇲\\\", \\\"panama\\\": \\\"🇵🇦\\\", \\\"peru\\\": \\\"🇵🇪\\\", \\\"french_polynesia\\\": \\\"🇵🇫\\\", \\\"papua_new_guinea\\\": \\\"🇵🇬\\\", \\\"philippines\\\": \\\"🇵🇭\\\", \\\"pakistan\\\": \\\"🇵🇰\\\", \\\"poland\\\": \\\"🇵🇱\\\", \\\"st_pierre_miquelon\\\": \\\"🇵🇲\\\", \\\"pitcairn_islands\\\": \\\"🇵🇳\\\", \\\"puerto_rico\\\": \\\"🇵🇷\\\", \\\"palestinian_territories\\\": \\\"🇵🇸\\\", \\\"portugal\\\": \\\"🇵🇹\\\", \\\"palau\\\": \\\"🇵🇼\\\", \\\"paraguay\\\": \\\"🇵🇾\\\", \\\"qatar\\\": \\\"🇶🇦\\\", \\\"reunion\\\": \\\"🇷🇪\\\", \\\"romania\\\": \\\"🇷🇴\\\", \\\"serbia\\\": \\\"🇷🇸\\\", \\\"ru\\\": \\\"🇷🇺\\\", \\\"rwanda\\\": \\\"🇷🇼\\\", \\\"saudi_arabia\\\": \\\"🇸🇦\\\", \\\"solomon_islands\\\": \\\"🇸🇧\\\", \\\"seychelles\\\": \\\"🇸🇨\\\", \\\"sudan\\\": \\\"🇸🇩\\\", \\\"sweden\\\": \\\"🇸🇪\\\", \\\"singapore\\\": \\\"🇸🇬\\\", \\\"st_helena\\\": \\\"🇸🇭\\\", \\\"slovenia\\\": \\\"🇸🇮\\\", \\\"svalbard_jan_mayen\\\": \\\"🇸🇯\\\", \\\"slovakia\\\": \\\"🇸🇰\\\", \\\"sierra_leone\\\": \\\"🇸🇱\\\", \\\"san_marino\\\": \\\"🇸🇲\\\", \\\"senegal\\\": \\\"🇸🇳\\\", \\\"somalia\\\": \\\"🇸🇴\\\", \\\"suriname\\\": \\\"🇸🇷\\\", \\\"south_sudan\\\": \\\"🇸🇸\\\", \\\"sao_tome_principe\\\": \\\"🇸🇹\\\", \\\"el_salvador\\\": \\\"🇸🇻\\\", \\\"sint_maarten\\\": \\\"🇸🇽\\\", \\\"syria\\\": \\\"🇸🇾\\\", \\\"swaziland\\\": \\\"🇸🇿\\\", \\\"tristan_da_cunha\\\": \\\"🇹🇦\\\", \\\"turks_caicos_islands\\\": \\\"🇹🇨\\\", \\\"chad\\\": \\\"🇹🇩\\\", \\\"french_southern_territories\\\": \\\"🇹🇫\\\", \\\"togo\\\": \\\"🇹🇬\\\", \\\"thailand\\\": \\\"🇹🇭\\\", \\\"tajikistan\\\": \\\"🇹🇯\\\", \\\"tokelau\\\": \\\"🇹🇰\\\", \\\"timor_leste\\\": \\\"🇹🇱\\\", \\\"turkmenistan\\\": \\\"🇹🇲\\\", \\\"tunisia\\\": \\\"🇹🇳\\\", \\\"tonga\\\": \\\"🇹🇴\\\", \\\"tr\\\": \\\"🇹🇷\\\", \\\"trinidad_tobago\\\": \\\"🇹🇹\\\", \\\"tuvalu\\\": \\\"🇹🇻\\\", \\\"taiwan\\\": \\\"🇹🇼\\\", \\\"tanzania\\\": \\\"🇹🇿\\\", \\\"ukraine\\\": \\\"🇺🇦\\\", \\\"uganda\\\": \\\"🇺🇬\\\", \\\"us_outlying_islands\\\": \\\"🇺🇲\\\", \\\"united_nations\\\": \\\"🇺🇳\\\", \\\"us\\\": \\\"🇺🇸\\\", \\\"uruguay\\\": \\\"🇺🇾\\\", \\\"uzbekistan\\\": \\\"🇺🇿\\\", \\\"vatican_city\\\": \\\"🇻🇦\\\", \\\"st_vincent_grenadines\\\": \\\"🇻🇨\\\", \\\"venezuela\\\": \\\"🇻🇪\\\", \\\"british_virgin_islands\\\": \\\"🇻🇬\\\", \\\"us_virgin_islands\\\": \\\"🇻🇮\\\", \\\"vietnam\\\": \\\"🇻🇳\\\", \\\"vanuatu\\\": \\\"🇻🇺\\\", \\\"wallis_futuna\\\": \\\"🇼🇫\\\", \\\"samoa\\\": \\\"🇼🇸\\\", \\\"kosovo\\\": \\\"🇽🇰\\\", \\\"yemen\\\": \\\"🇾🇪\\\", \\\"mayotte\\\": \\\"🇾🇹\\\", \\\"south_africa\\\": \\\"🇿🇦\\\", \\\"zambia\\\": \\\"🇿🇲\\\", \\\"zimbabwe\\\": \\\"🇿🇼\\\", \\\"england\\\": \\\"🏴󠁧󠁢󠁥󠁮󠁧󠁿\\\", \\\"scotland\\\": \\\"🏴󠁧󠁢󠁳󠁣󠁴󠁿\\\", \\\"wales\\\": \\\"🏴󠁧󠁢󠁷󠁬󠁳󠁿\\\" } \"]},\"26\":{\"h\":\"Cloud技术选型\"},\"27\":{\"h\":\"服务注册中心\",\"t\":[\"​ 原理是将部署服务的机器地址记录到注册中心，服务消费者在有需求的时候，只需要查询注册中心，输入提供的服务名，就可以得到地址，从而发起调用。\",\"主要有三种角色：服务提供者（RPC Server）、服务消费者（RPC Client）和服务注册中心（Registry）\",\"​ Eureka：Spring Cloud原生自带（停更）\",\"​ Zookeeper：Eureka替换，旧技术\",\"​ Consul：go语言写的\",\"​ Nacos：百万级客户使用，完美替换Eureka（推荐使用）\",\"Nacos\",\"Eureka\",\"Cosul\",\"Zookeeper\",\"一致性协议\",\"CP+AP\",\"AP\",\"CP\",\"CP\",\"健康检查\",\"TCP/HTTP/MYSQL/Client Beat\",\"Client Beat\",\"TCP/HTTP/gRPC/Cmd\",\"Keep Alive\",\"负载均衡策略\",\"权重/metadata/Selector\",\"Ribbon\",\"Fabio\",\"雪崩保护\",\"有\",\"有\",\"无\",\"无\",\"自动注销实例\",\"支持\",\"支持\",\"支持\",\"支持\",\"访问协议\",\"HTTP/DNS\",\"HTTP\",\"HTTP/DNS\",\"TCP\",\"监听支持\",\"支持\",\"支持\",\"支持\",\"支持\",\"多数据中心\",\"支持\",\"支持\",\"支持\",\"不支持\",\"跨注册中心同步\",\"支持\",\"不支持\",\"支持\",\"不支持\",\"SpringCloud集成\",\"支持\",\"支持\",\"支持\",\"支持\",\"Dubbo集成\",\"支持\",\"不支持\",\"支持\",\"支持\",\"K8S集成\",\"支持\",\"不支持\",\"支持\",\"不支持\",\"组件名\",\"语言\",\"CAP\",\"服务健康检查\",\"对外暴露接口\",\"Spring Cloud集成\",\"Eureka\",\"Java\",\"AP\",\"可配支持\",\"HTTP\",\"已集成\",\"Consul\",\"Go\",\"CP\",\"支持\",\"HTTP/DNS\",\"已集成\",\"Zookeeper\",\"Java\",\"CP\",\"支持\",\"客户端\",\"已集成\",\"Nacos\",\"Java\",\"AP&CP\",\"支持\",\"已集成\",\"C:Consistency（强一致性）\",\"A:Availability（可用性）\",\"P:Partition tolerance（分区容错性）\",\"CAP理论关注粒度是数据，而不是整体系统设计的策略\"]},\"28\":{\"h\":\"服务调用\",\"t\":[\"服务与服务之间的调用\",\"​ Ribbon：继续使用（停止更新，进入维护阶段）\",\"​ LoadBalancer：慢慢替换Ribbon\",\"​ Feign：X\",\"​ OpenFeign：Spring公司自己开发的\",\"​ Dubbo：RPC调用\"]},\"29\":{\"h\":\"服务熔断与降级\",\"t\":[\"服务熔断 服务熔断的作用类似于我们家用的保险丝，当某服务出现不可用或响应超时的情况时，为了防止整个系统出现雪崩，暂时停止对该服务的调用。\",\"服务降级 服务降级是从整个系统的负荷情况出发和考虑的，对某些负荷会比较高的情况，为了预防某些功能（业务场景）出现负荷过载或者响应慢的情况，在其内部暂时舍弃对一些非核心的接口和数据的请求，而直接返回一个提前准备好的fallback（退路）错误处理信息。这样，虽然提供的是一个有损的服务，但却保证了整个系统的稳定性和可用性。\",\"​ Hystrix：企业大规模使用，官网不推荐\",\"​ Resilience4j：国外大规模使用，替换Hystrix\",\"​ Sentienl：国内推荐Sentienl，替换Hystrix\",\"Sentienl\",\"Hystrix\",\"Resilience4j\",\"隔离策略\",\"信号量隔离（并发线程数限流）\",\"线程池隔离/信号量隔离\",\"信号量隔离\",\"熔断降级策略\",\"基于响应时间、异常比率、异常数\",\"基于异常比率\",\"基于异常比率、响应时间\",\"实时统计实现\",\"滑动窗口（LeapArray）\",\"滑动窗口（基于 RxJava）\",\"Ring Bit Buffer\",\"动态规则配置\",\"支持多种数据源\",\"支持多种数据源\",\"有限支持\",\"扩展性\",\"多个扩展点\",\"插件的形式\",\"接口的形式\",\"基于注解的支持\",\"支持\",\"支持\",\"支持\",\"限流\",\"基于 QPS，支持基于调用关系的限流\",\"有限的支持\",\"Rate Limiter\",\"流量整形\",\"支持预热模式、匀速器模式、预热排队模式\",\"不支持\",\"简单的 Rate Limiter 模式\",\"系统自适应保护\",\"支持\",\"不支持\",\"不支持\",\"控制台\",\"提供开箱即用的控制台，可配置规则、查看秒级监控、机器发现等\",\"简单的监控查看\",\"不提供控制台，可对接其它监控系统\",\"优缺点 Sentinel 轻量级，核心库无多余依赖，性能损耗小。 方便接入，开源生态广泛。Sentinel 对 Dubbo、Spring Cloud、Web Servlet、gRPC 等常用框架提供适配模块，只需引入相应依赖并简单配置即可快速接入；同时针对自定义的场景 Sentinel 还提供低侵入性的注解资源定义方式，方便自定义接入。 丰富的流量控制场景。Sentinel 承接了阿里巴巴近 10 年的双十一大促流量的核心场景，流控维度包括流控指标、流控效果（塑形）、调用关系、热点、集群等各种维度，针对系统维度也提供自适应的保护机制。 易用的控制台，提供实时监控、机器发现、规则管理等能力。 完善的扩展性设计，提供多样化的 SPI 接口，方便用户根据需求给 Sentinel 添加自定义的逻辑。\",\"Resilience4j Resilience4j 是比较轻量的库，在较小较新的项目中使用还是比较方便的，但是 Resilience4j 只包含限流降级的基本场景，对于非常复杂的企业级服务架构可能无法很好地 cover 住；同时 Resilience4j 缺乏生产级别的配套设施（如提供规则管理和实时监控能力的控制台）。\",\"Hystrix\",\"优点\",\"熔断与恢复:依赖服务A异常时切换至备份服务B，A恢复后自动回切。\",\"异常记录:触发熔断原因可记录日志\",\"流量控制:可限制依赖服务A被调用频率\",\"实时监控:实时监控服务A状态(平均响应时间,调用次数等)\",\"缺点\",\"代码复杂度:引入额外中间件，增加编码复杂度\",\"性能损耗:官方文档标明会损耗1%~5%的服务器性能(数据统计与线程池管理)\"]},\"30\":{\"h\":\"服务网关\",\"t\":[\"服务网关=路由转发 + 过滤器\",\"1、路由转发：接收一切外界请求，转发到后端的微服务上去；\",\"2、过滤器：在服务网关中可以完成一系列的横切功能，例如权限校验、限流以及监控等\",\"​ Zuul：公司分列\",\"​ Zuul2：胎死腹中\",\"​ gateway：spring推荐\",\"Zuul：\",\"使用的是阻塞式的 API，不支持长连接，比如 websockets。\",\"底层是servlet，Zuul处理的是http请求\",\"没有提供异步支持，流控等均由hystrix支持。\"]},\"31\":{\"h\":\"服务配置\",\"t\":[\"为系统中的基础设施和微服务应用提供集中化的外部配置支持\",\"​ spring cloud config：不在使用\",\"​ apollo\",\"​ Nacos：推荐\",\"阿里的nacos : 性能最好\",\"他同时支持AP和CP模式,他根据服务注册选择临时和永久来决定走AP模式还是CP模式,\",\"他这里支持CP模式对于我的理解来说,应该是为了配置中心集群,因为nacos可以同时作为注册中心和配置中心,\",\"因为他的配置中心信息是保存在nacos里面的,假如因为nacos其中一台挂掉后,还没有同步配置信息,就可能发生配置不一致的情况.,\",\"配置中心的配置变更是服务端有监听器,配置中心发生配置变化,然后服务端会监听到配置发生变化,从而做出改变\",\"eureka+spring cloud config:\",\"性能也不差,对于服务数量小于上千台来说,性能没有问题\",\"eureka: 可以做注册中心,完全AP,支持注册中心之间的节点复制,同时支持服务端同时注册多个注册中心节点, 所以不存节点信息不一致的情况\",\"config: 单独服务,是从git仓库拉取配置信息,然后服务端从config服务里面拉取配置信息缓存到本地仓库， 这里配置的变更比较麻烦,他需要结合bus组件,同时约束了只能用rabbitmq和kafka来进行通知服务端进行配置变更。\",\"但是保证了数据的一致性,因为他的配置信息在git仓库上,git仓库只有一个,就会数据一致\"]},\"32\":{\"h\":\"服务总线\",\"t\":[\"在微服务架构的系统中，通常会使用轻量级的消息代理来构建一个共用的消息主题，并让系统中所有微服务实例都连接上来，由于该主题中产生的消息会被所有实例监听和消费，所以称它为消息总线。在总线上的各个实例，都可以方便地广播一些需要让其他连接在该主题上的实例都知道的消息。\",\"​ Bus：不推荐\",\"​ Nacos：推荐\"]},\"33\":{\"h\":\"链路追踪\",\"t\":[\"​ sleuth\",\"​ skywalking\"]},\"34\":{\"h\":\"鉴权\",\"t\":[\"spring security\",\"JWT\"]},\"35\":{\"h\":\"分布式事务\",\"t\":[\"seata\"]},\"36\":{\"h\":\"服务监控\",\"t\":[\"Spring Admin\",\"普罗米修斯\"]},\"37\":{\"h\":\"日志收集\",\"t\":[\"logback + ELK\",\"洛基\"]},\"38\":{\"h\":\"部署\",\"t\":[\"Docker Swarm\",\"k8s\",\"spring web flux\",\"r2dbc\"]},\"39\":{\"h\":\"\"},\"40\":{\"h\":\"项目部署\"},\"41\":{\"h\":\"问题\"},\"42\":{\"h\":\"Docker 容器日期与宿主主机时间不一致解决\",\"t\":[\"失败： /etc/localtime:/etc/localtime:ro 成功： - /etc/localtime:/etc/localtime - /etc/timezone:/etc/timezone \",\"!> 第一种仍然存在时区问题，第二种最终解决该问题。\"]},\"43\":{\"h\":\"已非 jar 包形式部署 Spring boot 项目挂载项目\",\"t\":[\"前情提要： \",\"非 jar 形式通过脚本启动项目\",\" #!/bin/bash APP_ENTRY=${app.entry} DIR=$( cd \\\"$( dirname \\\"${BASH_SOURCE[0]}\\\" )\\\" && pwd ) BASE=$DIR/. CP=$BASE/classes:$BASE/lib/* JAVA_OPTS=\\\"$JAVA_OPTS -server -Xms512m -Xmx1g\\\" java $JAVA_OPTS -cp \\\"$CP\\\" $APP_ENTRY \",\"解决： \",\"换成 jar 包执行: \",\"若是通过执行 jar 包启动项目然后挂载外部配置文件就需要提前单独准备好配置文件\",\" FROM java:8 RUN mkdir -p /opt/erp VOLUME /tmp ADD bill.api-1.0.0.jar /opt/erp/app.jar COPY /classes /opt/erp/conf WORKDIR /opt/erp RUN bash -c 'touch /opt/erp/app.jar' ENTRYPOINT [\\\"java\\\",\\\"-Djava.security.egd=file:/dev/./urandom\\\",\\\"-jar\\\",\\\"/opt/erp/app.jar\\\"] \",\"直接解压 zip 包然后直接执行脚本启动 \",\"CMD 可灵活调整，这里针对性选择删除 com 以及 static 等静态文件，执行解压操作仅会对不存在的进行补充。\",\" FROM java:8 MAINTAINER zJiaC RUN mkdir -p /opt/erp ADD *.zip /opt/api.zip WORKDIR /opt/api CMD rm -rf /opt/api/classes/com && rm -rf /opt/api/classes/static/*.json && rm -rf /opt/api/classes/static/*.jsonp && rm -rf /opt/api/classes/static/*.html && rm -rf /opt/api/classes/static/classic && rm -rf /opt/api/classes/static/modern && unzip -n /opt/api.zip -d /opt/api && chmod +x /opt/api/run && ./run \"]},\"44\":{\"h\":\"收藏网址\",\"t\":[\"Docker-从入门到实践\",\"从 Docker 到 Kubernetes 进阶\"]},\"45\":{\"c\":[\"运维\"]},\"46\":{\"c\":[\"Docker\"]},\"47\":{\"h\":\"磁盘 IO 测试工具\"},\"48\":{\"h\":\"前情提要\",\"t\":[\"Rancher 部署 ES 发现客户提供的挂载卷比较慢，因而采取 FIO 测试得到读写数据\"]},\"49\":{\"h\":\"前期准备\",\"t\":[\"# ubuntu 环境可以直接装,软不存在软件包则执行 apt-get update 更新。 apt-get -y install fio \"]},\"50\":{\"h\":\"具体命令\",\"t\":[\"顺序读 fio -filename=/usr/share/elasticsearch/data/sda -direct=1 -iodepth 1 -thread -rw=read -ioengine=psync -bs=16k -size=200G -numjobs=30 -runtime=1000 -group_reporting -name=mytest 顺序写 fio -filename=/usr/share/elasticsearch/data/sda -direct=1 -iodepth 1 -thread -rw=write -ioengine=psync -bs=16k -size=200G -numjobs=30 -runtime=1000 -group_reporting -name=mytest 随机读 fio -filename=/usr/share/elasticsearch/data/sda -direct=1 -iodepth 1 -thread -rw=randread -ioengine=psync -bs=16k -size=200G -numjobs=30 -runtime=1000 -group_reporting -name=mytest 随机写 fio -filename=/usr/share/elasticsearch/data/sda -direct=1 -iodepth 1 -thread -rw=randwrite -ioengine=psync -bs=16k -size=200G -numjobs=30 -runtime=1000 -group_reporting -name=mytest 混合随机读写 fio -filename=/usr/share/elasticsearch/data/sda -direct=1 -iodepth 1 -thread -rw=randrw -rwmixread=70 -ioengine=psync -bs=16k -size=200G -numjobs=30 -runtime=100 -group_reporting -name=mytest -ioscheduler=noop \"]},\"51\":{\"h\":\"说明\",\"t\":[\"filename=/dev/sdb1 测试文件名称，通常选择需要测试的盘的data目录。 direct=1 测试过程绕过机器自带的buffer。使测试结果更真实。 rw=randwrite 测试随机写的I/O rw=randrw 测试随机写和读的I/O bs=16k 单次io的块文件大小为16k bsrange=512-2048 同上，提定数据块的大小范围 size=5g 本次的测试文件大小为5g，以每次4k的io进行测试。 numjobs=30 本次的测试线程为30. runtime=1000 测试时间为1000秒，如果不写则一直将5g文件分4k每次写完为止。 ioengine=psync io引擎使用pync方式 rwmixwrite=30 在混合读写的模式下，写占30% group_reporting 关于显示结果的，汇总每个进程的信息。 \"]},\"52\":{\"c\":[\"运维\"]},\"53\":{\"c\":[\"FIO\",\"IO\"]},\"54\":{\"h\":\"Github-Actions 部署博客\",\"t\":[\"官方主题部署项目指南\",\"调整 \",\"我发布到不同的仓库，需要用到私钥，私钥用 GitHub Secret 来管理，发布同仓库可以去掉这个 (ssh-key) 配置。\",\"name: 部署文档 on: push: branches: # 确保这是你正在使用的分支名称 - master jobs: deploy-tech-arch-doc: runs-on: ubuntu-latest steps: - name: Checkout uses: actions/checkout@v3 with: fetch-depth: 0 - name: Setup Node.js uses: actions/setup-node@v3 with: node-version: 16 cache: yarn - name: Build Docs env: NODE_OPTIONS: --max_old_space_size=8192 run: yarn install && yarn run build - name: Deploy uses: JamesIves/github-pages-deploy-action@v4 with: # 这是文档部署到的分支名称 branch: master folder: docs/.vuepress/dist ssh-key: ${{ secrets.Secret }} # 我发布到不同的仓库，需要用到私钥，私钥用 GitHub Secret 来管理，发布同仓库可以去掉这个配置 repository-name: user/tech-arch-doc \"]},\"55\":{\"c\":[\"编程\"]},\"56\":{\"c\":[\"Github\"]},\"57\":{\"h\":\"linux经验汇总\"},\"58\":{\"h\":\"命令\"},\"59\":{\"h\":\"根据日期查询并复制到新路径\",\"t\":[\"find -newermt 2021-01-01 | cpio -dp /tmp/back \",\"!> Windows 使用 xcopy 可达到同样效果\"]},\"60\":{\"h\":\"常用\",\"t\":[\"1、top：查看内存/显示系统当前进程信息 2、df -h：查看磁盘储存状况 3、iotop：查看IO读写（yum install iotop安装） 4、iotop -o：直接查看比较高的磁盘读写程序 5、netstat -tunlp | grep 端口号：查看端口号占用情况（1） 6、lsof -i:端口号：查看端口号占用情况（2） 7、uptime：查看报告系统运行时长及平均负载 8、ps aux：查看进程 基础 1、查看目录与文件：ls ls -la：显示当前目录下所有文件的详细信息 2、切换目录：cd cd /home 进入 ‘/ home’ 目录 cd … 返回上一级目录 cd …/… 返回上两级目录 3、显示当前目录：pwd pwd 4、创建空文件：touch touch desc.txt：在当前目录下创建文件desc.txt 5、创建目录：mkdir mkdir test：在当前目录下创建test目录 mkdir -p /opt/test/img：在/opt/test目录下创建目录img，若无test目录，先创建test目录 6、查看文件内容：cat cat desc.txt：查看desc.txt的内容 7、分页查看文件内容：more more desc.txt：分页查看desc.txt的内容 8、查看文件尾内容：tail tail -100 desc.txt：查看desc.txt的最后100行内容 9、拷贝：cp cp desc.txt /mnt/：拷贝desc.txt到/mnt目录下 cp -r test /mnt/：拷贝test目录到/mnt目录下 10、剪切或改名： mv desc.txt /mnt/：剪切文件desc.txt到目录/mnt下 mv 原名 新名 11、删除：rm rm -rf test：删除test目录，-r递归删除，-f强制删除。危险操作，务必小心，切记！ 12、搜索文件：find find /opt -name ‘*.txt’：在opt目录下查找以.txt结尾的文件 13、显示或配置网络设备：ifconfig ifconfig：显示网络设备情况 14、显示网络相关信息：netstat netstat -a：列出所有端口 netstat -tunlp | grep 端口号：查看进程端口号 15、显示进程状态：ps ps -ef：显示当前所有进程 ps-ef | grep java：显示当前所有java相关进程 16、查看目录使用情况：du du -h /opt/test：查看/opt/test目录的磁盘使用情况 17、查看磁盘空间使用情况：df df -h：查看磁盘空间使用情况 18、显示系统当前进程信息：top top：显示系统当前进程信息 19、杀死进程：kill kill -s 9 27810：杀死进程号为27810的进程，强制终止，系统资源无法回收 20、压缩和解压：tar tar -zcvf test.tar.gz ./test：打包test目录为test.tar.gz文件，-z表示用gzip压缩 tar -zxvf test.tar.gz：解压test.tar.gz文件 21、改变文件或目录的拥有者和组：chown chown nginx:nginx desc.txt：变更文件desc.txt的拥有者为nginx，用户组为nginx chown -R nginx:nginx test：变更test及目录下所有文件的拥有者为nginx，用户组为nginx 22、改变文件或目录的访问权限：chmod chmod u+x test.sh：权限范围：u(拥有者)g(郡组)o(其它用户)， 权限代号：r(读权限/4)w(写权限/2)x(执行权限/1)#给文件拥有者增加test.sh的执行权限 chmod u+x -R test：给文件拥有者增加test目录及其下所有文件的执行权限 23、文本编辑：vim vim三种模式：命令模式，插入模式，编辑模式。使用ESC或i或：来切换模式。 命令模式下:q退出 :q!强制退出 :wq!保存退出 :set number显示行号 /java在文档中查找java yy复制 p粘贴 vim desc.txt：编辑desc.txt文件 24、关机或重启：shutdown shutdown -h now：立刻关机 shutdown -r -t 60：60秒后重启 shutdown -r now：重启(1) reboot：重启(2) 25、帮助命令：man man ls：查看ls命令的帮助文档 help 快捷键 Ctrl + a 光标到开头 Ctrl + c 中断当前程序 Ctrl + d 退出当前窗口或当前用户 Ctrl + e 光标到结尾 Ctrl + l 清屏 相当与clear Ctrl + u 剪切、删除（光标以前的）内容- - Ctrl + k 剪切、删除（光标以后的）内容- - Ctrl + r 查找（最近用过的命令） tab 所有路径以及补全命令 Ctrl+shift+c 命令行复制内容 Ctrl+shift+v 命令行粘贴内容 Ctrl + q 取消屏幕锁定 Ctrl + s 执行屏幕锁定 \"]},\"61\":{\"h\":\"收藏网址\",\"t\":[\"linux 命令搜索引擎\",\"Vim 命令速查表\"]},\"62\":{\"c\":[\"运维\"]},\"63\":{\"c\":[\"Linux\",\"Vim\"]},\"64\":{\"h\":\"Docker Desktop(WSL2) 修改镜像存储位置\"},\"65\":{\"h\":\"问题\",\"t\":[\"默认存储在C盘占空间\"]},\"66\":{\"h\":\"解决\",\"t\":[\"docker-desktop 是存放程序的，docker-desktop-data 是存放镜像的，这两个 wsl 子系统都是默认放在系统盘的。\",\"导出wsl子系统镜像:\",\"wsl --export docker-desktop docker-desktop.tar wsl --export docker-desktop-data docker-desktop-data.tar \",\"删除现有的 wsl 子系统：\",\"wsl --unregister docker-desktop wsl --unregister docker-desktop-data \",\"重新创建 wsl 子系统：\",\"wsl --import docker-desktop d:\\\\your-install-path docker-desktop.tar wsl --import docker-desktop-data d:\\\\your-install-path docker-desktop-data.tar \"]},\"67\":{\"c\":[\"运维\"]},\"68\":{\"c\":[\"Docker\",\"WSL2\"]},\"69\":{\"h\":\"\"},\"70\":{\"h\":\"java webservice如何配置安全性问题\",\"t\":[\"Web Service也叫XML Web Service WebService是一种可以接收从Internet或者Intranet上的其它系统中传递过来的请求，轻量级的独立的通讯技术。是:通过SOAP在Web上提供的软件服务，使用WSDL文件进行说明，并通过UDDI进行注册。\",\"XML：(Extensible Markup Language)扩展型可标记语言。面向短期的临时数据处理、面向万维网络，是Soap的基础。\",\"Soap：(Simple Object Access Protocol)简单对象存取协议。是XML Web Service 的通信协议。当用户通过UDDI找到你的WSDL描述文档后，他通过可以SOAP调用你建立的Web服务中的一个或多个操作。SOAP是XML文档形式的调用方法的规范，它可以支持不同的底层接口，像HTTP(S)或者SMTP。\",\"WSDL：(Web Services Description Language) WSDL 文件是一个 XML 文档，用于说明一组 SOAP 消息以及如何交换这些消息。大多数情况下由软件自动生成和使用。\",\"UDDI (Universal Description, Discovery, and Integration) 是一个主要针对Web服务供应商和使用者的新项目。在用户能够调用Web服务之前，必须确定这个服务内包含哪些商务方法，找到被调用的接口定义，还要在服务端来编制软件，UDDI是一种根据描述文档来引导系统查找相应服务的机制。UDDI利用SOAP消息机制（标准的XML/HTTP）来发布，编辑，浏览以及查找注册信息。它采用XML格式来封装各种不同类型的数据，并且发送到注册中心或者由注册中心来返回需要的数据。\",\"对接接口时抛出wsse的安全问题 解决的办法 java使用Message Handler修改WebService客户端的SOAP头\",\"在调用webService时，有时候需要在SOAP头中插入信息，比如鉴权信息。\",\"下面的例子演示如何设置给WebService设置授权信息。\",\"首先我们需要实现SOAPHandler接口的类，这个类决定了要调用那些Handler，以什么顺序调用。\",\"最后我们需要给WebService的客户端添加HandlerResolver类实例.\",\"默认情况下SOAP头是空的：\",\"<S:Header> <wsse:Security xmlns:wsse=\\\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd\\\"> <wsse:UsernameToken xmlns:wsu=\\\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\\\"> <wsse:Username>TestUser</wsse:Username> <wsse:Password Type=\\\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText\\\">TestPassword</wsse:Password> </wsse:UsernameToken> </wsse:Security> </S:Header> 如下是SOAPHandler<SOAPMessageContext>的实现，这里有好多方法可以实现，但在这里我们仅需要实现handleMessage()方法。 \",\"package cn.outofmemory.ws.example; import java.util.Set; import javax.xml.namespace.QName; import javax.xml.soap.SOAPElement; import javax.xml.soap.SOAPEnvelope; import javax.xml.soap.SOAPHeader; import javax.xml.soap.SOAPMessage; import javax.xml.ws.handler.MessageContext; import javax.xml.ws.handler.soap.SOAPHandler; import javax.xml.ws.handler.soap.SOAPMessageContext; /** * * @author outofmemory.cn */ public class HeaderHandler implements SOAPHandler<SOAPMessageContext> { public boolean handleMessage(SOAPMessageContext smc) { Boolean outboundProperty = (Boolean) smc.get(MessageContext.MESSAGE_OUTBOUND_PROPERTY); if (outboundProperty.booleanValue()) { SOAPMessage message = smc.getMessage(); try { SOAPEnvelope envelope = smc.getMessage().getSOAPPart().getEnvelope(); SOAPHeader header = envelope.addHeader(); SOAPElement security = header.addChildElement(\\\"Security\\\", \\\"wsse\\\", \\\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd\\\"); SOAPElement usernameToken = security.addChildElement(\\\"UsernameToken\\\", \\\"wsse\\\"); usernameToken.addAttribute(new QName(\\\"xmlns:wsu\\\"), \\\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\\\"); SOAPElement username = usernameToken.addChildElement(\\\"Username\\\", \\\"wsse\\\"); username.addTextNode(\\\"TestUser\\\"); SOAPElement password = usernameToken.addChildElement(\\\"Password\\\", \\\"wsse\\\"); password.setAttribute(\\\"Type\\\", \\\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText\\\"); password.addTextNode(\\\"TestPassword\\\"); //Print out the outbound SOAP message to System.out message.writeTo(System.out); System.out.println(\\\"\\\"); } catch (Exception e) { e.printStackTrace(); } } else { try { //This handler does nothing with the response from the Web Service so //we just print out the SOAP message. SOAPMessage message = smc.getMessage(); message.writeTo(System.out); System.out.println(\\\"\\\"); } catch (Exception ex) { ex.printStackTrace(); } } return outboundProperty; } public Set getHeaders() { //throw new UnsupportedOperationException(\\\"Not supported yet.\\\"); return null; } public boolean handleFault(SOAPMessageContext context) { //throw new UnsupportedOperationException(\\\"Not supported yet.\\\"); return true; } public void close(MessageContext context) { //throw new UnsupportedOperationException(\\\"Not supported yet.\\\"); } } 如下是HandlerResolver的实现类定义： package cn.outofmemory.ws.example; import java.util.ArrayList; import java.util.List; import javax.xml.ws.handler.Handler; import javax.xml.ws.handler.HandlerResolver; import javax.xml.ws.handler.PortInfo; /** * * @author outofmemory.cn */ public class HeaderHandlerResolver implements HandlerResolver { public List<Handler> getHandlerChain(PortInfo portInfo) { List<Handler> handlerChain = new ArrayList<Handler>(); HeaderHandler hh = new HeaderHandler(); handlerChain.add(hh); return handlerChain; } } 下面是调用webService的代码： JavadbWebServiceService service = new JavadbWebServiceService(); HeaderHandlerResolver handlerResolver = new HeaderHandlerResolver(); service.setHandlerResolver(handlerResolver); JavadbWebService port = service.getJavadbWebServicePort(); //调用web service String currentTime = port.getTime(); System.out.println(\\\"Current time is: \\\" + currentTime); \",\"若是用vpn调试则需使用 -Djava.net.preferIPv4Stack=true\",\"java自带工具，可以使用命令行wsimport构建WebService客户端,需要注意的一点生成代码时需要指定编码格式，否则获取数据会出现乱码导致无法解析.\"]},\"71\":{\"c\":[\"问题\",\"编程\"]},\"72\":{\"c\":[\"Java\"]},\"73\":{\"h\":\"Spring boot项目出现跨域问题\",\"t\":[\"@Configuration public class WebMvcConfigurer extends WebMvcConfigurerAdapter { @Override public void addCorsMappings(CorsRegistry registry) { registry.addMapping(\\\"/**\\\") .allowedHeaders(\\\"*\\\") .allowedMethods(\\\"*\\\") .allowedOrigins(\\\"*\\\"); } } \",\"这是配置跨域的一种方法，但出现了一种情况，定义的拦截器HandlerInterceptorAdapter preHandle方法抛出的错会有跨域问题。\",\"SpringMVC开启CORS支持\",\"[SpringMVC 与权限拦截器冲突导致的Cors跨域设置失效问题] (https://segmentfault.com/a/1190000010348077)\",\"@Configuration public class WebMvcConfigurer extends WebMvcConfigurerAdapter { @Override public void addCorsMappings(CorsRegistry registry) { registry.addMapping(\\\"/**\\\") .allowedHeaders(\\\"*\\\") .allowedMethods(\\\"*\\\") .allowedOrigins(\\\"*\\\"); } @Bean public CorsFilter corsFilter() { final UrlBasedCorsConfigurationSource urlBasedCorsConfigurationSource = new UrlBasedCorsConfigurationSource(); final CorsConfiguration corsConfiguration = new CorsConfiguration(); corsConfiguration.setAllowCredentials(true); corsConfiguration.addAllowedOrigin(\\\"*\\\"); corsConfiguration.addAllowedHeader(\\\"*\\\"); corsConfiguration.addAllowedMethod(\\\"*\\\"); urlBasedCorsConfigurationSource.registerCorsConfiguration(\\\"/**\\\", corsConfiguration); return new CorsFilter(urlBasedCorsConfigurationSource); } } \"]},\"74\":{\"c\":[\"问题\",\"编程\"]},\"75\":{\"c\":[\"Java\",\"Spring\"]},\"76\":{\"h\":\"解决Spring boot项目quartz的job没法使用注解方式实例化对象\",\"t\":[\"使用自定义Job Factory，用于Spring注入\",\"@Component public class CustomJobFactory extends AdaptableJobFactory { @Autowired private AutowireCapableBeanFactory capableBeanFactory; @Override protected Object createJobInstance(TriggerFiredBundle bundle) throws Exception { // 调用父类的方法 Object jobInstance = super.createJobInstance(bundle); // 进行注入 capableBeanFactory.autowireBean(jobInstance); return jobInstance; } } @Configuration public class QuartzConfig { ... @Bean public SchedulerFactoryBean schedulerFactoryBean() throws IOException { schedulerFactory = new SchedulerFactoryBean(); schedulerFactory.setOverwriteExistingJobs(true); // 延时启动 schedulerFactory.setStartupDelay(20); // 加载quartz数据源配置 schedulerFactory.setQuartzProperties(quartzProperties()); // 自定义Job Factory，用于Spring注入 schedulerFactory.setJobFactory(customJobFactory); return schedulerFactory; } } \"]},\"77\":{\"c\":[\"问题\",\"编程\"]},\"78\":{\"c\":[\"Java\",\"Spring boot\"]},\"79\":{\"h\":\"解决spring boot项目多个类implements于同一个接口类，使用注解需要多个@Qualifier\",\"t\":[\"业务场景 搭建DI系统定时任务调度管理使用的是Quartz。 首先通过一个主定时任务去触发其它任务的调度处理。最终是触发BaseTask的execute方法。BaseTask继承Job。 然后execute方法里通过ThirdBusinessFactory工厂类去获取相应参数获取IThirdBll接口的实例。\",\"问题 因为Spring boot一般都是通过@Autowired去注入，从而实例然后调用，如果直接通过New实例化则里面再通过@Autowired注解会有问题。 但是如果在ThirdBusinessFactory。每个实例都写成如下将会是越来越多：\",\"@Qualifier(\\\"A\\\") @Autowired private IThirdBll A; \",\"解决\",\" @Autowired private List<Itest> testList; \",\"先将全部实例注解进去，再通过遍历testList寻找相应的实例。可以自定义个注解例如 TaskHandler，然后根据如下获取并加以判断。\",\" @Target({ElementType.TYPE}) @Retention(RetentionPolicy.RUNTIME) @Inherited @Component public @interface TaskHandler { String value() default \\\"\\\"; String customer() default \\\"\\\"; String description() default \\\"\\\"; } TaskHandler annotation = taskHandlerClass.getAnnotation(TaskHandler.class) \"]},\"80\":{\"c\":[\"问题\",\"编程\"]},\"81\":{\"c\":[\"Java\",\"Spring boot\",\"Quartz\"]},\"82\":{\"h\":\"connection holder is null\"},\"83\":{\"h\":\"发现错误过程\",\"t\":[\"在开发spring-boot整合druid链接池(1.1.2版本)的项目时，同事再开发的时候碰到了，connection holder is null这样一个错误。\",\"帮助其解决时通过google发现可能是druid出现的错误。 但按照网上所说只要配置这几个参数： 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 timeBetweenEvictionRunsMillis 配置一个连接在池中最小生存的时间，单位是毫秒 minEvictableIdleTimeMillis 关闭长时间不使用的连接超时时间，单位秒 removeAbandonedTimeout 关闭长时间不使用的连接 removeAbandoned 实际上并不起作用。 最后发现这篇博文：\",\"connection holder is null 发现确实是由多数据源，开启事务导致了这个错误,且未配置单独的事务管理器，所以也没指定那个事务管理器。 然后通过阅读源码： 一开始创建连接会实例化ConnectionHolder\",\" public static Connection getConnection(DataSource dataSource) throws CannotGetJdbcConnectionException { try { return doGetConnection(dataSource); } catch (SQLException var2) { throw new CannotGetJdbcConnectionException(\\\"Could not get JDBC Connection\\\", var2); } } public static Connection doGetConnection(DataSource dataSource) throws SQLException { Assert.notNull(dataSource, \\\"No DataSource specified\\\"); ConnectionHolder conHolder = (ConnectionHolder)TransactionSynchronizationManager.getResource(dataSource); if (conHolder == null || !conHolder.hasConnection() && !conHolder.isSynchronizedWithTransaction()) { logger.debug(\\\"Fetching JDBC Connection from DataSource\\\"); Connection con = dataSource.getConnection(); if (TransactionSynchronizationManager.isSynchronizationActive()) { logger.debug(\\\"Registering transaction synchronization for JDBC Connection\\\"); ConnectionHolder holderToUse = conHolder; if (conHolder == null) { holderToUse = new ConnectionHolder(con); } else { conHolder.setConnection(con); } holderToUse.requested(); TransactionSynchronizationManager.registerSynchronization(new DataSourceUtils.ConnectionSynchronization(holderToUse, dataSource)); holderToUse.setSynchronizedWithTransaction(true); if (holderToUse != conHolder) { TransactionSynchronizationManager.bindResource(dataSource, holderToUse); } } return con; } else { conHolder.requested(); if (!conHolder.hasConnection()) { logger.debug(\\\"Fetching resumed JDBC Connection from DataSource\\\"); conHolder.setConnection(dataSource.getConnection()); } return conHolder.getConnection(); } } \",\"但执行完之后忘记了手动释放连接，只是connection.close();导致了错误。\",\" public static void releaseConnection(Connection con, DataSource dataSource) { try { doReleaseConnection(con, dataSource); } catch (SQLException var3) { logger.debug(\\\"Could not close JDBC Connection\\\", var3); } catch (Throwable var4) { logger.debug(\\\"Unexpected exception on closing JDBC Connection\\\", var4); } } public static void doReleaseConnection(Connection con, DataSource dataSource) throws SQLException { if (con != null) { if (dataSource != null) { ConnectionHolder conHolder = (ConnectionHolder)TransactionSynchronizationManager.getResource(dataSource); if (conHolder != null && connectionEquals(conHolder, con)) { conHolder.released(); return; } } logger.debug(\\\"Returning JDBC Connection to DataSource\\\"); doCloseConnection(con, dataSource); } } public static void doCloseConnection(Connection con, DataSource dataSource) throws SQLException { if (!(dataSource instanceof SmartDataSource) || ((SmartDataSource)dataSource).shouldClose(con)) { con.close(); } } \",\"除了上面外，我这边的解决办法是:\\nDataSourceUtils.releaseConnection(connection, this.dataSource);//正常执行完语句，调用该方法关闭该数据源的连接,这样就会正常释放连接。\"]},\"84\":{\"c\":[\"问题\",\"编程\"]},\"85\":{\"c\":[\"Java\",\"Spring boot\",\"Druid\"]},\"86\":{\"h\":\"Docsify 配置 Gitalk 问题记录记录\"},\"87\":{\"h\":\"问题\",\"t\":[\"Gitalk Error: Validation Failed \",\"解决由于因 id 未配置导致错误\"]},\"88\":{\"c\":[\"问题\"]},\"89\":{\"c\":[\"Gitalk\"]},\"90\":{\"h\":\"Nginx\"},\"91\":{\"h\":\"强制 HTTP 跳转 HTTPS\"},\"92\":{\"h\":\"\",\"t\":[\"配置重定向:\",\" server { listen 80; server_name _; return 301 https://$host$request_uri; } \",\"!> 这里的服务器名字(server name)是个通配符_：也就是无论 URL 中包含什么域名，当请求到达 Nginx 服务器以后，都会被重定向到 HTTPS。比如说，无论是 http://sever.info 还是 http://www.sever.info 都会被重定向到它们相应的 HTTPS 链接。\"]},\"93\":{\"h\":\"\",\"t\":[\" server { *** //返回301永久重定向，307也是临时重定向，但它可以保持原请求的方法，不做修改的访问新地址。 - return 301 https://$host$request_uri; + return 307 https://$host$request_uri; *** } \"]},\"94\":{\"h\":\"3XX 重定向\",\"t\":[\"301 Moved Permanently : 永久性重定向\",\"302 Found : 临时性重定向\",\"303 See Other : 和- 302 有着相同的功能，但是 303 明确要求客户端应该采用 GET 方法获取资源。 注: 虽然 HTTP 协议规定 301、302 状态下重定向时不允许把 POST 方法改成 GET 方法，但是大多数浏览器都会在 301、302 和 303 状态下的重定向把 POST 方法改成 GET 方法。\",\"304 Not Modified : 如果请求报文首部包含一些条件，例如: If-Match，If-Modified-Since，If-None-Match，If-Range，If-Unmodified-Since，如果不满足条件，则服务器会返回 304 状态码。\",\"307 Temporary Redirect : 临时重定向，与 302 的含义类似，但是 307 要求浏览器不会把重定向请求的 POST 方法改成 GET 方法。\",\"!> 网络协议 - HTTP 协议详解\"]},\"95\":{\"c\":[\"问题\",\"运维\"]},\"96\":{\"c\":[\"Nginx\"]},\"97\":{\"h\":\"Fastjson 导致 Spring boot 接入 Prometheus 返回结果不正确\"},\"98\":{\"h\":\"解决办法\",\"t\":[\"添加 StringHttpMessageConverter 单独处理返回字符串类型，需要注意顺序排在 FastJsonHttpMessageConverter 之前\",\"同时需要注意的一点，由于项目统一切片封装返回对象： \",\"返回 String 的接口也会封装多一层成对象，导致 StringHttpMessageConverter 处理的时候将对象转成 String 从而出现错误\",\"指定 MediaType 针对 prometheus 所用限制处理\",\"@EnableWebMvc @Configuration @ComponentScan public class MyWebMvcConfigurer implements WebMvcConfigurer { @Override public void configureMessageConverters(List<HttpMessageConverter<?>> converters) { converters.add(stringConverter()); converters.add(fastJsonHttpMessageConverters()); //无论白名单和黑名单，都不支持autoType ParserConfig.getGlobalInstance().setSafeMode(true); } /** * 修改默认的JSON实现为FastJson */ @Bean public FastJsonHttpMessageConverter fastJsonHttpMessageConverters() { FastJsonHttpMessageConverter httpMessageConverter = new FastJsonHttpMessageConverter(); httpMessageConverter.setFastJsonConfig(getFastJsonConfig()); httpMessageConverter.setDefaultCharset(Charset.forName(\\\"UTF-8\\\")); return httpMessageConverter; } private FastJsonConfig getFastJsonConfig() { FastJsonConfig fastJsonConfig = new FastJsonConfig(); fastJsonConfig.setDateFormat(\\\"yyyy-MM-dd HH:mm:ss.SSS\\\"); fastJsonConfig.setCharset(Charset.forName(\\\"UTF-8\\\")); fastJsonConfig.setSerializerFeatures( SerializerFeature.WriteMapNullValue, SerializerFeature.QuoteFieldNames, SerializerFeature.WriteNullListAsEmpty, // SerializerFeature.WriteEnumUsingToString, SerializerFeature.WriteDateUseDateFormat); return fastJsonConfig; } public HttpMessageConverter<String> stringConverter() { StringHttpMessageConverter converter = new StringHttpMessageConverter( Charset.forName(\\\"UTF-8\\\")); List<MediaType> supportedMediaTypes = new ArrayList<>(); //提供只针对 prometheus 所用到类型支持 mediaType supportedMediaTypes.add(MediaType.valueOf(\\\"application/openmetrics-text;version=1.0.0;charset=utf-8\\\")); converter.setSupportedMediaTypes(supportedMediaTypes); return converter; } } \"]},\"99\":{\"h\":\"补充\",\"t\":[\"WebMvcMetricsFilter stopped working since 2.7.0\"]},\"100\":{\"c\":[\"问题\",\"运维\",\"监控\"]},\"101\":{\"c\":[\"prometheus\",\"fastjson\"]},\"102\":{\"h\":\"结合两个数据库表结构生成修改表字段语句\"},\"103\":{\"h\":\"原因\",\"t\":[\"同时存在 A 和 B 两个数据库，其中 A 库具有完整注释但字段长度及是否为空不确定，B 库字段长度及是否为空准确但缺少注释， 由于修改注释同时也会修改字段长度和是否为空限制，现需将二者结合。\"]},\"104\":{\"h\":\"解决方法\",\"t\":[\"SELECT CONCAT('alter table ',ct.TABLE_NAME,' modify ',ct.COLUMN_NAME,' ',rt.COLUMN_TYPE,' ',CASE rt.IS_NULLABLE WHEN 'YES' THEN 'NULL' ELSE 'NOT NULL' END,' comment ',\\\"'\\\",ct.COLUMN_COMMENT,\\\"'\\\",';') FROM ( SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = 'A' ) ct LEFT JOIN ( SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = 'B' ) rt ON ct.TABLE_NAME = rt.TABLE_NAME AND ct.COLUMN_NAME = rt.COLUMN_NAME \",\"最终会生成修改表字段的多条语句\"]},\"105\":{\"c\":[\"SQL\"]},\"106\":{\"c\":[\"Mysql\",\"SQL\",\"数据库\"]},\"107\":{\"h\":\"MySQL 知识查缺补漏\"},\"108\":{\"h\":\"索引\"},\"109\":{\"h\":\"单列索引\",\"t\":[\"NORMAL\",\"UNIQUE\",\"SPATIAL\",\"FULLTEXT\"]},\"110\":{\"h\":\"组合索引\",\"t\":[\"实际上就是多行捆绑在一起，同样支持上诉单列索引类型\"]},\"111\":{\"h\":\"explain\",\"t\":[\"select_type 查询类型\",\"table 查询的表\",\"type MySQL 决定如何查找对应的记录，效率从高到低 system > const > eq_ref > ref > range > index > all\",\"possible_keys 执行查询时可能会用到的索引\",\"key 实际使用的索引\",\"key_len MySQL 在索引里使用的字节数，字段的最大可能长度\",\"rows 扫描的行数\",\"extra 附加说明\"]},\"112\":{\"h\":\"最左优先原则\"},\"113\":{\"h\":\"底层原理\",\"t\":[\"B+ 树\",\"innoDB 与 MyISAM 实现不同之处\",\"数据本身就是索引的一部分(所以这里建议使用自增)\",\"非主键索引的数据实际上存储的是对应记录的主键值(因此 InnoDB 必须要有主键，若没有也会自动查找替代)\"]},\"114\":{\"h\":\"锁机制\"},\"115\":{\"h\":\"事务隔离级别\",\"t\":[\"读未提交 存在脏读问题\",\"读已提交 存在不可重复读问题\",\"可重复读 存在幻读问题\",\"串行读\",\"在 RR 级别下，MySQL 一定程度上解决幻读问题\",\"快照读（不加锁） mvcc\",\"当前读（加锁）next-key\",\"读锁和写锁\",\"读锁 也叫共享锁\",\"写锁 也叫排他锁\",\"全局锁、表锁、行锁\",\"记录锁 仅仅锁住索引记录的一行，锁住的永远是索引而非记录本身，如果表上没有任何索引，后台会创建一个隐藏的聚集主键索引，当一条 sql 没走任何索引会将每条聚合索引加写锁类似表锁。\",\"间隙锁 \",\"防止幻读\",\"临键锁 \",\"左开右闭区间\",\"记录锁和间隙锁的组合\",\"使用唯一索引进行精准匹配，但表中不存在记录，自动转换为间隙锁 使用唯一索引进行精准匹配，且表中存在记录，自动转换为记录锁 普通索引不管只要加锁都会产生间隙锁\"]},\"116\":{\"h\":\"差异摘要：MongoDB 与MySQL\",\"t\":[\"MongoDB\",\"MySQL\",\"数据模型\",\"MongoDB 将数据存储在 JSON 文档中，然后将其整理成集合。\",\"MySQL 将数据存储在列和行中。数据存储是表格式和关系式的。\",\"可扩展性\",\"MongoDB 使用复制和分片进行水平扩展。\",\"MySQL 使用纵向扩展和只读副本来大规模提高性能。\",\"查询语言\",\"MongoDB 使用 MongoDB 查询语言。\",\"MySQL 使用 SQL。\",\"性能\",\"MongoDB 擅长插入或更新大量记录。\",\"选择大量记录时，MySQL 的速度更快。\",\"灵活性\",\"MongoDB 没有架构，因此具有更大的灵活性，并且能够处理非结构化、半结构化和结构化数据。\",\"MySQL 有严格的架构，可以很好地处理结构化数据。\",\"安全性\",\"MongoDB 使用 Kerberos、X.509 和 LDAP 证书对用户进行身份验证。\",\"MySQL 使用内置的身份验证方法。\"]},\"117\":{\"c\":[\"编程\"]},\"118\":{\"c\":[\"MySQL\"]},\"119\":{\"h\":\"Redis 知识查缺补漏\"},\"120\":{\"h\":\"持久化\",\"t\":[\"RDB \",\"整体保存\",\"AOF \",\"操作记录保存\"]},\"121\":{\"h\":\"事务\",\"t\":[\"先放到队列\"]},\"122\":{\"h\":\"锁\",\"t\":[\"乐观锁\"]},\"123\":{\"h\":\"分布式\"},\"124\":{\"h\":\"主从复制\"},\"125\":{\"h\":\"哨兵模式\"},\"126\":{\"h\":\"集群部署\"},\"127\":{\"c\":[\"编程\"]},\"128\":{\"c\":[\"Redis\"]},\"129\":{\"h\":\"JDK 停用 TLS10 导致数据库连接出错\"},\"130\":{\"h\":\"原因\",\"t\":[\"因为新版的 JDK 不推荐使用旧的 TLSV1.0 的协议，所以默认停用 TLS10 的支持\"]},\"131\":{\"h\":\"解决\"},\"132\":{\"h\":\"更换 JDK 版本\"},\"133\":{\"h\":\"修改 jre 配置\",\"t\":[\"jre\\\\lib\\\\security\\\\ java.security 文件\",\"修改 jdk.tls.disabledAlgorithms= 这行，去除 TLSv1 等\"]},\"134\":{\"h\":\"Dockerfile 里添加修改命令\",\"t\":[\"首先通过 grep 找到对应行数\",\"通过 grep -n jdk.tls.disabledAlgorithms= /opt/java/openjdk/jre/lib/security/java.security 找到对应行数\",\"通过 sed -i 替换对应字段\",\"RUN sed -i '703s/SSLv3, TLSv1, TLSv1.1,//' /opt/java/openjdk/jre/lib/security/java.security\"]},\"135\":{\"h\":\"修改数据库支持 TLSV1.2\"},\"136\":{\"c\":[\"编程\"]},\"137\":{\"c\":[\"Java\",\"数据库\"]},\"138\":{\"h\":\"设计模式查缺补漏\"},\"139\":{\"h\":\"面向对象设计原则\"},\"140\":{\"h\":\"单一职责原则\",\"t\":[\"一个对象应该只包含单一的职责，并且该职责被完整地封装在一个类中\"]},\"141\":{\"h\":\"开闭原则\",\"t\":[\"软件实体应当对扩展开放，对修改关闭\"]},\"142\":{\"h\":\"里氏替换原则\",\"t\":[\"所用引用基类的地方必须能透明地使用其子类的对象\"]},\"143\":{\"h\":\"依赖倒转原则\",\"t\":[\"高层模块不应依赖于底层模块，它们都应该依赖抽象。抽象不应该依赖于细节，细节应该依赖于抽象。\"]},\"144\":{\"h\":\"接口隔离原则\",\"t\":[\"客户端不应该依赖那些它不需要的接口\"]},\"145\":{\"h\":\"合成复用原则\",\"t\":[\"优先使用对象组合，而不是通过继承来达到复用的目的\"]},\"146\":{\"h\":\"迪米特法则\",\"t\":[\"每一个软件单位对其他单位都只有最少的知识，而且局限于那些与本单位密切相关的软件单位\"]},\"147\":{\"h\":\"创建型-设计模式\"},\"148\":{\"h\":\"工厂方法模式\",\"t\":[\"public abstract class FruitFactory<T extends Fruit> {//将工厂抽象为抽象类，添加泛型 T 由 子类指定类型 public abstract T getFruit(); //不同的工厂通过此方法生产不同的类 } \"]},\"149\":{\"h\":\"优点\",\"t\":[\"你可以避免创建者和具体产品之间的紧密耦合。\",\"单一职责原则。 你可以将产品创建代码放在程序的单一位置， 从而使得代码更容易维护。\",\"开闭原则。 无需更改现有客户端代码， 你就可以在程序中引入新的产品类型。\"]},\"150\":{\"h\":\"缺点\",\"t\":[\"应用工厂方法模式需要引入许多新的子类， 代码可能会因此变得更复杂。 最好的情况是将该模式引入创建者类的现有层次结构中。\"]},\"151\":{\"h\":\"抽象工厂类\",\"t\":[\"public abstract class AbstractFactory { public abstract Phone getPhone(); public abstract Pad getPad(); } \"]},\"152\":{\"h\":\"优点\",\"t\":[\"你可以确保同一工厂生成的产品相互匹配。\",\"你可以避免客户端和具体产品代码的耦合。\",\"单一职责原则。 你可以将产品生成代码抽取到同一位置， 使得代码易于维护。\",\"开闭原则。 向应用程序中引入新产品变体时， 你无需修改客户端代码。\"]},\"153\":{\"h\":\"缺点\",\"t\":[\"由于采用该模式需要向应用中引入众多接口和类， 代码可能会比之前更加复杂。\"]},\"154\":{\"h\":\"建造者/生成器模式\",\"t\":[\"public class GirlFriend { private String name; private int age; private int bust; private int waist; private int hips; private List<String> hobby; private String birthday; private String address; private String mobile; private String email; private String hairColor; private Map<String, String> gift; // 等等等等 ... // 省略 getter & setter ... public static void main(String[] args) { GirlFriend myGirlFriend = new GirlFriend(); myGirlFriend.setName(\\\"小美\\\"); myGirlFriend.setAge(18); myGirlFriend.setBust(33); myGirlFriend.setWaist(23); myGirlFriend.setHips(33); myGirlFriend.setBirthday(\\\"2001-10-26\\\"); myGirlFriend.setAddress(\\\"上海浦东\\\"); myGirlFriend.setMobile(\\\"18688888888\\\"); myGirlFriend.setEmail(\\\"pretty-xiaomei@qq.com\\\"); myGirlFriend.setHairColor(\\\"浅棕色带点微卷\\\"); List<String> hobby = new ArrayList<>(); hobby.add(\\\"逛街\\\"); hobby.add(\\\"购物\\\"); hobby.add(\\\"买东西\\\"); myGirlFriend.setHobby(hobby); Map<String, String> gift = new HashMap<>(); gift.put(\\\"情人节礼物\\\", \\\"LBR 1912女王时代\\\"); gift.put(\\\"生日礼物\\\", \\\"迪奥烈焰蓝金\\\"); gift.put(\\\"纪念日礼物\\\", \\\"阿玛尼红管唇釉\\\"); myGirlFriend.setGift(gift); // 等等等等 ... } } \",\"public class GirlFriend { // 省略属性 ... // 省略 getter & setter ... // 为了演示方便，加几个聚合方法 public void addHobby(String hobby) { this.hobby = Optional.ofNullable(this.hobby).orElse(new ArrayList<>()); this.hobby.add(hobby); } public void addGift(String day, String gift) { this.gift = Optional.ofNullable(this.gift).orElse(new HashMap<>()); this.gift.put(day, gift); } public void setVitalStatistics(int bust, int waist, int hips) { this.bust = bust; this.waist = waist; this.hips = hips; } public static void main(String[] args) { GirlFriend myGirlFriend = Builder.of(GirlFriend::new) .with(GirlFriend::setName, \\\"小美\\\") .with(GirlFriend::setAge, 18) .with(GirlFriend::setVitalStatistics, 33, 23, 33) .with(GirlFriend::setBirthday, \\\"2001-10-26\\\") .with(GirlFriend::setAddress, \\\"上海浦东\\\") .with(GirlFriend::setMobile, \\\"18688888888\\\") .with(GirlFriend::setEmail, \\\"pretty-xiaomei@qq.com\\\") .with(GirlFriend::setHairColor, \\\"浅棕色带点微卷\\\") .with(GirlFriend::addHobby, \\\"逛街\\\") .with(GirlFriend::addHobby, \\\"购物\\\") .with(GirlFriend::addHobby, \\\"买东西\\\") .with(GirlFriend::addGift, \\\"情人节礼物\\\", \\\"LBR 1912女王时代\\\") .with(GirlFriend::addGift, \\\"生日礼物\\\", \\\"迪奥烈焰蓝金\\\") .with(GirlFriend::addGift, \\\"纪念日礼物\\\", \\\"阿玛尼红管唇釉\\\") // 等等等等 ... .build(); } } \",\"/** * 通用的 Builder 模式构建器 * * @author: CipherCui * @since 2019/8/29 */ public class Builder<T> { private final Supplier<T> instantiator; private List<Consumer<T>> modifiers = new ArrayList<>(); public Builder(Supplier<T> instantiator) { this.instantiator = instantiator; } public static <T> Builder<T> of(Supplier<T> instantiator) { return new Builder<>(instantiator); } public <P1> Builder<T> with(Consumer1<T, P1> consumer, P1 p1) { Consumer<T> c = instance -> consumer.accept(instance, p1); modifiers.add(c); return this; } public <P1, P2> Builder<T> with(Consumer2<T, P1, P2> consumer, P1 p1, P2 p2) { Consumer<T> c = instance -> consumer.accept(instance, p1, p2); modifiers.add(c); return this; } public <P1, P2, P3> Builder<T> with(Consumer3<T, P1, P2, P3> consumer, P1 p1, P2 p2, P3 p3) { Consumer<T> c = instance -> consumer.accept(instance, p1, p2, p3); modifiers.add(c); return this; } public T build() { T value = instantiator.get(); modifiers.forEach(modifier -> modifier.accept(value)); modifiers.clear(); return value; } /** * 1 参数 Consumer */ @FunctionalInterface public interface Consumer1<T, P1> { void accept(T t, P1 p1); } /** * 2 参数 Consumer */ @FunctionalInterface public interface Consumer2<T, P1, P2> { void accept(T t, P1 p1, P2 p2); } /** * 3 参数 Consumer */ @FunctionalInterface public interface Consumer3<T, P1, P2, P3> { void accept(T t, P1 p1, P2 p2, P3 p3); } } \"]},\"155\":{\"h\":\"优点\",\"t\":[\"你可以分步创建对象， 暂缓创建步骤或递归运行创建步骤。\",\"生成不同形式的产品时， 你可以复用相同的制造代码。\",\"单一职责原则。 你可以将复杂构造代码从产品的业务逻辑中分离出来。\"]},\"156\":{\"h\":\"缺点\",\"t\":[\"由于该模式需要新增多个类， 因此代码整体复杂程度会有所增加。\"]},\"157\":{\"h\":\"单例模式\",\"t\":[\"懒汉单例模式\",\"public static void main(String[] args) { private static volatile Singleton INSTANCE; private Singleton(){} public static Singleton getInstance() { if (INSTANCE == null) { synchronized (Singleton.class) { if (INSTANCE == null) { INSTANCE = new Singleton(); } } } return INSTANCE; } } \",\"//非锁模式 public class Singleton { private Singleton(){} private static class Holder { //由于静态内部类持有单例对象，根据类加载特性，我们仅使用 Singleton 类时，不会对静态内部类进行初始化 private final static Singleton INSTANCE = new Singleton(); } public static Singleton getInstance() { return Holder.INSTANCE; } } \"]},\"158\":{\"h\":\"优点\",\"t\":[\"你可以保证一个类只有一个实例。\",\"你获得了一个指向该实例的全局访问节点。\",\"仅在首次请求单例对象时对其进行初始化。\"]},\"159\":{\"h\":\"缺点\",\"t\":[\"违反了单一职责原则。 该模式同时解决了两个问题。\",\"单例模式可能掩盖不良设计， 比如程序各组件之间相互了解过多等。\",\"该模式在多线程环境下需要进行特殊处理， 避免多个线程多次创建单例对象。\",\"单例的客户端代码单元测试可能会比较困难， 因为许多测试框架以基于继承的方式创建模拟对象。 由于单例类的构造函数是私有的， 而且绝大部分语言无法重写静态方法， 所以你需要想出仔细考虑模拟单例的方法。 要么干脆不编写测试代码， 或者不使用单例模式。\"]},\"160\":{\"h\":\"原型模式\",\"t\":[\"浅拷贝\",\"深拷贝\"]},\"161\":{\"h\":\"优点\",\"t\":[\"你可以克隆对象， 而无需与它们所属的具体类相耦合。\",\"你可以克隆预生成原型， 避免反复运行初始化代码。\",\"你可以更方便地生成复杂对象。\",\"你可以用继承以外的方式来处理复杂对象的不同配置。\"]},\"162\":{\"h\":\"缺点\",\"t\":[\"克隆包含循环引用的复杂对象可能会非常麻烦。\"]},\"163\":{\"h\":\"结构型-设计模式\"},\"164\":{\"h\":\"类/对象适配器模式\",\"t\":[\"类适配\",\"对象适配\"]},\"165\":{\"h\":\"优点\",\"t\":[\"单一职责原则你可以将接口或数据转换代码从程序主要业务逻辑中分离。\",\"开闭原则。 只要客户端代码通过客户端接口与适配器进行交互， 你就能在不修改现有客户端代码的情况下在程序中添加新类型的适配器。\"]},\"166\":{\"h\":\"缺点\",\"t\":[\"代码整体复杂度增加， 因为你需要新增一系列接口和类。 有时直接更改服务类使其与其他代码兼容会更简单。\"]},\"167\":{\"h\":\"桥接模式\"},\"168\":{\"h\":\"优点\",\"t\":[\"你可以创建与平台无关的类和程序。\",\"客户端代码仅与高层抽象部分进行互动， 不会接触到平台的详细信息。\",\"开闭原则。 你可以新增抽象部分和实现部分， 且它们之间不会相互影响。\",\"单一职责原则。 抽象部分专注于处理高层逻辑， 实现部分处理平台细节。\"]},\"169\":{\"h\":\"缺点\",\"t\":[\"对高内聚的类使用该模式可能会让代码更加复杂\"]},\"170\":{\"h\":\"组合模式\"},\"171\":{\"h\":\"优点\",\"t\":[\"你可以利用多态和递归机制更方便地使用复杂树结构。\",\"开闭原则。 无需更改现有代码， 你就可以在应用中添加新元素， 使其成为对象树的一部分。\"]},\"172\":{\"h\":\"缺点\",\"t\":[\"对于功能差异较大的类， 提供公共接口或许会有困难。 在特定情况下， 你需要过度一般化组件接口， 使其变得令人难以理解。\"]},\"173\":{\"h\":\"装饰模式\",\"t\":[\"Java 中 set 实现类\"]},\"174\":{\"h\":\"优点\",\"t\":[\"你无需创建新子类即可扩展对象的行为。\",\"你可以在运行时添加或删除对象的功能。\",\"你可以用多个装饰封装对象来组合几种行为。\",\"单一职责原则。 你可以将实现了许多不同行为的一个大类拆分为多个较小的类。\"]},\"175\":{\"h\":\"缺点\",\"t\":[\"在封装器栈中删除特定封装器比较困难。\",\"实现行为不受装饰栈顺序影响的装饰比较困难。\",\"各层的初始化配置代码看上去可能会很糟糕。\"]},\"176\":{\"h\":\"代理模式\"},\"177\":{\"h\":\"优点\",\"t\":[\"你可以在客户端毫无察觉的情况下控制服务对象。\",\"如果客户端对服务对象的生命周期没有特殊要求， 你可以对生命周期进行管理。\",\"即使服务对象还未准备好或不存在， 代理也可以正常工作。\",\"开闭原则。 你可以在不对服务或客户端做出修改的情况下创建新代理。\"]},\"178\":{\"h\":\"缺点\",\"t\":[\"代码可能会变得复杂， 因为需要新建许多类。\",\"服务响应可能会延迟。\"]},\"179\":{\"h\":\"外观模式\"},\"180\":{\"h\":\"优点\",\"t\":[\"你可以让自己的代码独立于复杂子系统。\"]},\"181\":{\"h\":\"缺点\",\"t\":[\"外观可能成为与程序中所有类都耦合的上帝对象。\"]},\"182\":{\"h\":\"享元模式\"},\"183\":{\"h\":\"优点\",\"t\":[\"如果程序中有很多相似对象， 那么你将可以节省大量内存。\"]},\"184\":{\"h\":\"缺点\",\"t\":[\"你可能需要牺牲执行速度来换取内存， 因为他人每次调用享元方法时都需要重新计算部分情景数据。\",\"代码会变得更加复杂。 团队中的新成员总是会问： ​ “为什么要像这样拆分一个实体的状态？”。\"]},\"185\":{\"h\":\"行为型-设计模式\"},\"186\":{\"h\":\"解释器模式\",\"t\":[\"很少使用\"]},\"187\":{\"h\":\"模板方法模式\"},\"188\":{\"h\":\"优点\",\"t\":[\"你可仅允许客户端重写一个大型算法中的特定部分， 使得算法其他部分修改对其所造成的影响减小。\",\"你可将重复代码提取到一个超类中。\"]},\"189\":{\"h\":\"缺点\",\"t\":[\"部分客户端可能会受到算法框架的限制。\",\"通过子类抑制默认步骤实现可能会导致违反里氏替换原则。\",\"模板方法中的步骤越多， 其维护工作就可能会越困难。\"]},\"190\":{\"h\":\"责任链模式\"},\"191\":{\"h\":\"优点\",\"t\":[\"你可以控制请求处理的顺序。\",\"单一职责原则。 你可对发起操作和执行操作的类进行解耦。\",\"开闭原则。 你可以在不更改现有代码的情况下在程序中新增处理者。\"]},\"192\":{\"h\":\"缺点\",\"t\":[\"部分请求可能未被处理。\"]},\"193\":{\"h\":\"命令模式\"},\"194\":{\"h\":\"优点\",\"t\":[\"单一职责原则。 你可以解耦触发和执行操作的类。\",\"开闭原则。 你可以在不修改已有客户端代码的情况下在程序中创建新的命令。\",\"你可以实现撤销和恢复功能。\",\"你可以实现操作的延迟执行。\",\"你可以将一组简单命令组合成一个复杂命令。\"]},\"195\":{\"h\":\"缺点\",\"t\":[\"代码可能会变得更加复杂， 因为你在发送者和接收者之间增加了一个全新的层次。\"]},\"196\":{\"h\":\"迭代器模式\"},\"197\":{\"h\":\"优点\",\"t\":[\"单一职责原则。 通过将体积庞大的遍历算法代码抽取为独立的类， 你可对客户端代码和集合进行整理。\",\"开闭原则。 你可实现新型的集合和迭代器并将其传递给现有代码， 无需修改现有代码。\",\"你可以并行遍历同一集合， 因为每个迭代器对象都包含其自身的遍历状态。\",\"相似的， 你可以暂停遍历并在需要时继续。\"]},\"198\":{\"h\":\"缺点\",\"t\":[\"如果你的程序只与简单的集合进行交互， 应用该模式可能会矫枉过正。\",\"对于某些特殊集合， 使用迭代器可能比直接遍历的效率低。\"]},\"199\":{\"h\":\"中介者模式\"},\"200\":{\"h\":\"优点\",\"t\":[\"单一职责原则。 你可以将多个组件间的交流抽取到同一位置， 使其更易于理解和维护。\",\"开闭原则。 你无需修改实际组件就能增加新的中介者。\",\"你可以减轻应用中多个组件间的耦合情况。\",\"你可以更方便地复用各个组件。\"]},\"201\":{\"h\":\"缺点\",\"t\":[\"一段时间后， 中介者可能会演化成为上帝对象。\"]},\"202\":{\"h\":\"备忘录模式\"},\"203\":{\"h\":\"优点\",\"t\":[\"你可以在不破坏对象封装情况的前提下创建对象状态快照。\",\"你可以通过让负责人维护原发器状态历史记录来简化原发器代码。-\"]},\"204\":{\"h\":\"缺点\",\"t\":[\"如果客户端过于频繁地创建备忘录， 程序将消耗大量内存。\",\"负责人必须完整跟踪原发器的生命周期， 这样才能销毁弃用的备忘录。\",\"绝大部分动态编程语言 （例如 PHP、 Python 和 JavaScript） 不能确保备忘录中的状态不被修改。\"]},\"205\":{\"h\":\"观察者模式\"},\"206\":{\"h\":\"优点\",\"t\":[\"开闭原则。 你无需修改发布者代码就能引入新的订阅者类 （如果是发布者接口则可轻松引入发布者类）。\",\"你可以在运行时建立对象之间的联系。\"]},\"207\":{\"h\":\"缺点\",\"t\":[\"订阅者的通知顺序是随机的。\"]},\"208\":{\"h\":\"状态模式\"},\"209\":{\"h\":\"优点\",\"t\":[\"单一职责原则。 将与特定状态相关的代码放在单独的类中。\",\"开闭原则。 无需修改已有状态类和上下文就能引入新状态。\",\"通过消除臃肿的状态机条件语句简化上下文代码。\"]},\"210\":{\"h\":\"缺点\",\"t\":[\"如果状态机只有很少的几个状态， 或者很少发生改变， 那么应用该模式可能会显得小题大作。\"]},\"211\":{\"h\":\"策略模式\"},\"212\":{\"h\":\"优点\",\"t\":[\"你可以在运行时切换对象内的算法。\",\"你可以将算法的实现和使用算法的代码隔离开来。\",\"你可以使用组合来代替继承。\",\"开闭原则。 你无需对上下文进行修改就能够引入新的策略。\"]},\"213\":{\"h\":\"缺点\",\"t\":[\"如果你的算法极少发生改变， 那么没有任何理由引入新的类和接口。 使用该模式只会让程序过于复杂。\",\"客户端必须知晓策略间的不同——它需要选择合适的策略。\",\"许多现代编程语言支持函数类型功能， 允许你在一组匿名函数中实现不同版本的算法。 这样， 你使用这些函数的方式就和使用策略对象时完全相同， 无需借助额外的类和接口来保持代码简洁。\"]},\"214\":{\"h\":\"访问者模式\"},\"215\":{\"h\":\"优点\",\"t\":[\"开闭原则。 你可以引入在不同类对象上执行的新行为， 且无需对这些类做出修改。\",\"单一职责原则。 可将同一行为的不同版本移到同一个类中。\",\"访问者对象可以在与各种对象交互时收集一些有用的信息。 当你想要遍历一些复杂的对象结构 （例如对象树）， 并在结构中的每个对象上应用访问者时， 这些信息可能会有所帮助。\"]},\"216\":{\"h\":\"缺点\",\"t\":[\"每次在元素层次结构中添加或移除一个类时， 你都要更新所有的访问者。\",\"在访问者同某个元素进行交互时， 它们可能没有访问元素私有成员变量和方法的必要权限。-\"]},\"217\":{\"h\":\"项目所用到\",\"t\":[\"创建型 \",\"工厂方法模式\",\"抽象工厂类\",\"建造者/生成器模式\",\"单例模式\",\"结构型 \",\"适配器模式\",\"桥接模式\",\"组合模式\",\"装饰器模式\",\"代理模式\",\"外观模式\",\"行为型 \",\"模板方法模式\",\"责任链模式\",\"命令模式\",\"迭代器模式\",\"观察者模式\",\"策略模式\"]},\"218\":{\"h\":\"参考文章\",\"t\":[\"Java 设计模式 已完结（IDEA 2022.1最新版）4K蓝光画质+杜比音效设计模式\"]},\"219\":{\"c\":[\"编程\"]},\"220\":{\"c\":[\"设计模式\"]},\"221\":{\"h\":\"JUC 知识查缺补漏\"},\"222\":{\"h\":\"并发与并行\"},\"223\":{\"h\":\"锁机制\"},\"224\":{\"h\":\"重量级锁\",\"t\":[\"在JDK6之前，synchronized一直被称为重量级锁，monitor依赖于底层操作系统的Lock实现，Java的线程是映射到操作系统的原生线程上，切换成本较高。而在JDK6之后，锁的实现得到了改进。我们先从最原始的重量级锁开始：\"]},\"225\":{\"h\":\"轻量级锁\",\"t\":[\"CAS（Compare And Swap）是一种无锁算法（我们之前在Springboot阶段已经讲解过了），它并不会为对象加锁，而是在执行的时候，看看当前数据的值是不是我们预期的那样，如果是，那就正常进行替换，如果不是，那么就替换失败。比如有两个线程都需要修改变量i的值，默认为10，现在一个线程要将其修改为20，另一个要修改为30，如果他们都使用CAS算法，那么并不会加锁访问i，而是直接尝试修改i的值，但是在修改时，需要确认i是不是10，如果是，表示其他线程还没对其进行修改，如果不是，那么说明其他线程已经将其修改，此时不能完成修改任务，修改失败。 在CPU中，CAS操作使用的是cmpxchg指令，能够从最底层硬件层面得到效率的提升。 \"]},\"226\":{\"h\":\"偏向锁\"},\"227\":{\"h\":\"锁消除和锁粗化\",\"t\":[\"锁消除和锁粗化都是在运行时的一些优化方案，比如我们某段代码虽然加了锁，但是在运行时根本不可能出现各个线程之间资源争夺的情况，这种情况下，完全不需要任何加锁机制，所以锁会被消除。锁粗化则是我们代码中频繁地出现互斥同步操作，比如在一个循环内部加锁，这样明显是非常消耗性能的，所以虚拟机一旦检测到这种操作，会将整个同步范围进行扩展。\"]},\"228\":{\"h\":\"JMM 内存模型\",\"t\":[\"注意这里提到的内存模型和我们在JVM中介绍的内存模型不在同一个层次，JVM中的内存模型是虚拟机规范对整个内存区域的规划，而Java内存模型，是在JVM内存模型之上的抽象模型，具体实现依然是基于JVM内存模型实现的，我们会在后面介绍。\"]},\"229\":{\"h\":\"JAVA 内存模型\"},\"230\":{\"h\":\"指令重排序\",\"t\":[\"编译器重排序：Java编译器通过对Java代码语义的理解，根据优化规则对代码指令进行重排序。\",\"机器指令级别的重排序：现代处理器很高级，能够自主判断和变更机器指令的执行顺序。\"]},\"231\":{\"h\":\"volatile 关键字\",\"t\":[\"原子性：其实之前讲过很多次了，就是要做什么事情要么做完，要么就不做，不存在做一半的情况。\",\"可见性：指当多个线程访问同一个变量时，一个线程修改了这个变量的值，其他线程能够立即看得到修改的值。\",\"有序性：即程序执行的顺序按照代码的先后顺序执行。\"]},\"232\":{\"h\":\"happens-before 原则\"},\"233\":{\"h\":\"锁框架\"},\"234\":{\"h\":\"Lock和Condition接口\"},\"235\":{\"h\":\"可重入锁\",\"t\":[\"public static void main(String[] args) throws InterruptedException { ReentrantLock lock = new ReentrantLock(); lock.lock(); lock.lock(); //连续加锁2次 new Thread(() -> { System.out.println(\\\"线程2想要获取锁\\\"); lock.lock(); System.out.println(\\\"线程2成功获取到锁\\\"); }).start(); lock.unlock(); System.out.println(\\\"线程1释放了一次锁\\\"); TimeUnit.SECONDS.sleep(1); lock.unlock(); System.out.println(\\\"线程1再次释放了一次锁\\\"); //释放两次后其他线程才能加锁 } \"]},\"236\":{\"h\":\"公平锁与非公平锁\",\"t\":[\"公平锁：多个线程按照申请锁的顺序去获得锁，线程会直接进入队列去排队，永远都是队列的第一位才能得到锁。 非公平锁：多个线程去获取锁的时候，会直接去尝试获取，获取不到，再去进入等待队列，如果能获取到，就直接获取到锁。\",\"public ReentrantLock(boolean fair) { sync = fair ? new FairSync() : new NonfairSync(); } \"]},\"237\":{\"h\":\"读写锁\",\"t\":[\"public interface ReadWriteLock { //获取读锁 Lock readLock(); //获取写锁 Lock writeLock(); } \",\"ReentrantReadWriteLock不仅具有读写锁的功能，还保留了可重入锁和公平/非公平机制，比如同一个线程可以重复为写锁加锁，并且必须全部解锁才真正释放锁：\"]},\"238\":{\"h\":\"锁降级和锁升级\",\"t\":[\"锁降级指的是写锁降级为读锁。当一个线程持有写锁的情况下，虽然其他线程不能加读锁，但是线程自己是可以加读锁的\"]},\"239\":{\"h\":\"原子类\",\"t\":[\"AtomicInteger：原子更新int AtomicLong：原子更新long AtomicBoolean：原子更新boolean\"]},\"240\":{\"h\":\"ABA 问题\",\"t\":[\"线程1和线程2同时开始对a的值进行CAS修改，但是线程1的速度比较快，将a的值修改为2之后紧接着又修改回1，这时线程2才开始进行判断，发现a的值是1，所以CAS操作成功。\",\"很明显，这里的1已经不是一开始的那个1了，而是被重新赋值的1，这也是CAS操作存在的问题（无锁虽好，但是问题多多），它只会机械地比较当前值是不是预期值，但是并不会关心当前值是否被修改过，这种问题称之为ABA问题。\",\"那么如何解决这种ABA问题呢，JUC提供了带版本号的引用类型，只要每次操作都记录一下版本号，并且版本号不会重复，那么就可以解决ABA问题了：\",\"public static void main(String[] args) throws InterruptedException { String a = \\\"Hello\\\"; String b = \\\"World\\\"; AtomicStampedReference<String> reference = new AtomicStampedReference<>(a, 1); //在构造时需要指定初始值和对应的版本号 reference.attemptStamp(a, 2); //可以中途对版本号进行修改，注意要填写当前的引用对象 System.out.println(reference.compareAndSet(a, b, 2, 3)); //CAS操作时不仅需要提供预期值和修改值，还要提供预期版本号和新的版本号 } \"]},\"241\":{\"h\":\"并发容器\"},\"242\":{\"h\":\"线程池\",\"t\":[\"public ThreadPoolExecutor(int corePoolSize, int maximumPoolSize, long keepAliveTime, TimeUnit unit, BlockingQueue<Runnable> workQueue, ThreadFactory threadFactory, RejectedExecutionHandler handler) { if (corePoolSize < 0 || maximumPoolSize <= 0 || maximumPoolSize < corePoolSize || keepAliveTime < 0) throw new IllegalArgumentException(); if (workQueue == null || threadFactory == null || handler == null) throw new NullPointerException(); this.acc = System.getSecurityManager() == null ? null : AccessController.getContext(); this.corePoolSize = corePoolSize; this.maximumPoolSize = maximumPoolSize; this.workQueue = workQueue; this.keepAliveTime = unit.toNanos(keepAliveTime); this.threadFactory = threadFactory; this.handler = handler; } \",\"corePoolSize：核心线程池大小，我们每向线程池提交一个多线程任务时，都会创建一个新的核心线程，无论是否存在其他空闲线程，直到到达核心线程池大小为止，之后会尝试复用线程资源。当然也可以在一开始就全部初始化好，调用prestartAllCoreThreads()即可。\",\"maximumPoolSize：最大线程池大小，当目前线程池中所有的线程都处于运行状态，并且等待队列已满，那么就会直接尝试继续创建新的非核心线程运行，但是不能超过最大线程池大小。\",\"keepAliveTime：线程最大空闲时间，当一个非核心线程空闲超过一定时间，会自动销毁。\",\"unit：线程最大空闲时间的时间单位\",\"workQueue：线程等待队列，当线程池中核心线程数已满时，就会将任务暂时存到等待队列中，直到有线程资源可用为止，这里可以使用我们上一章学到的阻塞队列。\",\"threadFactory：线程创建工厂，我们可以干涉线程池中线程的创建过程，进行自定义。\",\"handler：拒绝策略，当等待队列和线程池都没有空间了，真的不能再来新的任务时，来了个新的多线程任务，那么只能拒绝了，这时就会根据当前设定的拒绝策略进行处理。\"]},\"243\":{\"h\":\"Fork/Join框架\",\"t\":[\"public class Main { public static void main(String[] args) throws InterruptedException, ExecutionException { ForkJoinPool pool = new ForkJoinPool(); System.out.println(pool.submit(new SubTask(1, 1000)).get()); } //继承RecursiveTask，这样才可以作为一个任务，泛型就是计算结果类型 private static class SubTask extends RecursiveTask<Integer> { private final int start; //比如我们要计算一个范围内所有数的和，那么就需要限定一下范围，这里用了两个int存放 private final int end; public SubTask(int start, int end) { this.start = start; this.end = end; } @Override protected Integer compute() { if(end - start > 125) { //每个任务最多计算125个数的和，如果大于继续拆分，小于就可以开始算了 SubTask subTask1 = new SubTask(start, (end + start) / 2); subTask1.fork(); //会继续划分子任务执行 SubTask subTask2 = new SubTask((end + start) / 2 + 1, end); subTask2.fork(); //会继续划分子任务执行 return subTask1.join() + subTask2.join(); //越玩越有递归那味了 } else { System.out.println(Thread.currentThread().getName()+\\\" 开始计算 \\\"+start+\\\"-\\\"+end+\\\" 的值!\\\"); int res = 0; for (int i = start; i <= end; i++) { res += i; } return res; //返回的结果会作为join的结果 } } } } \"]},\"244\":{\"h\":\"自我感悟\",\"t\":[\"锁\",\"项目 \",\"单据保存箱明细信息加锁\",\"获取流水 \",\"用于生成 EPC 数据的 SKU 流水\",\"生成单号或者箱码\",\"//以线程共享的形式使用 WeakHashMap 存储锁，WeakHashMap 未使用的 KEY 会被清除 private final Map<Long, ReentrantLock> boxSaveLocks = Collections.synchronizedMap(new WeakHashMap<>()); \",\"//创建锁时为了避免多个线程获取到锁还使用 synchronized ReentrantLock lock = boxSaveLocks.get(orderId); if (lock == null) { synchronized (OrderService.class) { lock = boxSaveLocks.get(orderId); if (lock == null) { lock = new ReentrantLock(); boxSaveLocks.put(orderId, lock); } } } \",\"线程池\",\"箱明细数据分批上传保存\"]},\"245\":{\"h\":\"参考文章\",\"t\":[\"Java JUC 并发编程\"]},\"246\":{\"c\":[\"编程\"]},\"247\":{\"c\":[\"Java\"]},\"248\":{\"h\":\"JVM 知识查缺补漏\"},\"249\":{\"h\":\"技术概括\",\"t\":[\"基于栈的指令集架构\",\"JVM运行字节码时，所有的操作基本都是围绕两种数据结构，一种是堆栈（本质是栈结构），还有一种是队列，如果JVM执行某条指令时，该指令需要对数据进行操作，那么被操作的数据在指令执行前，必须要压到堆栈上，JVM会自动将栈顶数据作为操作数。如果堆栈上的数据需要暂时保存起来时，那么它就会被存储到局部变量队列上。\",\"实际上我们发现，JVM执行的命令基本都是入栈出栈等，而且大部分指令都是没有操作数的，传统的汇编指令有一操作数、二操作数甚至三操作数的指令，Java相比C编译出来的汇编指令，执行起来会更加复杂，实现某个功能的指令条数也会更多，所以Java的执行效率实际上是不如C/C++的，虽然能够很方便地实现跨平台，但是性能上大打折扣，所以在性能要求比较苛刻的Android上，采用的是定制版的JVM，并且是基于寄存器的指令集架构。此外，在某些情况下，我们还可以使用JNI机制来通过Java调用C/C++编写的程序以提升性能（也就是本地方法，使用到native关键字）\"]},\"250\":{\"h\":\"JVM 启动流程探究\",\"t\":[\"配置JVM装载环境 解析虚拟机参数 设置线程栈大小 执行JavaMain方法\"]},\"251\":{\"h\":\"JNI调用本地方法\"},\"252\":{\"h\":\"JVM 内存管理\"},\"253\":{\"h\":\"内存区域划分\",\"t\":[\"我们可以看到，内存区域一共分为5个区域，其中方法区和堆是所有线程共享的区域，随着虚拟机的创建而创建，虚拟机的结束而销毁，而虚拟机栈、本地方法栈、程序计数器都是线程之间相互隔离的，每个线程都有一个自己的区域，并且线程启动时会自动创建，结束之后会自动销毁。内存划分完成之后，我们的JVM执行引擎和本地库接口，也就是Java程序开始运行之后就会根据分区合理地使用对应区域的内存了。\"]},\"254\":{\"h\":\"爆内存和爆栈\",\"t\":[\"-Xms最小值 -Xmx最大值 -Xss 用来设置栈容量 \",\"可以通过 IDEA 内置的 profiler 查看内存快照\"]},\"255\":{\"h\":\"申请堆外内存\"},\"256\":{\"h\":\"垃圾回收机制\"},\"257\":{\"h\":\"对象存活判定算法\"},\"258\":{\"h\":\"引用计数法\",\"t\":[\"每个对象都包含一个 引用计数器，用于存放引用计数（其实就是存放被引用的次数）\",\"每当有一个地方引用此对象时，引用计数+1\",\"当引用失效（ 比如离开了局部变量的作用域或是引用被设定为null）时，引用计数-1\",\"当引用计数为0时，表示此对象不可能再被使用，因为这时我们已经没有任何方法可以得到此对象的引用了\"]},\"259\":{\"h\":\"可达性分析法\",\"t\":[\"位于虚拟机栈的栈帧中的本地变量表中所引用到的对象（其实就是我们方法中的局部变量）同样也包括本地方法栈中JNI引用的对象。\",\"类的静态成员变量引用的对象。\",\"方法区中，常量池里面引用的对象，比如我们之前提到的String类型对象。\",\"被添加了锁的对象（比如synchronized关键字）\",\"虚拟机内部需要用到的对象。\"]},\"260\":{\"h\":\"最终判定\",\"t\":[\"finalize() 垃圾回收之前执行，同一个对象的 finalize()方法只会有一次调用机会，也就是说，如果我们连续两次这样操作，那么第二次，对象必定被回收\"]},\"261\":{\"h\":\"垃圾回收算法\"},\"262\":{\"h\":\"分代收集机制\",\"t\":[\"新的 java 版本永久代去掉变为元空间\"]},\"263\":{\"h\":\"空间分配担保\"},\"264\":{\"h\":\"标记-清除算法\"},\"265\":{\"h\":\"标记-复制算法\"},\"266\":{\"h\":\"标记-整理算法\"},\"267\":{\"h\":\"垃圾集实现\"},\"268\":{\"h\":\"Garbage First (G1) 收集器\",\"t\":[\"分为以下四个步骤：\",\"初始标记（暂停用户线程）：仅仅只是标记一下GC Roots能直接关联到的对象，并且修改TAMS指针的值，让下一阶段用户线程并发运行时，能正确地在可用的Region中分配新对象。这个阶段需要停顿线程，但耗时很短，而且是借用进行Minor GC的时候同步完成的，所以G1收集器在这个阶段实际并没有额外的停顿。\",\"并发标记：从GC Root开始对堆中对象进行可达性分析，递归扫描整个堆里的对象图，找出要回收的对象，这阶段耗时较长，但可与用户程序并发执行。\",\"最终标记（暂停用户线程）：对用户线程做一个短暂的暂停，用于处理并发标记阶段漏标的那部分对象。\",\"筛选回收：负责更新Region的统计数据，对各个Region的回收价值和成本进行排序，根据用户所期望的停顿时间来制定回收计划，可以自由选择任意多个Region构成回收集，然后把决定回收的那一部分Region的存活对象复制到空的Region中，再清理掉整个旧Region的全部空间。这里的操作涉及存活对象的移动，是必须暂停用户线程，由多个收集器线程并行完成的。\"]},\"269\":{\"h\":\"元空间\"},\"270\":{\"h\":\"引用类型\",\"t\":[\"强引用 (Strongly Reference) ：最传统的引用，如 Object obj = new Object() 。无论任何情况下，只要强引用关系还存在，垃圾收集器就永远不会回收掉被引用的对象。\",\"软引用 (Soft Reference) ：用于描述一些还有用，但非必须的对象。只被软引用关联着的对象，在系统将要发生内存溢出异常之前，会被列入回收范围内进行第二次回收，如果这次回收后还没有足够的内存，才会抛出内存溢出异常。\",\"弱引用 (Weak Reference) ：用于描述那些非必须的对象，强度比软引用弱。被弱引用关联对象只能生存到下一次垃圾收集发生时，无论当前内存是否足够，弱引用对象都会被回收。\",\"虚引用 (Phantom Reference) ：最弱的引用关系。为一个对象设置虚引用关联的唯一目的只是为了能在这个对象被回收时收到一个系统通知。\"]},\"271\":{\"h\":\"类与类加载\"},\"272\":{\"h\":\"参考文章\",\"t\":[\"Java JVM 虚拟机\"]},\"273\":{\"c\":[\"编程\"]},\"274\":{\"c\":[\"Java\"]},\"275\":{\"h\":\"Java 基础知识查缺补漏\"},\"276\":{\"h\":\"二进制\"},\"277\":{\"h\":\"反码\",\"t\":[\"正数反码是其本身\",\"负数的反码是在其原码的基础上, 符号位不变，其余各个位取反\",\"1+(-1) = 0001 + 1110 = 1111 => -0 （直接相加，这样就简单多了！） \"]},\"278\":{\"h\":\"补码\",\"t\":[\"​ Java 最终的解决方案是补码\",\"正数的补码就是其本身 （不变！）\",\"负数的补码是在其原码的基础上, 符号位不变, 其余各位取反, 最后+1（即在反码的基础上+1，此时1000表示-8）\",\"对补码再求一次补码就可得该补码对应的原码\",\"比如-7原码为1111，反码为1000，补码就是1001了，-6原码为1110，反码为1001，补码就是1010。所以在补码下，原本的1000就作为新增的最小值-8存在。\",\"1+(-1) = 0001 + 1111 = (1)0000 => +0 （现在无论你怎么算，也不会有-0了！） \",\"所以现在，1111代表的不再是-0，而是-1，相应的，由于消除-0，负数多出来一个可以表示的数（1000拿去表示-8了），那么此时4bit位能够表示的范围是：-8~+7（Java使用的就是补码！）在了解了计算机底层的数据表示形式之后，我们再来学习这些基本数据类型就会很轻松了。\"]},\"279\":{\"h\":\"斐波那契数列\",\"t\":[\"斐波那契数列（Fibonacci sequence），又称黄金分割数列，因数学家莱昂纳多·斐波那契（Leonardo Fibonacci）以兔子繁殖为例子而引入，故又称为“兔子数列”，指的是这样一个数列：**1、1、2、3、5、8、13、21、34、……*在数学上，斐波那契数列以如下被以递推的方法定义：F(0)=0，F(1)=1, F(n)=F(n - 1)+F(n - 2)（n ≥ 2，n ∈ N）在现代物理、准晶体结构、化学等领域，斐波纳契数列都有直接的应用，为此，美国数学会从 1963 年起出版了以《斐波纳契数列季刊》为名的一份数学杂志，用于专门刊载这方面的研究成果。 \",\"斐波那契数列：1，1，2，3，5，8，13，21，34，55，89...，不难发现一个规律，实际上从第三个数开始，每个数字的值都是前两个数字的和，现在请你设计一个Java程序，可以获取斐波那契数列上任意一位的数字，比如获取第5个数，那么就是5。\",\"public static void main(String[] args) { int target = 7, result; //target是要获取的数，result是结果 //请在这里实现算法 int a=1,b=1,tmp; for(int i =1;i < target;i++) { tmp = a+b; a=b; b=tmp; } result = a; System.out.println(result); } \"]},\"280\":{\"h\":\"Lambda 表达式\",\"t\":[\"如果一个接口中有且只有一个待实现的抽象方法，那么我们可以将匿名内部类简写为 Lambda 表达式\",\"标准格式为：([参数类型 参数名称,]...) ‐> { 代码语句，包括返回值 }\",\"和匿名内部类不同，Lambda仅支持接口，不支持抽象类\",\"接口内部必须有且仅有一个抽象方法（可以有多个方法，但是必须保证其他方法有默认实现，必须留一个抽象方法出来）\"]},\"281\":{\"h\":\"函数式接口\",\"t\":[\"函数式接口就是JDK1.8专门为我们提供好的用于Lambda表达式的接口，这些接口都可以直接使用Lambda表达式，非常方便，这里我们主要介绍一下四个主要的函数式接口：\",\"**Supplier供给型函数式接口：**这个接口是专门用于供给使用的，其中只有一个get方法用于获取需要的对象。\",\"@FunctionalInterface //函数式接口都会打上这样一个注解 public interface Supplier<T> { T get(); //实现此方法，实现供给功能 } \",\"比如我们要实现一个专门供给Student对象Supplier，就可以使用：\",\"public class Student { public void hello(){ System.out.println(\\\"我是学生！\\\"); } } \",\"//专门供给Student对象的Supplier private static final Supplier<Student> STUDENT_SUPPLIER = Student::new; public static void main(String[] args) { Student student = STUDENT_SUPPLIER.get(); student.hello(); } \",\"**Consumer消费型函数式接口：**这个接口专门用于消费某个对象的。\",\"@FunctionalInterface public interface Consumer<T> { void accept(T t); //这个方法就是用于消费的，没有返回值 default Consumer<T> andThen(Consumer<? super T> after) { //这个方法便于我们连续使用此消费接口 Objects.requireNonNull(after); return (T t) -> { accept(t); after.accept(t); }; } } \",\"使用起来也是很简单的：\",\"//专门消费Student对象的Consumer private static final Consumer<Student> STUDENT_CONSUMER = student -> System.out.println(student+\\\" 真好吃！\\\"); public static void main(String[] args) { Student student = new Student(); STUDENT_CONSUMER.accept(student); } \",\"​ 当然，我们也可以使用andThen方法继续调用：\",\"//专门消费Student对象的Consumer private static final Consumer<Student> STUDENT_CONSUMER = student -> System.out.println(student+\\\" 真好吃！\\\"); public static void main(String[] args) { Student student = new Student(); STUDENT_CONSUMER //我们可以提前将消费之后的操作以同样的方式预定好 .andThen(stu -> System.out.println(\\\"我是吃完之后的操作！\\\")) .andThen(stu -> System.out.println(\\\"好了好了，吃饱了！\\\")) .accept(student); //预定好之后，再执行 } \",\"**Function函数型函数式接口：**这个接口消费一个对象，然后会向外供给一个对象（前两个的融合体）\",\"@FunctionalInterface public interface Function<T, R> { R apply(T t); //这里一共有两个类型参数，其中一个是接受的参数类型，还有一个是返回的结果类型 default <V> Function<V, R> compose(Function<? super V, ? extends T> before) { Objects.requireNonNull(before); return (V v) -> apply(before.apply(v)); } default <V> Function<T, V> andThen(Function<? super R, ? extends V> after) { Objects.requireNonNull(after); return (T t) -> after.apply(apply(t)); } static <T> Function<T, T> identity() { return t -> t; } } \",\"这个接口方法有点多，我们一个一个来看，首先还是最基本的apply方法，这个是我们需要实现的：\",\"//这里实现了一个简单的功能，将传入的int参数转换为字符串的形式 private static final Function<Integer, String> INTEGER_STRING_FUNCTION = Object::toString; public static void main(String[] args) { String str = INTEGER_STRING_FUNCTION.apply(10); System.out.println(str); } \",\"我们可以使用compose将指定函数式的结果作为当前函数式的实参：\",\"public static void main(String[] args) { String str = INTEGER_STRING_FUNCTION .compose((String s) -> s.length()) //将此函数式的返回值作为当前实现的实参 .apply(\\\"\\\"); //传入上面函数式需要的参数 System.out.println(str); } \",\"相反的，andThen可以将当前实现的返回值进行进一步的处理，得到其他类型的值：\",\"public static void main(String[] args) { Boolean str = INTEGER_STRING_FUNCTION .andThen(String::isEmpty) //在执行完后，返回值作为参数执行andThen内的函数式，最后得到的结果就是最终的结果了 .apply(10); System.out.println(str); } \",\"比较有趣的是，Function中还提供了一个将传入参数原样返回的实现：\",\"public static void main(String[] args) { Function<String, String> function = Function.identity(); //原样返回 System.out.println(function.apply(\\\"不会吧不会吧，不会有人听到现在还是懵逼的吧\\\")); } \",\"**Predicate断言型函数式接口：**接收一个参数，然后进行自定义判断并返回一个boolean结果。\",\"@FunctionalInterface public interface Predicate<T> { boolean test(T t); //这个方法就是我们要实现的 default Predicate<T> and(Predicate<? super T> other) { Objects.requireNonNull(other); return (t) -> test(t) && other.test(t); } default Predicate<T> negate() { return (t) -> !test(t); } default Predicate<T> or(Predicate<? super T> other) { Objects.requireNonNull(other); return (t) -> test(t) || other.test(t); } static <T> Predicate<T> isEqual(Object targetRef) { return (null == targetRef) ? Objects::isNull : object -> targetRef.equals(object); } } \",\"我们可以来编写一个简单的例子：\",\"public class Student { public int score; } \",\"private static final Predicate<Student> STUDENT_PREDICATE = student -> student.score >= 60; public static void main(String[] args) { Student student = new Student(); student.score = 80; if(STUDENT_PREDICATE.test(student)) { //test方法的返回值是一个boolean结果 System.out.println(\\\"及格了，真不错，今晚奖励自己一次\\\"); } else { System.out.println(\\\"不是，Java都考不及格？隔壁初中生都在打ACM了\\\"); } } \",\"我们也可以使用组合条件判断：\",\"public static void main(String[] args) { Student student = new Student(); student.score = 80; boolean b = STUDENT_PREDICATE .and(stu -> stu.score > 90) //需要同时满足这里的条件，才能返回true .test(student); if(!b) System.out.println(\\\"Java到现在都没考到90分？你的室友都拿国家奖学金了\\\"); } \",\"同样的，这个类型提供了一个对应的实现，用于判断两个对象是否相等：\",\"public static void main(String[] args) { Predicate<String> predicate = Predicate.isEqual(\\\"Hello World\\\"); //这里传入的对象会和之后的进行比较 System.out.println(predicate.test(\\\"Hello World\\\")); } \"]},\"282\":{\"h\":\"\"},\"283\":{\"h\":\"线性表：顺序表\"},\"284\":{\"h\":\"线性表：链表\"},\"285\":{\"h\":\"线性表：栈\",\"t\":[\"​ 先进后出\"]},\"286\":{\"h\":\"线性表：队列\",\"t\":[\"​ 先进先出\"]},\"287\":{\"h\":\"树：二叉树\",\"t\":[\"我们一般称位于最上方的结点为树的根结点（Root）因为整棵树正是从这里开始延伸出去的。\",\"每个结点连接的子结点数目（分支的数目），我们称为结点的度（Degree），而各个结点度的最大值称为树的度。\",\"每个结点延伸下去的下一个结点都可以称为一棵子树（SubTree）比如结点B及其之后延伸的所有分支合在一起，就是一棵A的子树。\",\"每个结点的层次（Level）按照从上往下的顺序，树的根结点为1，每向下一层+1，比如G的层次就是3，整棵树中所有结点的最大层次，就是这颗树的深度（Depth），比如上面这棵树的深度为4，因为最大层次就是4。\",\"由于整棵树错综复杂，所以说我们需要先规定一下结点之间的称呼，就像族谱那样：\",\"与当前结点直接向下相连的结点，我们称为子结点（Child），比如B、C、D结点，都是A的子结点，就像族谱中的父子关系一样，下一代一定是子女，相反的，那么A就是B、C、D的父结点（Parent），也可以叫双亲结点。\",\"如果某个节点没有任何的子结点（结点度为0时）那么我们称这个结点为叶子结点（因为已经到头了，后面没有分支了，这时就该树枝上长叶子了那样）比如K、L、F、G、M、I、J结点，都是叶子结点。\",\"如果两个结点的父结点是同一个，那么称这两个节点为兄弟结点（Sibling）比如B和C就是兄弟结点，因为都是A的孩子。\",\"从根结点开始一直到某个结点的整条路径的所有结点，都是这个结点的祖先结点（Ancestor）比如L的祖先结点就是A、B、E\"]},\"288\":{\"h\":\"二叉查找树和平衡二叉树\",\"t\":[\"平衡二叉树一定是一棵二叉查找树。\",\"任意结点的左右子树也是一棵平衡二叉树。\",\"从根节点开始，左右子树都高度差不能超过1，否则视为不平衡。\"]},\"289\":{\"h\":\"树：红黑树\",\"t\":[\"规则1：每个结点可以是黑色或是红色。\",\"规则2：根结点一定是黑色。\",\"规则3：红色结点的父结点和子结点不能为红色，也就是说不能有两个连续的红色。\",\"规则4：所有的空结点都是黑色（空结点视为NIL，红黑树中是将空节点视为叶子结点）\",\"规则5：每个结点到空节点（NIL）路径上出现的黑色结点的个数都相等。\"]},\"290\":{\"h\":\"哈希表\"},\"291\":{\"h\":\"集合类与 IO\",\"t\":[\"数组的大小是固定的，集合的大小是可变的。\",\"数组可以存放基本数据类型，但集合只能存放对象。\",\"数组存放的类型只能是一种，但集合可以有不同种类的元素。\"]},\"292\":{\"h\":\"List 列表\",\"t\":[\"是一个有序的集合，插入元素默认是插入到尾部，按顺序从前往后存放，每个元素都有一个自己的下标位置\",\"列表中允许存在重复元素\"]},\"293\":{\"h\":\"Queue 和 Deque（双端队列）\",\"t\":[\"通过前面的学习，我们已经了解了List的使用，其中LinkedList除了可以直接当做列表使用之外，还可以当做其他的数据结构使用，可以看到它不仅仅实现了List接口：\",\"public class LinkedList<E> extends AbstractSequentialList<E> implements List<E>, Deque<E>, Cloneable, java.io.Serializable { \",\"普通队列中从队尾入队，队首出队，而双端队列允许在队列的两端进行入队和出队操作：\"]},\"294\":{\"h\":\"Set 集合\",\"t\":[\"不允许出现重复元素\",\"不支持随机访问（不允许通过下标访问）\"]},\"295\":{\"h\":\"Map 映射\",\"t\":[\"HashMap支持自动扩容，哈希表的大小并不是一直不变的，否则太过死板\",\"HashMap并不是只使用简单的链地址法，当链表长度到达一定限制时，会转变为效率更高的红黑树结构\"]},\"296\":{\"h\":\"文件字节流\",\"t\":[\"FileInputStream\",\"FileOutputStream\",\"注意：一次性读取同单个读取一样，当没有任何数据可读时，依然会返回-1\"]},\"297\":{\"h\":\"字符流\",\"t\":[\"字符流不同于字节，字符流是以一个具体的字符进行读取，因此它只适合读纯文本的文件，如果是其他类型的文件不适用：\",\"FileReader\",\"FileWriter\"]},\"298\":{\"h\":\"缓冲流\",\"t\":[\"虽然普通的文件流读取文件数据非常便捷，但是每次都需要从外部I/O设备去获取数据，由于外部I/O设备的速度一般都达不到内存的读取速度，很有可能造成程序反应迟钝，因此性能还不够高，而缓冲流正如其名称一样，它能够提供一个缓冲，提前将部分内容存入内存（缓冲区）在下次读取时，如果缓冲区中存在此数据，则无需再去请求外部设备。同理，当向外部设备写入数据时，也是由缓冲区处理，而不是直接向外部设备写入。\",\"BufferedInputStream\",\"BufferedOutputStream\",\"public static void main(String[] args) { try (BufferedInputStream bufferedInputStream = new BufferedInputStream(new FileInputStream(\\\"test.txt\\\"))){ //传入FileInputStream System.out.println((char) bufferedInputStream.read()); //操作和原来的流是一样的 }catch (IOException e){ e.printStackTrace(); } } \",\"实际上进行I/O操作的并不是BufferedInputStream，而是我们传入的FileInputStream，而BufferedInputStream虽然有着同样的方法，但是进行了一些额外的处理然后再调用FileInputStream的同名方法，这样的写法称为装饰者模式，我们可以来观察一下它的close方法源码：\",\"public void close() throws IOException { byte[] buffer; while ( (buffer = buf) != null) { if (bufUpdater.compareAndSet(this, buffer, null)) { //CAS无锁算法，并发会用到，暂时不需要了解 InputStream input = in; in = null; if (input != null) input.close(); return; } // Else retry in case a new buf was CASed in fill() } } \"]},\"299\":{\"h\":\"转换流\",\"t\":[\"有时会遇到这样一个很麻烦的问题：我这里读取的是一个字符串或是一个个字符，但是我只能往一个OutputStream里输出，但是OutputStream又只支持byte类型，如果要往里面写入内容，进行数据转换就会很麻烦，那么能否有更加简便的方式来做这样的事情呢？\",\"InputStreamReader\",\"OutputStreamWriter\",\"public static void main(String[] args) { try(OutputStreamWriter writer = new OutputStreamWriter(new FileOutputStream(\\\"test.txt\\\"))){ //虽然给定的是FileOutputStream，但是现在支持以Writer的方式进行写入 writer.write(\\\"lbwnb\\\"); //以操作Writer的样子写入OutputStream }catch (IOException e){ e.printStackTrace(); } } \",\"public static void main(String[] args) { try(InputStreamReader reader = new InputStreamReader(new FileInputStream(\\\"test.txt\\\"))){ //虽然给定的是FileInputStream，但是现在支持以Reader的方式进行读取 System.out.println((char) reader.read()); }catch (IOException e){ e.printStackTrace(); } } \"]},\"300\":{\"h\":\"打印流\",\"t\":[\"PrintStream\"]},\"301\":{\"h\":\"数据流\",\"t\":[\"数据流DataInputStream也是FilterInputStream的子类，同样采用装饰者模式，最大的不同是它支持基本数据类型的直接读取：\",\"DataInputStream\",\"DataOutputStream\"]},\"302\":{\"h\":\"对象流\",\"t\":[\"既然基本数据类型能够读取和写入基本数据类型，那么能否将对象也支持呢？ObjectOutputStream不仅支持基本数据类型，通过对对象的序列化操作，以某种格式保存对象，来支持对象类型的IO，注意：它不是继承自FilterInputStream的。\",\"ObjectInputStream\",\"ObjectOutputStream\"]},\"303\":{\"h\":\"多线程与反射\"},\"304\":{\"h\":\"线程的休眠和中断\",\"t\":[\"当CPU给予的运行时间结束时，会从运行状态回到就绪（可运行）状态，等待下一次获得CPU资源。\",\"当线程进入休眠 / 阻塞(如等待IO请求) / 手动调用wait()方法时，会使得线程处于等待状态，当等待状态结束后会回到就绪状态。\",\"当线程出现异常或错误 / 被stop() 方法强行停止 / 所有代码执行结束时，会使得线程的运行终止。\"]},\"305\":{\"h\":\"线程优先级\",\"t\":[\"MIN_PRIORITY 最低优先级\",\"MAX_PRIORITY 最高优先级\",\"NOM_PRIORITY 常规优先级\",\"public static void main(String[] args) { Thread t = new Thread(() -> { System.out.println(\\\"线程开始运行！\\\"); }); t.start(); t.setPriority(Thread.MIN_PRIORITY); //通过使用setPriority方法来设定优先级 } \"]},\"306\":{\"h\":\"线程的礼让和加入\",\"t\":[\"我们还可以在当前线程的工作不重要时，将CPU资源让位给其他线程，通过使用yield()方法来将当前资源让位给其他同优先级线程：\",\"public static void main(String[] args) { Thread t1 = new Thread(() -> { System.out.println(\\\"线程1开始运行！\\\"); for (int i = 0; i < 50; i++) { if(i % 5 == 0) { System.out.println(\\\"让位！\\\"); Thread.yield(); } System.out.println(\\\"1打印：\\\"+i); } System.out.println(\\\"线程1结束！\\\"); }); Thread t2 = new Thread(() -> { System.out.println(\\\"线程2开始运行！\\\"); for (int i = 0; i < 50; i++) { System.out.println(\\\"2打印：\\\"+i); } }); t1.start(); t2.start(); } \",\"当我们希望一个线程等待另一个线程执行完成后再继续进行，我们可以使用join()方法来实现线程的加入：\",\"public static void main(String[] args) { Thread t1 = new Thread(() -> { System.out.println(\\\"线程1开始运行！\\\"); for (int i = 0; i < 50; i++) { System.out.println(\\\"1打印：\\\"+i); } System.out.println(\\\"线程1结束！\\\"); }); Thread t2 = new Thread(() -> { System.out.println(\\\"线程2开始运行！\\\"); for (int i = 0; i < 50; i++) { System.out.println(\\\"2打印：\\\"+i); if(i == 10){ try { System.out.println(\\\"线程1加入到此线程！\\\"); t1.join(); //在i==10时，让线程1加入，先完成线程1的内容，在继续当前内容 } catch (InterruptedException e) { e.printStackTrace(); } } } }); t1.start(); t2.start(); } \"]},\"307\":{\"h\":\"线程锁和线程同步\",\"t\":[\"synchronized\"]},\"308\":{\"h\":\"死锁\",\"t\":[\"其实死锁的概念在操作系统中也有提及，它是指两个线程相互持有对方需要的锁，但是又迟迟不释放，导致程序卡住：\",\"jconsole 可以监测\"]},\"309\":{\"h\":\"wait 和 notify 方法\",\"t\":[\"其实我们之前可能就发现了，Object类还有三个方法我们从来没有使用过，分别是wait()、notify()以及notifyAll()，他们其实是需要配合synchronized来使用的（实际上锁就是依附于对象存在的，每个对象都应该有针对于锁的一些操作，所以说就这样设计了）当然，只有在同步代码块中才能使用这些方法，正常情况下会报错，我们来看看他们的作用是什么：\",\"public static void main(String[] args) throws InterruptedException { Object o1 = new Object(); Thread t1 = new Thread(() -> { synchronized (o1){ try { System.out.println(\\\"开始等待\\\"); o1.wait(); //进入等待状态并释放锁 System.out.println(\\\"等待结束！\\\"); } catch (InterruptedException e) { e.printStackTrace(); } } }); Thread t2 = new Thread(() -> { synchronized (o1){ System.out.println(\\\"开始唤醒！\\\"); o1.notify(); //唤醒处于等待状态的线程 for (int i = 0; i < 50; i++) { System.out.println(i); } //唤醒后依然需要等待这里的锁释放之前等待的线程才能继续 } }); t1.start(); Thread.sleep(1000); t2.start(); } \",\"我们可以发现，对象的wait()方法会暂时使得此线程进入等待状态，同时会释放当前代码块持有的锁，这时其他线程可以获取到此对象的锁，当其他线程调用对象的notify()方法后，会唤醒刚才变成等待状态的线程（这时并没有立即释放锁）。注意，必须是在持有锁（同步代码块内部）的情况下使用，否则会抛出异常！\",\"notifyAll其实和notify一样，也是用于唤醒，但是前者是唤醒所有调用wait()后处于等待的线程，而后者是看运气随机选择一个。\"]},\"310\":{\"h\":\"ThreaLocal\",\"t\":[\"我们可以使用ThreadLocal类，来创建工作内存中的变量，它将我们的变量值存储在内部（只能存储一个变量），不同的线程访问到ThreadLocal对象时，都只能获取到当前线程所属的变量。\",\"而使用 InheritableThreadLocal 存放的内容，会自动向子线程传递。\"]},\"311\":{\"h\":\"定时器\"},\"312\":{\"h\":\"守护线程\",\"t\":[\"不要把操作系统重的守护进程和守护线程相提并论！\",\"守护进程在后台运行运行，不需要和用户交互，本质和普通进程类似。而守护线程就不一样了，当其他所有的非守护线程结束之后，守护线程自动结束，也就是说，Java中所有的线程都执行完毕后，守护线程自动结束，因此守护线程不适合进行IO操作，只适合打打杂：\",\"public static void main(String[] args) throws InterruptedException{ Thread t = new Thread(() -> { while (true){ try { System.out.println(\\\"程序正常运行中...\\\"); Thread.sleep(1000); } catch (InterruptedException e) { e.printStackTrace(); } } }); t.setDaemon(true); //设置为守护线程（必须在开始之前，中途是不允许转换的） t.start(); for (int i = 0; i < 5; i++) { Thread.sleep(1000); } } \"]},\"313\":{\"h\":\"Java 类加载机制\",\"t\":[\"加载 ->连接（验证->准备->解析）->初始化->使用->卸载\"]},\"314\":{\"h\":\"反射创建类对象\"},\"315\":{\"h\":\"反射调用类方法\"},\"316\":{\"h\":\"反射修改类的属性\"},\"317\":{\"h\":\"类加载器\",\"t\":[\"**思考：**既然说Class对象和加载的类唯一对应，那如果我们手动创建一个与JDK包名一样，同时类名也保持一致，JVM会加载这个类吗？\",\"ClassLoader 的双亲委派机制在保护 Java 程序的正常运\",\"实际上类最开始是由BootstarpClassLoader进行加载，BootstarpClassLoader用于加载JDK提供的类，而我们自己编写的类实际上是AppClassLoader加载的，只有BootstarpClassLoader都没有加载的类，才会让AppClassLoader来加载，因此我们自己编写的同名包同名类不会被加载，而实际要去启动的是真正的String类，也就自然找不到main方法了。\"]},\"318\":{\"h\":\"注解\"},\"319\":{\"h\":\"预设注解\",\"t\":[\"JDK预设了以下注解，作用于代码： \",\"@Override - 检查（仅仅是检查，不保留到运行时）该方法是否是重写方法。如果发现其父类，或者是引用的接口中并没有该方法时，会报编译错误。\",\"@Deprecated - 标记过时方法。如果使用该方法，会报编译警告。\",\"@SuppressWarnings - 指示编译器去忽略注解中声明的警告（仅仅编译器阶段，不保留到运行时）\",\"@FunctionalInterface - Java 8 开始支持，标识一个匿名函数或函数式接口。\",\"@SafeVarargs - Java 7 开始支持，忽略任何使用参数为泛型变量的方法或构造函数调用产生的警告。\"]},\"320\":{\"h\":\"元注解\",\"t\":[\"元注解是作用于注解上的注解，用于我们编写自定义的注解： \",\"@Retention - 标识这个注解怎么保存，是只在代码中，还是编入class文件中，或者是在运行时可以通过反射访问。\",\"@Documented - 标记这些注解是否包含在用户文档中。\",\"@Target - 标记这个注解应该是哪种 Java 成员。\",\"@Inherited - 标记这个注解是继承于哪个注解类(默认 注解并没有继承于任何子类)\",\"@Repeatable - Java 8 开始支持，标识某注解可以在同一个声明上使用多次。\"]},\"321\":{\"h\":\"参考文章\",\"t\":[\"Java SE 笔记\"]},\"322\":{\"c\":[\"编程\"]},\"323\":{\"c\":[\"Java\"]},\"324\":{\"h\":\"Prometheus 搭配 Grafana 监控 Spring boot 项目\"},\"325\":{\"h\":\"Spring boot 配置\",\"t\":[\"@EnableWebMvc @Configuration @ComponentScan public class MyWebMvcConfigurer implements WebMvcConfigurer { @Autowired private RolePermissionInterceptor rolePermissionInterceptor; @Value(\\\"${spring.security.whitelist:}\\\") private String[] ipWhitelist; @Override public void configureMessageConverters(List<HttpMessageConverter<?>> converters) { converters.add(stringConverter()); converters.add(fastJsonHttpMessageConverters()); //无论白名单和黑名单，都不支持autoType ParserConfig.getGlobalInstance().setSafeMode(true); } /** * 修改默认的JSON实现为FastJson */ @Bean public FastJsonHttpMessageConverter fastJsonHttpMessageConverters() { FastJsonHttpMessageConverter httpMessageConverter = new FastJsonHttpMessageConverter(); httpMessageConverter.setFastJsonConfig(getFastJsonConfig()); httpMessageConverter.setDefaultCharset(Charset.forName(\\\"UTF-8\\\")); return httpMessageConverter; } private FastJsonConfig getFastJsonConfig() { FastJsonConfig fastJsonConfig = new FastJsonConfig(); fastJsonConfig.setDateFormat(\\\"yyyy-MM-dd HH:mm:ss.SSS\\\"); fastJsonConfig.setCharset(Charset.forName(\\\"UTF-8\\\")); fastJsonConfig.setSerializerFeatures( SerializerFeature.WriteMapNullValue, SerializerFeature.QuoteFieldNames, SerializerFeature.WriteNullListAsEmpty, // SerializerFeature.WriteEnumUsingToString, SerializerFeature.WriteDateUseDateFormat); return fastJsonConfig; } // 若使用 fastjson 则需要针对特殊处理 public HttpMessageConverter<String> stringConverter() { StringHttpMessageConverter converter = new StringHttpMessageConverter( Charset.forName(\\\"UTF-8\\\")); List<MediaType> supportedMediaTypes = new ArrayList<>(); //提供只针对 prometheus 所用到类型支持 mediaType supportedMediaTypes.add(MediaType.valueOf(\\\"application/openmetrics-text;version=1.0.0;charset=utf-8\\\")); converter.setSupportedMediaTypes(supportedMediaTypes); return converter; } private String whiteListConvert() { StringBuilder result = new StringBuilder(); if (ipWhitelist.length == 0) { result.append(\\\"authenticated\\\"); } else { for (String ip : ipWhitelist) { if (result.length() == 0) { //authenticated 允许认证用户访问 hasIpAddress 允许来自特定 IP 地址的用户进行访问 result.append(String.format(\\\"authenticated and ( hasIpAddress('%s')\\\", ip)); } else { result.append(String.format(\\\" or hasIpAddress('%s')\\\", ip)); } } result.append(\\\")\\\"); } return result.toString(); } @Bean public SecurityFilterChain filterChain(HttpSecurity http) throws Exception { //对actuator监控所用的访问全部需要认证 return http// by default uses a Bean by the name of corsConfigurationSource .cors() .and().csrf().disable() //跨域请求会先进行一次options请求 .authorizeRequests().antMatchers(HttpMethod.OPTIONS).permitAll() // 登录成功后重定向的页面 .and().formLogin().defaultSuccessUrl(\\\"/actuator/prometheus\\\", true) // 验证 .and().authorizeRequests().antMatchers(\\\"/actuator\\\").access(whiteListConvert()) .and().authorizeRequests().antMatchers(\\\"/actuator/**\\\").access(whiteListConvert()) // 一定要执行下面这一句，否则prometheus无法自动登录会提示：\\\"INVALID\\\" is not a valid start token .and().httpBasic() .and().build(); } } \"]},\"326\":{\"h\":\"Docker 部署 Prometheus 和 Grafana\"},\"327\":{\"h\":\"Prometheus 配置文件\",\"t\":[\"global: scrape_interval: 10s # 每10秒采集一次数据 evaluation_interval: 10s # 每10秒检测一次告警 scrape_configs: - job_name: current_system static_configs: - targets: ['127.0.0.1:9090'] labels: instance: system - job_name: app_system # 任务名称 metrics_path: '/actuator/prometheus' # 后台通过actuator暴露的URI # Security认证的用户名及密码 basic_auth: username: admin password: 123 static_configs: - targets: ['ip:port'] # 后台IP和PORT labels: id: api instance: springboot # 实例名称 \"]},\"328\":{\"h\":\"Docker-Compose 配置文件\",\"t\":[\"version: '3' services: prometheus: container_name: prometheus image: prom/prometheus:v2.39.1 # 挂载存在权限问题需要指定用户 user: root # 挂载 宿主主机路径:容器内路径 volumes: - ./prometheus.yml:/etc/prometheus/prometheus.yml - ./prometheus_data/:/prometheus # 端口映射 主机端口 : 容器内部端口 ports: - \\\"9090:9090\\\" #保持重启之后跟随启动 restart: always network_mode: bridge grafana: container_name: grafana image: grafana/grafana:9.2.3 # 挂载存在权限问题需要指定用户 user: root # 挂载 宿主主机路径:容器内路径 volumes: - ./grafana_data:/var/lib/grafana ports: - \\\"3000:3000\\\" restart: always #指定网络模式,否则需要通过links指定数据库的容器名,且配置文件需要将ip改成容器名 network_mode: bridge #指定启动顺序 depends_on: - prometheus \"]},\"329\":{\"h\":\"Grafana 配置 Prometheus 数据源\",\"t\":[\"先配置好数据源。\",\"Dashboards 可以导入 16143 模板然后选择对应的数据源即可。\"]},\"330\":{\"c\":[\"编程\"]},\"331\":{\"c\":[\"Prometheus\",\"Grafana\",\"Java\",\"Spring boot\"]},\"332\":{\"h\":\"Type 类型\"},\"333\":{\"h\":\"Type 接口简介\",\"t\":[\"Type 是 Java 语言中所有类型的公共父接口，其从 JDK5 开始引入，引入的目的主要是为了支持泛型。\",\"没有泛型的之前，Java 只有所谓的原始类型(raw types)。此时，所有的原始类型都通过字节码类 Class 进行抽象。Class 类的一个具体对象(例如 String.class)就代表一个指定的原始类型。\",\"泛型的出现扩充了数据类型的概念，从只有原始类型(raw types)扩充了参数化类型、类型变量类型、泛型数组类型和通配符类型。他们都是 Type 的子接口。\"]},\"334\":{\"h\":\"如何获取泛型的参数类型？\",\"t\":[\"java.lang.reflect.Type 是 Java 中所有类型的公共高级接口, 代表了 Java 中的所有类型. Type 体系中类型的包括：数组类型 (GenericArrayType)、参数化类型 (ParameterizedType)、类型变量 (TypeVariable)、通配符类型 (WildcardType)、原始类型 (Class)、基本类型 (Class), 以上这些类型都实现 Type 接口。\",\"AOP 切片通过反射方式屏蔽限制值:\",\" @Aspect @Component @ComponentScan @EnableAspectJAutoProxy public class DisplayHandlerAspect { @Autowired private SecurityService securityService; @Pointcut(\\\"@annotation(com.*)\\\") public void handler() { //切入点 } /** * 对方法拦截后对字段显示进行判断 * * @param joinPoint * @return */ @Around(\\\"handler()\\\") public Object handler(ProceedingJoinPoint joinPoint) throws Throwable { ResponseEntity result; //限制字段集合 Set<Field> limitSet = new HashSet<>(); //Signature 封装方法相关的信息 Signature signature = joinPoint.getSignature(); MethodSignature methodSignature; $$.E.valid(!(signature instanceof MethodSignature),new IllegalArgumentException(\\\"该注解只能用于方法上\\\")); methodSignature = (MethodSignature) signature; Method method = methodSignature.getMethod(); result = (ResponseEntity) joinPoint.proceed(); //获取 Method 返回的 Type Type returnType = method.getGenericReturnType(); //判断是 ParameterizedType 参数化类型，循环获取最终 Class 类型。 while (returnType instanceof ParameterizedType) { returnType = ((ParameterizedType) returnType).getActualTypeArguments()[0]; } //数组类型 Class 需要特殊处理 Class returnClass = ((Class<?>) returnType); Field[] fieldSet = ReflectUtil.getFields(returnClass.isArray() ? returnClass.getComponentType() : returnClass); /** limitSet 有了 Field 数组可以根据注解去获取 **/ if (result.getStatusCode() == HttpStatus.OK && $$.V.isNotEmpty(limitSet)) { Object srcValue = result.getBody(); if (srcValue instanceof PageLite) { ((PageLite<?>) srcValue).getData().forEach(o -> convert(o, limitSet)); } else if (srcValue instanceof Page) { ((Page<?>) srcValue).getData().forEach(o -> convert(o, limitSet)); } else if (srcValue instanceof List) { ((List<?>) srcValue).forEach(o -> convert(o, limitSet)); } else if (srcValue instanceof Object[]) { for (Object o : (Object[]) srcValue) { convert(o, limitSet); } } else { convert(srcValue, limitSet); } } return result; } /** * 通过反射将对应限制值设置为 null * @param obj * @param limitSet * @return */ private void convert(Object obj, Set<Field> limitSet) { for (Field key : limitSet) { ReflectUtil.setFieldValue(obj,key,null); } } } \",\"ParameterizedType 表示参数化类型，带有类型参数的类型，即常说的泛型，如：List<T>、Map<Integer, String>、List<? extends Number>。:\",\"public interface ParameterizedType extends Type { // 返回确切的泛型参数, 如 Map<String, Integer> 返回 [String, Integer] Type[] getActualTypeArguments(); //返回当前 class 或 interface 声明的类型, 如 List<?> 返回 List Type getRawType(); //返回所属类型. 如,当前类型为 O<T>.I<S>, 则返回 O<T>. 顶级类型将返回 null Type getOwnerType(); } \",\"class :\",\"public final class Class<T> implements java.io.Serializable, GenericDeclaration, Type, AnnotatedElement { //判断 Class 对象是否表示数组类 public native boolean isArray(); //返回数组组件类型，若是非数组则返回 null public native Class<?> getComponentType(); } \",\"Hutool 反射工具-ReflectUtil:\",\"public class ReflectUtil { /** * 获得一个类中所有字段列表，包括其父类中的字段 * * @param beanClass 类 * @return 字段列表 * @throws SecurityException 安全检查异常 */ public static Field[] getFields(Class<?> beanClass) throws SecurityException { Field[] allFields = FIELDS_CACHE.get(beanClass); if (null != allFields) { return allFields; } allFields = getFieldsDirectly(beanClass, true); return FIELDS_CACHE.put(beanClass, allFields); } /** * 获得一个类中所有字段列表，直接反射获取，无缓存 * * @param beanClass 类 * @param withSuperClassFieds 是否包括父类的字段列表 * @return 字段列表 * @throws SecurityException 安全检查异常 */ public static Field[] getFieldsDirectly(Class<?> beanClass, boolean withSuperClassFieds) throws SecurityException { Assert.notNull(beanClass); Field[] allFields = null; Class<?> searchType = beanClass; Field[] declaredFields; while (searchType != null) { declaredFields = searchType.getDeclaredFields(); if (null == allFields) { allFields = declaredFields; } else { allFields = ArrayUtil.append(allFields, declaredFields); } searchType = withSuperClassFieds ? searchType.getSuperclass() : null; } return allFields; } } \"]},\"335\":{\"h\":\"参考文章\",\"t\":[\"Type 类型 泛型 反射 Class ParameterizedType\",\"Java 基础 - 泛型机制详解\",\"Hutool 反射工具-ReflectUtil\"]},\"336\":{\"c\":[\"编程\"]},\"337\":{\"c\":[\"Java\",\"反射\"]},\"338\":{\"h\":\"Rust 语言圣经笔记\"},\"339\":{\"h\":\"Rust 基础入门\",\"t\":[\"主要部分： \",\"变量绑定与解构\",\"基础类型\",\"所有权和借用\",\"复合类型\"]},\"340\":{\"h\":\"变量绑定与解构\"},\"341\":{\"h\":\"变量命名\",\"t\":[\"Rust 命名规范\"]},\"342\":{\"h\":\"变量绑定\",\"t\":[\"因为 Rust 核心原则是-- 所有权，所以绑定含义更准确\"]},\"343\":{\"h\":\"变量可变性\",\"t\":[\"fn main() { // 默认不可变 // 使用下划线开头忽略未使用变量 let _x = 5; // mut 关键字让变量变为可变 let mut _x =5; } \"]},\"344\":{\"h\":\"变量解构\",\"t\":[\"需要注意的是，使用 += 的赋值语句还不支持解构式赋值。\",\"struct Struct { e: i32 } fn main() { let (a, b, c, d, e); (a, b) = (1, 2); // _ 代表匹配一个值，但是我们不关心具体的值是什么，因此没有使用一个变量名而是使用了 _ [c, .., d, _] = [1, 2, 3, 4, 5]; Struct { e, .. } = Struct { e: 5 }; assert_eq!([1, 2, 1, 4, 5], [a, b, c, d, e]); } \"]},\"345\":{\"h\":\"变量和常量之间的差异\",\"t\":[\"常量不允许使用 mut。常量不仅仅默认不可变，而且自始至终不可变，因为常量在编译完成后，已经确定它的值。\",\"常量使用 const 关键字而不是 let 关键字来声明，并且值的类型必须标注。\",\"const MAX_POINTS: u32 = 100_000; \"]},\"346\":{\"h\":\"变量遮蔽(shadowing)\",\"t\":[\"fn main() { let x = 5; // 在main函数的作用域内对之前的x进行遮蔽 let x = x + 1; { // 在当前的花括号作用域内，对之前的x进行遮蔽 let x = x * 2; println!(\\\"The value of x in the inner scope is: {}\\\", x); } println!(\\\"The value of x is: {}\\\", x); } \"]},\"347\":{\"h\":\"课后练习\",\"t\":[\"Rust By Practice，支持代码在线编辑和运行，并提供详细的习题解答。\"]},\"348\":{\"h\":\"整数类型\",\"t\":[\"基础信息 \",\"类型定义的形式统一为：有无符号 + 类型大小(位数)。无符号数表示数字只能取正数和0，而有符号则表示数字可以取正数、负数还有0。\",\"每个有符号类型规定的数字范围是 -(2n - 1) ~ 2n - 1 - 1，其中 n 是该定义形式的位长度。因此 i8 可存储数字范围是 -(27) ~ 27 - 1，即 -128 ~ 127。无符号类型可以存储的数字范围是 0 ~ 2n - 1，所以 u8 能够存储的数字为 0 ~ 28 - 1，即 0 ~ 255。\",\"整形溢出 \",\"假设有一个 u8 ，它可以存放从 0 到 255 的值。那么当你将其修改为范围之外的值，比如 256，则会发生整型溢出。\",\"要显式处理可能的溢出，可以使用标准库针对原始数字类型提供的这些方法： \",\"使用 wrapping_* 方法在所有模式下都按照补码循环溢出规则处理，例如 wrapping_add\",\"如果使用 checked_* 方法时发生溢出，则返回 None 值\",\"使用 overflowing_* 方法返回该值和一个指示是否存在溢出的布尔值\",\"使用 saturating_* 方法使值达到最小值或最大值\"]},\"349\":{\"h\":\"浮点类型\",\"t\":[\"f32 和 f64，分别为 32 位和 64 位大小。默认浮点类型是 f64，在现代的 CPU 中它的速度与 f32 几乎相同，但精度更高。\",\"浮点数陷阱 \",\"浮点数往往是你想要数字的近似表达\",\"浮点数在某些特性上是反直觉的\",\"fn main() { let abc: (f32, f32, f32) = (0.1, 0.2, 0.3); let xyz: (f64, f64, f64) = (0.1, 0.2, 0.3); println!(\\\"abc (f32)\\\"); println!(\\\" 0.1 + 0.2: {:x}\\\", (abc.0 + abc.1).to_bits()); println!(\\\" 0.3: {:x}\\\", (abc.2).to_bits()); println!(); println!(\\\"xyz (f64)\\\"); println!(\\\" 0.1 + 0.2: {:x}\\\", (xyz.0 + xyz.1).to_bits()); println!(\\\" 0.3: {:x}\\\", (xyz.2).to_bits()); println!(); assert!(abc.0 + abc.1 == abc.2); assert!(xyz.0 + xyz.1 == xyz.2); } \",\"输出结果：\",\"abc (f32) 0.1 + 0.2: 3e99999a 0.3: 3e99999a xyz (f64) 0.1 + 0.2: 3fd3333333333334 0.3: 3fd3333333333333 thread 'main' panicked at 'assertion failed: xyz.0 + xyz.1 == xyz.2', ➥ch2-add-floats.rs.rs:14:5 note: run with `RUST_BACKTRACE=1` environment variable to display ➥a backtrace \",\"因为 f64 精度高很多，因此在小数点非常后面发生了一点微小的变化\"]},\"350\":{\"h\":\"位运算\",\"t\":[\"运算符\",\"说明\",\"& 位与\",\"相同位置均为1时则为1，否则为0\",\"| 位或\",\"相同位置只要有1时则为1，否则为0\",\"^ 异或\",\"相同位置不相同则为1，相同则为0\",\"! 位非\",\"把位中的0和1相互取反，即0置为1，1置为0\",\"<< 左移\",\"所有位向左移动指定位数，右位补0\",\">> 右移\",\"所有位向右移动指定位数，带符号移动（正数补0，负数补1\"]},\"351\":{\"h\":\"序列\",\"t\":[\"for i in 1..=5 { println!(\\\"{}\\\",i); } for i in 'a'..='z' { println!(\\\"{}\\\",i); } \"]},\"352\":{\"h\":\"使用 As 完成类型转换\"},\"353\":{\"h\":\"有理数和复数\",\"t\":[\"有理数和复数\",\"任意大小的整数和任意精度的浮点数\",\"固定精度的十进制小数，常用于货币相关的场景\"]},\"354\":{\"h\":\"练习\",\"t\":[\"Rust By Practice，支持代码在线编辑和运行，并提供详细的习题解答。\"]},\"355\":{\"h\":\"字符、布尔、单元类型\"},\"356\":{\"h\":\"字符类型(char)\",\"t\":[\"fn main() { let c = 'z'; let z = 'ℤ'; let g = '国'; let heart_eyed_cat = '😻'; } \",\"由于 Unicode 都是 4 个字节编码，因此字符类型也是占用 4 个字节：\"]},\"357\":{\"h\":\"单元类型\",\"t\":[\"单元类型就是 () ，对，你没看错，就是 () ，唯一的值也是 () ，一些读者读到这里可能就不愿意了，你也太敷衍了吧，管这叫类型？\",\"只能说，再不起眼的东西，都有其用途，在目前为止的学习过程中，大家已经看到过很多次 fn main() 函数的使用吧？那么这个函数返回什么呢？\",\"没错， main 函数就返回这个单元类型 ()，你不能说 main 函数无返回值，因为没有返回值的函数在 Rust 中是有单独的定义的：发散函数( diverge function )，顾名思义，无法收敛的函数。\",\"例如常见的 println!() 的返回值也是单元类型 ()。\",\"再比如，你可以用 () 作为 map 的值，表示我们不关注具体的值，只关注 key。 这种用法和 Go 语言的 struct{} 类似，可以作为一个值用来占位，但是完全不占用任何内存。\"]},\"358\":{\"h\":\"练习\",\"t\":[\"Rust By Practice，支持代码在线编辑和运行，并提供详细的习题解答。\"]},\"359\":{\"h\":\"语句和表达式\"},\"360\":{\"h\":\"语句\",\"t\":[\"let a = 8; let b: Vec<f64> = Vec::new(); let (a, c) = (\\\"hi\\\", false); \",\"以上都是语句，它们完成了一个具体的操作，但是并没有返回值，因此是语句。\"]},\"361\":{\"h\":\"表达式\",\"t\":[\"表达式不能包含分号\",\"例如 5 + 6，在求值后，返回值 11，因此它就是一条表达式\",\"调用一个函数是表达式，因为会返回一个值，调用宏也是表达式，用花括号包裹最终返回一个值的语句块也是表达式，总之，能返回值，它就是表达式:\",\"fn main() { let y = { let x = 3; x + 1 }; println!(\\\"The value of y is: {}\\\", y); } \"]},\"362\":{\"h\":\"练习\",\"t\":[\"Rust By Practice，支持代码在线编辑和运行，并提供详细的习题解答。\"]},\"363\":{\"h\":\"函数\"},\"364\":{\"h\":\"函数要点\",\"t\":[\"函数名和变量名使用蛇形命名法(snake case)，例如 fn add_two() -> {}\",\"函数的位置可以随便放，Rust 不关心我们在哪里定义了函数，只要有定义即可\",\"每个函数参数都需要标注类型\"]},\"365\":{\"h\":\"函数参数\",\"t\":[\"Rust 是强类型语言，因此需要你为每一个函数参数都标识出它的具体类型，例如：\",\"fn main() { another_function(5, 6.1); } fn another_function(x: i32, y: f32) { println!(\\\"The value of x is: {}\\\", x); println!(\\\"The value of y is: {}\\\", y); } \"]},\"366\":{\"h\":\"函数返回\",\"t\":[\"fn plus_or_minus(x:i32) -> i32 { if x > 5 { return x - 5 } x + 5 } fn main() { let x = plus_or_minus(5); println!(\\\"The value of x is: {}\\\", x); } \",\"无返回值\",\"函数没有返回值，那么返回一个 ()\",\"通过 ; 结尾的表达式返回一个 ()\"]},\"367\":{\"h\":\"\",\"t\":[\"当用 ! 作函数返回类型的时候，表示该函数永不返回( diverge function )，特别的，这种语法往往用做会导致程序崩溃的函数：不是很理解\"]},\"368\":{\"h\":\"练习\",\"t\":[\"Rust By Practice，支持代码在线编辑和运行，并提供详细的习题解答。\"]},\"369\":{\"h\":\"所有权\"},\"370\":{\"h\":\"的关系\"},\"371\":{\"h\":\"所有权原则\",\"t\":[\"Rust 中每一个值都被一个变量所拥有，该变量被称为值的所有者 一个值同时只能被一个变量所拥有，或者说一个值只能拥有一个所有者 当所有者(变量)离开作用域范围时，这个值将被丢弃(drop) \"]},\"372\":{\"h\":\"练习\",\"t\":[\"Rust By Practice，支持代码在线编辑和运行，并提供详细的习题解答。\"]},\"373\":{\"h\":\"引用与借用\"},\"374\":{\"h\":\"\"},\"375\":{\"h\":\"\",\"t\":[\"fn main() { let x = 5; let y = &x; assert_eq!(5, x); assert_eq!(5, *y); } \"]},\"376\":{\"h\":\"不可变引用\"},\"377\":{\"h\":\"可变引用\",\"t\":[\"可变引用同时只能存在一个\",\"同一作用域，特定数据只能有一个可变引用\",\"可变引用与不可变引用不能同时存在\"]},\"378\":{\"h\":\"总结\",\"t\":[\"同一时刻，你只能拥有要么一个可变引用, 要么任意多个不可变引用\",\"引用必须总是有效的\"]},\"379\":{\"h\":\"练习\",\"t\":[\"Rust By Practice，支持代码在线编辑和运行，并提供详细的习题解答。\"]},\"380\":{\"h\":\"字符串与切片\"},\"381\":{\"h\":\"字符串\",\"t\":[\"Rust 中的字符是 Unicode 类型，因此每个字符占据 4 个字节内存空间，但是在字符串中不一样，字符串是 UTF-8 编码，也就是字符串中的字符所占的字节数是变化的(1 - 4)\",\"当 Rust 用户提到字符串时，往往指的就是 String 类型和 &str 字符串切片类型，这两个类型都是 UTF-8 编码。\"]},\"382\":{\"h\":\"\",\"t\":[\"String::from(\\\"hello,world\\\")\",\"\\\"hello,world\\\".to_string()\"]},\"383\":{\"h\":\"\",\"t\":[\"与其它语言不同，由于切片的索引是通过字节来进行，但是字符串又是 UTF-8 编码，因此你无法保证索引的字节刚好落在字符的边界上，从而导致出错，需要格外的小心\"]},\"384\":{\"h\":\"操作字符串\",\"t\":[\"push\",\"fn main() { let mut s = String::from(\\\"Hello \\\"); s.push_str(\\\"rust\\\"); println!(\\\"追加字符串 push_str() -> {}\\\", s); s.push('!'); println!(\\\"追加字符 push() -> {}\\\", s); } \",\"Insert\",\"fn main() { let mut s = String::from(\\\"Hello rust!\\\"); s.insert(5, ','); println!(\\\"插入字符 insert() -> {}\\\", s); s.insert_str(6, \\\" I like\\\"); println!(\\\"插入字符串 insert_str() -> {}\\\", s); } \",\"Replace\",\"replace\",\"fn main() { let string_replace = String::from(\\\"I like rust. Learning rust is my favorite!\\\"); let new_string_replace = string_replace.replace(\\\"rust\\\", \\\"RUST\\\"); dbg!(new_string_replace); } \",\"​ replacen\",\"fn main() { let string_replace = \\\"I like rust. Learning rust is my favorite!\\\"; let new_string_replacen = string_replace.replacen(\\\"rust\\\", \\\"RUST\\\", 1); dbg!(new_string_replacen); } \",\"​ replace_range\",\"fn main() { let mut string_replace_range = String::from(\\\"I like rust!\\\"); string_replace_range.replace_range(7..8, \\\"R\\\"); dbg!(string_replace_range); } \",\"Delete\",\"pop —— 删除并返回字符串的最后一个字符\",\"fn main() { let mut string_pop = String::from(\\\"rust pop 中文!\\\"); let p1 = string_pop.pop(); let p2 = string_pop.pop(); dbg!(p1); dbg!(p2); dbg!(string_pop); } \",\"remove —— 删除并返回字符串中指定位置的字符\",\"fn main() { let mut string_remove = String::from(\\\"测试remove方法\\\"); println!( \\\"string_remove 占 {} 个字节\\\", std::mem::size_of_val(string_remove.as_str()) ); // 删除第一个汉字 string_remove.remove(0); // 下面代码会发生错误 // string_remove.remove(1); // 直接删除第二个汉字 // string_remove.remove(3); dbg!(string_remove); } \",\"truncate —— 删除字符串中从指定位置开始到结尾的全部字符\",\"fn main() { let mut string_truncate = String::from(\\\"测试truncate\\\"); string_truncate.truncate(3); dbg!(string_truncate); } \",\"clear —— 清空字符串\",\"Concatenate\",\"使用 + 或者 += 连接字符串，要求右边的参数必须为字符串的切片引用（Slice）类型。其实当调用 + 的操作符时，相当于调用了 std::string 标准库中的 add() 方法，这里 add() 方法的第二个参数是一个引用的类型。因此我们在使用 +， 必须传递切片引用类型。不能直接传递 String 类型。+ 是返回一个新的字符串，所以变量声明可以不需要 mut 关键字修饰。\",\"fn main() { let string_append = String::from(\\\"hello \\\"); let string_rust = String::from(\\\"rust\\\"); // &string_rust会自动解引用为&str let result = string_append + &string_rust; let mut result = result + \\\"!\\\"; // `result + \\\"!\\\"` 中的 `result` 是不可变的 result += \\\"!!!\\\"; println!(\\\"连接字符串 + -> {}\\\", result); } \"]},\"385\":{\"h\":\"\"},\"386\":{\"h\":\"\",\"t\":[\"for c in \\\"中国人\\\".chars() { println!(\\\"{}\\\", c); } for b in \\\"中国人\\\".bytes() { println!(\\\"{}\\\", b); } \"]},\"387\":{\"h\":\"练习\",\"t\":[\"Rust By Practice，支持代码在线编辑和运行，并提供详细的习题解答。\",\"字符串\",\"习题解答\",\"切片\",\"习题解答\",\"String\",\"习题解答\"]},\"388\":{\"h\":\"元组\"},\"389\":{\"h\":\"示例\",\"t\":[\"fn main() { let tup = (500, 6.4, 1); let (x, y, z) = tup; println!(\\\"The value of y is: {}\\\", y); } \",\"fn main() { let x: (i32, f64, u8) = (500, 6.4, 1); let five_hundred = x.0; let six_point_four = x.1; let one = x.2; } \",\"fn main() { let s1 = String::from(\\\"hello\\\"); let (s2, len) = calculate_length(s1); println!(\\\"The length of '{}' is {}.\\\", s2, len); } fn calculate_length(s: String) -> (String, usize) { let length = s.len(); // len() 返回字符串的长度 (s, length) } \"]},\"390\":{\"h\":\"结构体\"},\"391\":{\"h\":\"\",\"t\":[\"通过关键字 struct 定义\",\"一个清晰明确的结构体 名称\",\"几个有名字的结构体 字段\"]},\"392\":{\"h\":\"\"},\"393\":{\"h\":\"练习\",\"t\":[\"Rust By Practice，支持代码在线编辑和运行，并提供详细的习题解答。\"]},\"394\":{\"h\":\"\"},\"395\":{\"h\":\"练习\",\"t\":[\"Rust By Practice，支持代码在线编辑和运行，并提供详细的习题解答。\"]},\"396\":{\"h\":\"数组\"},\"397\":{\"h\":\"含义\",\"t\":[\"长度固定\",\"元素必须有相同的类型\",\"依次线性排列\",\"我们这里说的数组是 Rust 的基本类型，是固定长度的，这点与其他编程语言不同，其它编程语言的数组往往是可变长度的，与 Rust 中的动态数组 Vector 类似\"]},\"398\":{\"h\":\"\"},\"399\":{\"h\":\"总结\",\"t\":[\"fn main() { // 编译器自动推导出one的类型 let one = [1, 2, 3]; // 显式类型标注 let two: [u8; 3] = [1, 2, 3]; let blank1 = [0; 3]; let blank2: [u8; 3] = [0; 3]; // arrays是一个二维数组，其中每一个元素都是一个数组，元素类型是[u8; 3] let arrays: [[u8; 3]; 4] = [one, two, blank1, blank2]; // 借用arrays的元素用作循环中 for a in &arrays { print!(\\\"{:?}: \\\", a); // 将a变成一个迭代器，用于循环 // 你也可以直接用for n in a {}来进行循环 for n in a.iter() { print!(\\\"\\\\t{} + 10 = {}\\\", n, n+10); } let mut sum = 0; // 0..a.len,是一个 Rust 的语法糖，其实就等于一个数组，元素是从0,1,2一直增加到到a.len-1 for i in 0..a.len() { sum += a[i]; } println!(\\\"\\\\t({:?} = {})\\\", a, sum); } } \",\"数组类型容易跟数组切片混淆，[T;n]描述了一个数组的类型，而[T]描述了切片的类型， 因为切片是运行期的数据结构，它的长度无法在编译期得知，因此不能用[T;n]的形式去描述\",\"[u8; 3]和[u8; 4]是不同的类型，数组的长度也是类型的一部分\",\"在实际开发中，使用最多的是数组切片[T]，我们往往通过引用的方式去使用&[T]，因为后者有固定的类型大小\"]},\"400\":{\"h\":\"练习\",\"t\":[\"Rust By Practice，支持代码在线编辑和运行，并提供详细的习题解答。\"]},\"401\":{\"h\":\"源文章\",\"t\":[\"Rust语言圣经(Rust Course)\"]},\"402\":{\"c\":[\"编程\"]},\"403\":{\"c\":[\"Rust\"]},\"404\":{\"h\":\"Rust 语言圣经笔记（二）\"},\"405\":{\"h\":\"Rust 基础入门\",\"t\":[\"主要部分： \",\"流程控制\",\"模式匹配\",\"方法和关联函数\",\"泛型和特征\",\"生命周期\",\"返回值和错误处理\",\"包和模块\",\"注释和文档\",\"格式化输出\"]},\"406\":{\"h\":\"流程控制\"},\"407\":{\"h\":\"注意事项\",\"t\":[\"break 可以单独使用，也可以带一个返回值，有些类似 return\",\"loop 是一个表达式，因此可以返回一个值\"]},\"408\":{\"h\":\"练习\",\"t\":[\"Rust By Practice，支持代码在线编辑和运行，并提供详细的习题解答。\"]},\"409\":{\"h\":\"match 和 if let\"},\"410\":{\"h\":\"通用形式\",\"t\":[\"match target { 模式1 => 表达式1, 模式2 => { 语句1; 语句2; 表达式2 }, _ => 表达式3 } \",\"match 的匹配必须穷尽所有情况\"]},\"411\":{\"h\":\"\",\"t\":[\"当你只要匹配一个条件，且忽略其他条件时就用 if let ，否则都用 match。\"]},\"412\":{\"h\":\"\",\"t\":[\"enum MyEnum { Foo, Bar } fn main() { let v = vec![MyEnum::Foo,MyEnum::Bar,MyEnum::Foo]; v.iter().filter(|x| matches!(x, MyEnum::Foo)); let foo = 'f'; assert!(matches!(foo, 'A'..='Z' | 'a'..='z')); let bar = Some(4); assert!(matches!(bar, Some(x) if x > 2)); } \"]},\"413\":{\"h\":\"\"},\"414\":{\"h\":\"练习\",\"t\":[\"Rust By Practice，支持代码在线编辑和运行，并提供详细的习题解答。\"]},\"415\":{\"h\":\"解构 Option\"},\"416\":{\"h\":\"定义\",\"t\":[\"enum Option<T> { Some(T), None, } \",\"：一个变量要么有值：Some(T), 要么为空：None。\"]},\"417\":{\"h\":\"方法 Method\"},\"418\":{\"h\":\"定义\",\"t\":[\"struct Circle { x: f64, y: f64, radius: f64, } impl Circle { // new是Circle的关联函数，因为它的第一个参数不是self，且new并不是关键字 // 这种方法往往用于初始化当前结构体的实例 fn new(x: f64, y: f64, radius: f64) -> Circle { Circle { x: x, y: y, radius: radius, } } // Circle的方法，&self表示借用当前的Circle结构体 fn area(&self) -> f64 { std::f64::consts::PI * (self.radius * self.radius) } } \"]},\"419\":{\"h\":\"\",\"t\":[\"现在大家可以思考一个问题，如何为一个结构体定义一个构造器方法？也就是接受几个参数，然后构造并返回该结构体的实例。其实答案在开头的代码片段中就给出了，很简单，参数中不包含 self 即可。\",\"这种定义在 impl 中且没有 self 的函数被称之为关联函数： 因为它没有 self，不能用 f.read() 的形式调用，因此它是一个函数而不是方法，它又在 impl 中，与结构体紧密关联，因此称为关联函数。\",\"在之前的代码中，我们已经多次使用过关联函数，例如 String::from，用于创建一个动态字符串。\",\"impl Rectangle { fn new(w: u32, h: u32) -> Rectangle { Rectangle { width: w, height: h } } } \"]},\"420\":{\"h\":\"\",\"t\":[\"impl Rectangle { fn area(&self) -> u32 { self.width * self.height } } impl Rectangle { fn can_hold(&self, other: &Rectangle) -> bool { self.width > other.width && self.height > other.height } } \"]},\"421\":{\"h\":\"练习\",\"t\":[\"Rust By Practice，支持代码在线编辑和运行，并提供详细的习题解答。\"]},\"422\":{\"h\":\"泛型\"},\"423\":{\"h\":\"\"},\"424\":{\"h\":\"练习\",\"t\":[\"Rust By Practice，支持代码在线编辑和运行，并提供详细的习题解答。\",\"泛型\",\"习题解答\",\"const 泛型\",\"习题解答\"]},\"425\":{\"h\":\"特征\"},\"426\":{\"h\":\"定义\",\"t\":[\"pub trait Summary { fn summarize(&self) -> String; } pub struct Post { pub title: String, // 标题 pub author: String, // 作者 pub content: String, // 内容 } impl Summary for Post { fn summarize(&self) -> String { format!(\\\"文章{}, 作者是{}\\\", self.title, self.author) } } pub struct Weibo { pub username: String, pub content: String } impl Summary for Weibo { fn summarize(&self) -> String { format!(\\\"{}发表了微博{}\\\", self.username, self.content) } } \",\"如果你想要为类型A实现特征T，那么A或者T至少有一个是在当前作用域中定义的！\",\"可以有默认实现\",\"使用特征作为函数参数\",\"pub fn notify(item: &impl Summary) { println!(\\\"Breaking news! {}\\\", item.summarize()); } \"]},\"427\":{\"h\":\"特征约束\",\"t\":[\"多重约束\",\"pub fn notify(item: &(impl Summary + Display)) {} pub fn notify<T: Summary + Display>(item: &T) {} \",\"Where 约束\",\"fn some_function<T, U>(t: &T, u: &U) -> i32 where T: Display + Clone, U: Clone + Debug {} \"]},\"428\":{\"h\":\"练习\",\"t\":[\"Rust By Practice，支持代码在线编辑和运行，并提供详细的习题解答。\"]},\"429\":{\"h\":\"特征对象\"},\"430\":{\"h\":\"练习\",\"t\":[\"Rust By Practice，支持代码在线编辑和运行，并提供详细的习题解答。\"]},\"431\":{\"h\":\"动态数组 Vector\"},\"432\":{\"h\":\"创建\",\"t\":[\"Vec::new\",\"vec![]\"]},\"433\":{\"h\":\"更新\",\"t\":[\"x.push(1);\"]},\"434\":{\"h\":\"读取\",\"t\":[\"通过下标索引访问。\",\"使用 get 方法。 \",\"和其它语言一样，集合类型的索引下标都是从 0 开始，&v[2] 表示借用 v 中的第三个元素，最终会获得该元素的引用。而 v.get(2) 也是访问第三个元素，但是有所不同的是，它返回了 Option<&T>，因此还需要额外的 match 来匹配解构出具体的值。\"]},\"435\":{\"h\":\"存储不同元素\",\"t\":[\"枚举或者特征对象 \",\"特征对象数组要比枚举数组常见很多\"]},\"436\":{\"h\":\"\"},\"437\":{\"h\":\"\"},\"438\":{\"h\":\"练习\",\"t\":[\"Rust By Practice，支持代码在线编辑和运行，并提供详细的习题解答。\"]},\"439\":{\"h\":\"KV 存储 HashMap\"},\"440\":{\"h\":\"创建\",\"t\":[\"跟创建动态数组 Vec 的方法类似，可以使用 new 方法来创建 HashMap，然后通过 insert 方法插入键值对。\",\"使用迭代器和 collect 方法创建\",\"fn main() { use std::collections::HashMap; let teams_list = vec![ (\\\"中国队\\\".to_string(), 100), (\\\"美国队\\\".to_string(), 10), (\\\"日本队\\\".to_string(), 50), ]; let teams_map: HashMap<_,_> = teams_list.into_iter().collect(); println!(\\\"{:?}\\\",teams_map) } \"]},\"441\":{\"h\":\"查询\",\"t\":[\"get 方法返回一个 Option<&i32> 类型：当查询不到时，会返回一个 None，查询到时返回 Some(&i32)\",\"&i32 是对 HashMap 中值的借用，如果不使用借用，可能会发生所有权的转移\"]},\"442\":{\"h\":\"\"},\"443\":{\"h\":\"练习\",\"t\":[\"Rust By Practice，支持代码在线编辑和运行，并提供详细的习题解答。\"]},\"444\":{\"h\":\"生命周期\"},\"445\":{\"h\":\"消除规则\",\"t\":[\"每一个引用参数都会获得独自的生命周期\",\"若只有一个输入生命周期(函数参数中只有一个引用类型)，那么该生命周期会被赋给所有的输出生命周期\",\"若存在多个输入生命周期，且其中一个是 &self 或 &mut self，则 &self 的生命周期被赋给所有的输出生命周期\"]},\"446\":{\"h\":\"静态生命周期\",\"t\":[\"'static\"]},\"447\":{\"h\":\"\"},\"448\":{\"h\":\"\"},\"449\":{\"h\":\"\"},\"450\":{\"h\":\"\"},\"451\":{\"h\":\"源文章\",\"t\":[\"Rust语言圣经(Rust Course)\"]},\"452\":{\"c\":[\"编程\"]},\"453\":{\"c\":[\"Rust\"]},\"454\":{\"h\":\"Spring 知识查缺补漏\"},\"455\":{\"h\":\"IOC\",\"t\":[\"Inversion of Control（“控制反转”）\",\"作用域\",\"singleton\",\"prototype\",\"依赖注入\",\"Setter依赖注入：通过成员属性对应的set方法完成注入。\",\"构造方法依赖注入：通过构造方法完成注入。\",\"自动装配\",\"生命周期与继承\",\"如果Bean不是单例模式，而是采用的原型模式，那么就只会在获取时才创建，并调用init-method，而对应的销毁方法不会被调用（因此，对于原型模式下的Bean，Spring无法顾及其完整生命周期，而在单例模式下，Spring能够从Bean对象的创建一直管理到对象的销毁）\",\"Bean之间也是具备继承关系的，只不过这里的继承并不是类的继承，而是属性的继承\",\"工厂Bean\",\"Mybatis 使用工厂 Bean 管理自己扫描的 Bean\",\"注解\",\"@Resource默认ByName如果找不到则ByType，可以添加到set方法、字段上。\",\"@Autowired默认是byType，只会根据类型寻找，可以添加在构造方法、set方法、字段、方法参数上。\",\"因为@Resource的匹配机制更加合理高效，因此官方并不推荐使用@Autowired字段注入，当然，实际上Spring官方更推荐我们使用基于构造方法或是Setter的@Autowired注入，比如Setter 注入的一个好处是，Setter 方法使该类的对象能够在以后重新配置或重新注入。其实，最后使用哪个注解，还是看你自己，要是有强迫症不能忍受黄标但是又实在想用字段注入，那就用@Resource注解。\"]},\"456\":{\"h\":\"Spring 高级特性\",\"t\":[\"Bean Aware（感知）\",\"Aware子接口\",\"描述\",\"BeanNameAware\",\"获取容器中 Bean 的名称\",\"BeanFactoryAware\",\"获取当前 BeanFactory ，这样可以调用容器的服务\",\"ApplicationContextAware\",\"同上，在BeanFactory 和 ApplicationContext 的区别 中已明确说明\",\"MessageSourceAware\",\"获取 Message Source 相关文本信息\",\"ApplicationEventPublisherAware\",\"发布事件\",\"ResourceLoaderAware\",\"获取资源加载器，这样获取外部资源文件\",\"异步任务\",\"@EnableAsync\",\"@Async\",\"@Import\",\"@Target({ElementType.TYPE}) @Retention(RetentionPolicy.RUNTIME) @Documented @Import({AspectJAutoProxyRegistrar.class}) public @interface EnableAspectJAutoProxy { boolean proxyTargetClass() default false; boolean exposeProxy() default false; } \",\"class AspectJAutoProxyRegistrar implements ImportBeanDefinitionRegistrar { AspectJAutoProxyRegistrar() { } public void registerBeanDefinitions(AnnotationMetadata importingClassMetadata, BeanDefinitionRegistry registry) { //注册AnnotationAwareAspectJAutoProxyCreator到容器中 AopConfigUtils.registerAspectJAnnotationAutoProxyCreatorIfNecessary(registry); AnnotationAttributes enableAspectJAutoProxy = AnnotationConfigUtils.attributesFor(importingClassMetadata, EnableAspectJAutoProxy.class); if (enableAspectJAutoProxy != null) { if (enableAspectJAutoProxy.getBoolean(\\\"proxyTargetClass\\\")) { AopConfigUtils.forceAutoProxyCreatorToUseClassProxying(registry); } if (enableAspectJAutoProxy.getBoolean(\\\"exposeProxy\\\")) { AopConfigUtils.forceAutoProxyCreatorToExposeProxy(registry); } } } } \",\"它实现了接口，这个接口也是Spring提供的一种Bean加载机制，它支持直接向容器中添加Bean定义，容器也会加载这个Bean：\",\"ImportBeanDefinitionRegistrar类只能通过其他类@Import的方式来加载，通常是启动类或配置类。\",\"使用@Import，如果括号中的类是ImportBeanDefinitionRegistrar的实现类，则会调用接口中方法（一般用于注册Bean）\",\"实现该接口的类拥有注册bean的能力。\",\"Spring 事件监听器\"]},\"457\":{\"h\":\"SpringEL 表达式\",\"t\":[\"文档\"]},\"458\":{\"h\":\"AOP\",\"t\":[\"通知（Advice）: AOP 框架中的增强处理，通知描述了切面何时执行以及如何执行增强处理，也就是我们上面编写的方法实现。\",\"连接点（join point）: 连接点表示应用执行过程中能够插入切面的一个点，这个点可以是方法的调用、异常的抛出，实际上就是我们在方法执行前或是执行后需要做的内容。\",\"切点（PointCut）: 可以插入增强处理的连接点，可以是方法执行之前也可以方法执行之后，还可以是抛出异常之类的。\",\"切面（Aspect）: 切面是通知和切点的结合，我们之前在xml中定义的就是切面，包括很多信息。\",\"引入（Introduction）：引入允许我们向现有的类添加新的方法或者属性。\",\"织入（Weaving）: 将增强处理添加到目标对象中，并创建一个被增强的对象，我们之前都是在将我们的增强处理添加到目标对象，也就是织入（这名字挺有文艺范的）\"]},\"459\":{\"h\":\"事务\"},\"460\":{\"h\":\"Bean 工厂与 Bean 定义\",\"t\":[\"三级缓存避免循环依赖 \",\"singletonObjects，用于保存实例化、注入、初始化完成的 bean 实例\",\"earlySingletonObjects，用于保存实例化完成的 bean 实例\",\"singletonFactories，在初始创建Bean对象时都会生成一个对应的单例工厂用于获取早期对象\",\"[Bean定义]首先扫描Bean，加载Bean定义 -> [Bean定义]Bean定义和Bean工厂后置处理 -> [依赖注入]根据Bean定义通过反射创建Bean实例 -> [依赖注入]进行依赖注入（顺便解决循环依赖问题）-> [初始化Bean]BeanPostProcessor的初始化之前方法 -> [初始化Bean]Bean初始化方法 -> [初始化Bean]BeanPostProcessor的初始化之前后方法 -> [完成]最终得到的Bean加载完成的实例\"]},\"461\":{\"h\":\"Bean 生命周期\",\"t\":[\"实例化-属性赋值-初始化-使用-销毁\"]},\"462\":{\"h\":\"SpringBoot 启动原理\",\"t\":[\"服务构建-环境准备-容器创建-填充容器\"]},\"463\":{\"c\":[\"编程\"]},\"464\":{\"c\":[\"Spring\"]},\"465\":{\"h\":\"Electron React Typescript Antd 环境搭建\"},\"466\":{\"h\":\"前言\",\"t\":[\"最近打算 Electron React Typescript Antd 结合学习,网上搜索事例优点问题重新整理了下。\",\"注意事项： \",\"main.ts nodeIntegration 和 contextIsolation 配置不对会导致编译时提示 react 导入 node 代码出错\",\"未创建 preload.js 文件 导致 electron 启动界面加载空白\",\"不同版本 electron 的 dialog 存在使用差异 \",\"旧事例使用 remote 若继续使用需要添加 @electron/remote\",\"新事例 dialog 只能在主线程进行调用,可通过事件监听显现效果\",\"electron 下载慢,虽然 yrm 切换不同的镜像源仍然较慢,需单独设置 ELECTRON_MIRROR \",\"yarn config set ELECTRON_MIRROR https://npm.taobao.org/mirrors/electron/\"]},\"467\":{\"h\":\"基本环境搭建\"},\"468\":{\"h\":\"创建 react + typescript 项目\",\"t\":[\"yarn create react-app --template typescript\"]},\"469\":{\"h\":\"安装 react-app-rewired 以及 cross-env\",\"t\":[\"yarn add react-app-rewired cross-env -D\"]},\"470\":{\"h\":\"创建 react-app-rewired 配置文件 config-overrides.js 用于扩展 webpack 配置\",\"t\":[\"module.exports = (config, env) => { // 为了方便使用 electron 以及 node.js 相关的 api // 需要将 target 设置为 electron-renderer // 设置了 target 之后，原生浏览器的环境将无法运行此 react 项目(因为不支持 node.js 相关的 api)，会抛出 Uncaught ReferenceError: require is not defined 异常 // 需要在 electron 的环境才能运行(因为支持 node.js 相关的 api) // 这一步的操作, 都是为了能与 electron 进行更好的集成 config.target = 'electron-renderer'; return config; }; \"]},\"471\":{\"h\":\"安装 electron 环境\",\"t\":[\"yarn add electron -D\",\"这里加 -D 是为了只添加到 package.json 下的 devDependencies\",\"如果 electron 存在 dependencies 里面在后续使用 electron-builder 会出现报错情况\"]},\"472\":{\"h\":\"创建 electron 环境\",\"t\":[\"新建 electron 文件夹 \",\"新建 tsconfig.json\",\"{ \\\"compilerOptions\\\": { \\\"target\\\": \\\"es5\\\", \\\"module\\\": \\\"commonjs\\\", \\\"sourceMap\\\": true, \\\"strict\\\": true, \\\"outDir\\\": \\\"../build/\\\", \\\"rootDir\\\": \\\"../electron/\\\", \\\"noEmitOnError\\\": true, \\\"typeRoots\\\": [ \\\"node_modules/@types\\\" ] } } \",\"新建 electron 入库文件 main.ts\",\"import {app, BrowserWindow, ipcMain, dialog} from \\\"electron\\\"; import * as path from \\\"path\\\"; function createWindow() { // Create the browser window. const mainWindow = new BrowserWindow({ height: 600, webPreferences: { nodeIntegration: true, contextIsolation: false, preload: path.join(__dirname, \\\"preload.js\\\"), }, width: 800, }); /** * loadURL 分为两种情况 * 1.开发环境，指向 react 的开发环境地址 * 2.生产环境，指向 react build 后的 index.html */ const startUrl = process.env.NODE_ENV === 'development' ? 'http://localhost:3000' : path.join(__dirname, 'index.html'); mainWindow.loadURL(startUrl); // Open the DevTools. mainWindow.webContents.openDevTools(); } // This method will be called when Electron has finished // initialization and is ready to create browser windows. // Some APIs can only be used after this event occurs. app.on(\\\"ready\\\", () => { createWindow(); app.on(\\\"activate\\\", function () { // On macOS it's common to re-create a window in the app when the // dock icon is clicked and there are no other windows open. if (BrowserWindow.getAllWindows().length === 0) createWindow(); }); }); // Quit when all windows are closed, except on macOS. There, it's common // for applications and their menu bar to stay active until the user quits // explicitly with Cmd + Q. app.on(\\\"window-all-closed\\\", () => { if (process.platform !== \\\"darwin\\\") { app.quit(); } }); // In this file you can include the rest of your app\\\"s specific main process // code. You can also put them in separate files and require them here. // 监听渲染程序发来的事件 ipcMain.on('open-file-dialog', (event, data) => { dialog .showOpenDialog({ title: '请选择 .txt 文件', filters: [ { name: 'txt', extensions: ['txt'], }, ], }) .then((res) => { event.sender.send('open-file-dialog', res.filePaths); }) .catch(console.log); }); \",\"新建预加载文件 preload.ts \",\"若是不添加则会出现空白情况\",\"window.addEventListener('DOMContentLoaded', () => { const replaceText = (selector: string, text: string) => { const element = document.getElementById(selector) if (element) element.innerText = text } for (const type of ['chrome', 'node', 'electron']) { replaceText(`${type}-version`, <string>process.versions[type]) } }) \"]},\"473\":{\"h\":\"添加相关脚本\",\"t\":[\"/package.json\",\"{ \\\"scripts\\\": { \\\"prestart\\\": \\\"tsc -p electron\\\", \\\"start\\\": \\\"cross-env BROWSER=none react-app-rewired start\\\", \\\"build\\\": \\\"react-app-rewired build & tsc -p electron\\\", \\\"test\\\": \\\"react-app-rewired test --env=jsdom\\\", \\\"eject\\\": \\\"react-scripts eject\\\", \\\"start-electron\\\": \\\"cross-env NODE_ENV=development electron .\\\", \\\"start-electron-prod\\\": \\\"electron .\\\", \\\"build-electron\\\": \\\"electron-builder\\\" } } \"]},\"474\":{\"h\":\"添加 electron 及 node.js 相关代码，用于测试是否集成完毕\",\"t\":[\"/src/App.css\",\"@import '~antd/dist/antd.css'; .App { text-align: center; } .App-logo { height: 40vmin; pointer-events: none; } @media (prefers-reduced-motion: no-preference) { .App-logo { animation: App-logo-spin infinite 20s linear; } } .App-header { background-color: #282c34; min-height: 100vh; display: flex; flex-direction: column; align-items: center; justify-content: center; font-size: calc(10px + 2vmin); color: white; } .App-link { color: #61dafb; } @keyframes App-logo-spin { from { transform: rotate(0deg); } to { transform: rotate(360deg); } } \",\"/src/App.tsx\",\"import React from 'react'; import fs from 'fs'; import { Button } from 'antd'; import './App.css'; const { ipcRenderer} = require('electron') interface Props {} interface State { txtFileData: string; } export default class App extends React.Component<Props, State> { constructor(props: Props) { super(props); this.state = { txtFileData: '', }; } /** * 弹出文件选择框，选择 .txt 文件 * 将选中的 .txt 内容展示到页面 */ public readTxtFileData = async () => { // 发送事件给主进程 ipcRenderer.send('open-file-dialog', '传输给主进程的值'); // 监听主进程发来的事件 ipcRenderer.on('open-file-dialog', (event : any, data : Array<string>) => { if (!data[0]) return; fs.readFile(data[0], 'utf-8', (err, data) => { if (err) { console.error(err); } else { this.setState({ txtFileData: data.replace(/\\\\n|\\\\r\\\\n/g, '<br/>'), }); } }); }) }; public render = (): JSX.Element => { return ( <section> <Button type={\\\"primary\\\"} onClick={this.readTxtFileData}>读取一个txt文件的内容</Button> <div dangerouslySetInnerHTML={{ __html: this.state.txtFileData }} /> </section> ); }; } \"]},\"475\":{\"h\":\"运行测试\",\"t\":[\"一个命令行窗口跑 react 项目\",\"yarn start\",\"另一个命令行窗口跑 electron 项目\",\"yarn start-electron\"]},\"476\":{\"h\":\"项目打包\",\"t\":[\"添加 electron-builder 工具\",\"yarn add electron-builder -D\",\"添加脚本以及打包相关配置 \",\"oneClick 是否启用一键安装\",\"allowToChangeInstallationDirectory 是否允许修改安装路径\",\"{ \\\"build\\\": { \\\"appId\\\": \\\"com.example.my-app\\\", \\\"productName\\\": \\\"react-electron\\\", \\\"extends\\\": null, \\\"directories\\\": { \\\"output\\\": \\\"build-electron\\\" }, \\\"files\\\": [ \\\"./build/**/*\\\", \\\"./package.json\\\" ], \\\"win\\\": { \\\"icon\\\": \\\"src/asset/icon.ico\\\" }, \\\"nsis\\\": { \\\"oneClick\\\": false, \\\"allowToChangeInstallationDirectory\\\": true } } } \"]},\"477\":{\"h\":\"开始打包\",\"t\":[\"打包 react\",\"yarn build\",\"react 打包完成后，可以运行 electron 生产环境查看一下功能是否正常运行\",\"yarn start-electron-prod\",\"打包 electron 项目为安装包，安装包会生成到指定的 build-electron 目录\",\"yarn build-electron\"]},\"478\":{\"h\":\"Github\",\"t\":[\"react-electron-antd-demo\"]},\"479\":{\"h\":\"参考文章\",\"t\":[\"electron + react + typescript 环境搭建\"]},\"480\":{\"c\":[\"编程\"]},\"481\":{\"c\":[\"Electron\",\"React\",\"Typescript\",\"Antd\",\"Node\"]},\"482\":{\"h\":\"Redis 基础知识梳理\"},\"483\":{\"h\":\"什么是Redis\",\"t\":[\"Redis是一款内存高速缓存数据库。Redis全称为：Remote Dictionary Server（远程数据服务），使用C语言编写，Redis是一个key-value存储系统（键值存储系统），支持丰富的数据类型，如：String、list、set、zset、hash。\",\"Redis是一种支持key-value等多种数据结构的存储系统。可用于缓存，事件发布或订阅，高速队列等场景。支持网络，提供字符串，哈希，列表，队列，集合结构直接存取，基于内存，可持久化\"]},\"484\":{\"h\":\"官方资料\",\"t\":[\"Redis官网:http://redis.io/Redis\",\"官方文档:http://redis.io/documentationRedis教程:http://www.w3cschool.cn/redis/redis-intro.htmlRedis下载:http://redis.io/download#\",\"https://www.pdai.tech/md/db/nosql-redis/db-redis-introduce.html\",\"https://baike.baidu.com/item/Redis/6549233?fr=aladdin\",\"https://zhuanlan.zhihu.com/p/29665317\",\"https://www.jianshu.com/p/40dbc78711c8\"]},\"485\":{\"c\":[\"编程\",\"面试\"]},\"486\":{\"c\":[\"数据库\",\"Redis\"]},\"487\":{\"h\":\"\",\"t\":[\"404 Not Found\"]},\"488\":{\"h\":\"English\"},\"489\":{\"h\":\"Posts\"},\"490\":{\"h\":\"Datasource\"},\"491\":{\"h\":\"Coding Related\"},\"492\":{\"h\":\"Java\"},\"493\":{\"h\":\"Rust\"},\"494\":{\"h\":\"Spring\"},\"495\":{\"h\":\"Typescript\"},\"496\":{\"h\":\"Redis\"}},\"dirtCount\":0,\"index\":[[\"面试\",{\"2\":{\"485\":1}}],[\"面向对象设计原则\",{\"0\":{\"139\":1}}],[\"面向万维网络\",{\"1\":{\"70\":1}}],[\"面向短期的临时数据处理\",{\"1\":{\"70\":1}}],[\"哈希\",{\"1\":{\"483\":1}}],[\"哈希表的大小并不是一直不变的\",{\"1\":{\"295\":1}}],[\"哈希表\",{\"0\":{\"290\":1}}],[\"键值存储系统\",{\"1\":{\"483\":1}}],[\"远程数据服务\",{\"1\":{\"483\":1}}],[\"什么是redis\",{\"0\":{\"483\":1}}],[\"另一个命令行窗口跑\",{\"1\":{\"475\":1}}],[\"另一个要修改为30\",{\"1\":{\"225\":1}}],[\"选择\",{\"1\":{\"474\":1}}],[\"选择大量记录时\",{\"1\":{\"116\":1}}],[\"弹出文件选择框\",{\"1\":{\"474\":1}}],[\"及\",{\"0\":{\"474\":1}}],[\"及格了\",{\"1\":{\"281\":1}}],[\"请选择\",{\"1\":{\"472\":1}}],[\"请在这里实现算法\",{\"1\":{\"279\":1}}],[\"入库文件\",{\"1\":{\"472\":1}}],[\"入门\",{\"1\":{\"12\":1}}],[\"安装包会生成到指定的\",{\"1\":{\"477\":1}}],[\"安装\",{\"0\":{\"469\":1,\"471\":1}}],[\"安全检查异常\",{\"1\":{\"334\":2}}],[\"安全性\",{\"1\":{\"116\":1}}],[\"需单独设置\",{\"1\":{\"466\":1}}],[\"需要在\",{\"1\":{\"470\":1}}],[\"需要将\",{\"1\":{\"470\":1}}],[\"需要格外的小心\",{\"1\":{\"383\":1}}],[\"需要特殊处理\",{\"1\":{\"334\":1}}],[\"需要同时满足这里的条件\",{\"1\":{\"281\":1}}],[\"需要确认i是不是10\",{\"1\":{\"225\":1}}],[\"需要注意的是\",{\"1\":{\"344\":1}}],[\"需要注意的一点生成代码时需要指定编码格式\",{\"1\":{\"70\":1}}],[\"需要注意顺序排在\",{\"1\":{\"98\":1}}],[\"需要用到私钥\",{\"1\":{\"54\":2}}],[\"旧事例使用\",{\"1\":{\"466\":1}}],[\"旧技术\",{\"1\":{\"27\":1}}],[\"网上搜索事例优点问题重新整理了下\",{\"1\":{\"466\":1}}],[\"网络协议\",{\"1\":{\"94\":1}}],[\"填充容器\",{\"1\":{\"462\":1}}],[\"启动界面加载空白\",{\"1\":{\"466\":1}}],[\"启动原理\",{\"0\":{\"462\":1}}],[\"启动流程探究\",{\"0\":{\"250\":1}}],[\"销毁\",{\"1\":{\"461\":1}}],[\"属性赋值\",{\"1\":{\"461\":1}}],[\"顺便解决循环依赖问题\",{\"1\":{\"460\":1}}],[\"顺序表\",{\"0\":{\"283\":1}}],[\"顺序写\",{\"1\":{\"50\":1}}],[\"顺序读\",{\"1\":{\"50\":1}}],[\"初始化\",{\"1\":{\"461\":1}}],[\"初始化bean\",{\"1\":{\"460\":3}}],[\"初始化完成的\",{\"1\":{\"460\":1}}],[\"初始标记\",{\"1\":{\"268\":1}}],[\"三级缓存避免循环依赖\",{\"1\":{\"460\":1}}],[\"织入\",{\"1\":{\"458\":1}}],[\"框架中的增强处理\",{\"1\":{\"458\":1}}],[\"事件发布或订阅\",{\"1\":{\"483\":1}}],[\"事件监听器\",{\"1\":{\"456\":1}}],[\"事务\",{\"0\":{\"121\":1,\"459\":1}}],[\"事务隔离级别\",{\"0\":{\"115\":1}}],[\"描述\",{\"1\":{\"456\":1}}],[\"描述了切片的类型\",{\"1\":{\"399\":1}}],[\"描述了一个数组的类型\",{\"1\":{\"399\":1}}],[\"感知\",{\"1\":{\"456\":1}}],[\"高速队列等场景\",{\"1\":{\"483\":1}}],[\"高级特性\",{\"0\":{\"456\":1}}],[\"高层模块不应依赖于底层模块\",{\"1\":{\"143\":1}}],[\"管理自己扫描的\",{\"1\":{\"455\":1}}],[\"管这叫类型\",{\"1\":{\"357\":1}}],[\"构造方法依赖注入\",{\"1\":{\"455\":1}}],[\"控制反转\",{\"1\":{\"455\":1}}],[\"控制台\",{\"1\":{\"29\":1}}],[\"静态生命周期\",{\"0\":{\"446\":1}}],[\"消除规则\",{\"0\":{\"445\":1}}],[\"消息以及如何交换这些消息\",{\"1\":{\"70\":1}}],[\"日本队\",{\"1\":{\"440\":1}}],[\"日志收集\",{\"0\":{\"37\":1}}],[\"美国队\",{\"1\":{\"440\":1}}],[\"美国数学会从\",{\"1\":{\"279\":1}}],[\"跟创建动态数组\",{\"1\":{\"440\":1}}],[\"枚举或者特征对象\",{\"1\":{\"435\":1}}],[\"动态数组\",{\"0\":{\"431\":1}}],[\"动态规则配置\",{\"1\":{\"29\":1}}],[\"约束\",{\"1\":{\"427\":1}}],[\"格式化输出\",{\"1\":{\"405\":1}}],[\"源文章\",{\"0\":{\"401\":1,\"451\":1}}],[\"源管理器\",{\"1\":{\"9\":1}}],[\"借用arrays的元素用作循环中\",{\"1\":{\"399\":1}}],[\"显式类型标注\",{\"1\":{\"399\":1}}],[\"显示当前所有java相关进程\",{\"1\":{\"60\":1}}],[\"显示当前所有进程\",{\"1\":{\"60\":1}}],[\"显示当前目录\",{\"1\":{\"60\":1}}],[\"显示当前目录下所有文件的详细信息\",{\"1\":{\"60\":1}}],[\"显示进程状态\",{\"1\":{\"60\":1}}],[\"显示网络相关信息\",{\"1\":{\"60\":1}}],[\"显示网络设备情况\",{\"1\":{\"60\":1}}],[\"显示或配置网络设备\",{\"1\":{\"60\":1}}],[\"显示系统当前进程信息\",{\"1\":{\"60\":3}}],[\"长度固定\",{\"1\":{\"397\":1}}],[\"含义\",{\"0\":{\"397\":1}}],[\"几个有名字的结构体\",{\"1\":{\"391\":1}}],[\"几乎相同\",{\"1\":{\"349\":1}}],[\"名称\",{\"1\":{\"391\":1}}],[\"示例\",{\"0\":{\"389\":1}}],[\"习题解答\",{\"1\":{\"387\":3,\"424\":2}}],[\"`$\",{\"1\":{\"472\":1}}],[\"`\",{\"1\":{\"384\":1}}],[\"`result`\",{\"1\":{\"384\":1}}],[\"`result\",{\"1\":{\"384\":1}}],[\"`rust\",{\"1\":{\"349\":1}}],[\"连接点表示应用执行过程中能够插入切面的一个点\",{\"1\":{\"458\":1}}],[\"连接点\",{\"1\":{\"458\":1}}],[\"连接字符串\",{\"1\":{\"384\":2}}],[\"连续加锁2次\",{\"1\":{\"235\":1}}],[\"占\",{\"1\":{\"384\":1}}],[\"追加字符\",{\"1\":{\"384\":1}}],[\"追加字符串\",{\"1\":{\"384\":1}}],[\"往往指的就是\",{\"1\":{\"381\":1}}],[\"总结\",{\"0\":{\"378\":1,\"399\":1}}],[\"总之\",{\"1\":{\"361\":1}}],[\"特征对象数组要比枚举数组常见很多\",{\"1\":{\"435\":1}}],[\"特征对象\",{\"0\":{\"429\":1}}],[\"特征约束\",{\"0\":{\"427\":1}}],[\"特征\",{\"0\":{\"425\":1}}],[\"特定数据只能有一个可变引用\",{\"1\":{\"377\":1}}],[\"特别的\",{\"1\":{\"367\":1}}],[\"离开作用域范围时\",{\"1\":{\"371\":1}}],[\"语句2\",{\"1\":{\"410\":1}}],[\"语句1\",{\"1\":{\"410\":1}}],[\"语句\",{\"0\":{\"360\":1}}],[\"语句和表达式\",{\"0\":{\"359\":1}}],[\"语言的\",{\"1\":{\"357\":1}}],[\"语言中所有类型的公共父接口\",{\"1\":{\"333\":1}}],[\"语言\",{\"1\":{\"27\":1}}],[\"语言圣经笔记\",{\"0\":{\"338\":1,\"404\":1}}],[\"语言圣经\",{\"1\":{\"13\":1}}],[\"作用域\",{\"1\":{\"455\":1}}],[\"作用于代码\",{\"1\":{\"319\":1}}],[\"作者是\",{\"1\":{\"426\":1}}],[\"作者\",{\"1\":{\"426\":1}}],[\"作函数返回类型的时候\",{\"1\":{\"367\":1}}],[\"作为\",{\"1\":{\"357\":1}}],[\"顾名思义\",{\"1\":{\"357\":1}}],[\"函数没有返回值\",{\"1\":{\"366\":1}}],[\"函数返回\",{\"0\":{\"366\":1}}],[\"函数参数中只有一个引用类型\",{\"1\":{\"445\":1}}],[\"函数参数\",{\"0\":{\"365\":1}}],[\"函数的位置可以随便放\",{\"1\":{\"364\":1}}],[\"函数的使用吧\",{\"1\":{\"357\":1}}],[\"函数名和变量名使用蛇形命名法\",{\"1\":{\"364\":1}}],[\"函数要点\",{\"0\":{\"364\":1}}],[\"函数\",{\"0\":{\"363\":1}}],[\"函数无返回值\",{\"1\":{\"357\":1}}],[\"函数就返回这个单元类型\",{\"1\":{\"357\":1}}],[\"函数式接口都会打上这样一个注解\",{\"1\":{\"281\":1}}],[\"函数式接口就是jdk1\",{\"1\":{\"281\":1}}],[\"函数式接口\",{\"0\":{\"281\":1}}],[\"大家已经看到过很多次\",{\"1\":{\"357\":1}}],[\"大多数情况下由软件自动生成和使用\",{\"1\":{\"70\":1}}],[\"唯一的值也是\",{\"1\":{\"357\":1}}],[\"个字节内存空间\",{\"1\":{\"381\":1}}],[\"个字节\",{\"1\":{\"356\":1,\"384\":1}}],[\"个字节编码\",{\"1\":{\"356\":1}}],[\"个人感觉做工简陋\",{\"1\":{\"21\":1}}],[\"ℤ\",{\"1\":{\"356\":1}}],[\"布尔\",{\"0\":{\"355\":1}}],[\"练习\",{\"0\":{\"354\":1,\"358\":1,\"362\":1,\"368\":1,\"372\":1,\"379\":1,\"387\":1,\"393\":1,\"395\":1,\"400\":1,\"408\":1,\"414\":1,\"421\":1,\"424\":1,\"428\":1,\"430\":1,\"438\":1,\"443\":1}}],[\"固定精度的十进制小数\",{\"1\":{\"353\":1}}],[\"序列\",{\"0\":{\"351\":1}}],[\"带符号移动\",{\"1\":{\"350\":1}}],[\"带有类型参数的类型\",{\"1\":{\"334\":1}}],[\"右移\",{\"1\":{\"350\":1}}],[\"右位补0\",{\"1\":{\"350\":1}}],[\"把位中的0和1相互取反\",{\"1\":{\"350\":1}}],[\"异步任务\",{\"1\":{\"456\":1}}],[\"异或\",{\"1\":{\"350\":1}}],[\"异常\",{\"1\":{\"470\":1}}],[\"异常的抛出\",{\"1\":{\"458\":1}}],[\"异常记录\",{\"1\":{\"29\":1}}],[\"异常数\",{\"1\":{\"29\":1}}],[\"异常比率\",{\"1\":{\"29\":1}}],[\"^\",{\"1\":{\"350\":1}}],[\"^针对\",{\"1\":{\"9\":1}}],[\"运行测试\",{\"0\":{\"475\":1}}],[\"运算符\",{\"1\":{\"350\":1}}],[\"运维\",{\"0\":{\"16\":1},\"2\":{\"45\":1,\"52\":1,\"62\":1,\"67\":1,\"95\":1,\"100\":1}}],[\"精度高很多\",{\"1\":{\"349\":1}}],[\"➥a\",{\"1\":{\"349\":1}}],[\"➥ch2\",{\"1\":{\"349\":1}}],[\"输出结果\",{\"1\":{\"349\":1}}],[\"输入提供的服务名\",{\"1\":{\"27\":1}}],[\"浮点数在某些特性上是反直觉的\",{\"1\":{\"349\":1}}],[\"浮点数往往是你想要数字的近似表达\",{\"1\":{\"349\":1}}],[\"浮点数陷阱\",{\"1\":{\"349\":1}}],[\"浮点类型\",{\"0\":{\"349\":1}}],[\"值\",{\"1\":{\"348\":1}}],[\"假设有一个\",{\"1\":{\"348\":1}}],[\"假如因为nacos其中一台挂掉后\",{\"1\":{\"31\":1}}],[\"~antd\",{\"1\":{\"474\":1}}],[\"~\",{\"1\":{\"348\":6}}],[\"~5\",{\"1\":{\"29\":1}}],[\"位非\",{\"1\":{\"350\":1}}],[\"位或\",{\"1\":{\"350\":1}}],[\"位与\",{\"1\":{\"350\":1}}],[\"位运算\",{\"0\":{\"350\":1}}],[\"位大小\",{\"1\":{\"349\":1}}],[\"位和\",{\"1\":{\"349\":1}}],[\"位数\",{\"1\":{\"348\":1}}],[\"位于虚拟机栈的栈帧中的本地变量表中所引用到的对象\",{\"1\":{\"259\":1}}],[\"课后练习\",{\"0\":{\"347\":1}}],[\"命名规范\",{\"1\":{\"341\":1}}],[\"命令行粘贴内容\",{\"1\":{\"60\":1}}],[\"命令行复制内容\",{\"1\":{\"60\":1}}],[\"命令模式下\",{\"1\":{\"60\":1}}],[\"命令模式\",{\"0\":{\"193\":1},\"1\":{\"60\":1,\"217\":1}}],[\"命令搜索引擎\",{\"1\":{\"61\":1}}],[\"命令搜索\",{\"1\":{\"16\":1}}],[\"命令速查表\",{\"1\":{\"16\":1,\"61\":1}}],[\"命令\",{\"0\":{\"6\":1,\"58\":1}}],[\"复合类型\",{\"1\":{\"339\":1}}],[\"复制算法\",{\"0\":{\"265\":1}}],[\"变量\",{\"1\":{\"371\":1}}],[\"变量遮蔽\",{\"0\":{\"346\":1}}],[\"变量和常量之间的差异\",{\"0\":{\"345\":1}}],[\"变量解构\",{\"0\":{\"344\":1}}],[\"变量可变性\",{\"0\":{\"343\":1}}],[\"变量绑定\",{\"0\":{\"342\":1}}],[\"变量绑定与解构\",{\"0\":{\"340\":1},\"1\":{\"339\":1}}],[\"变量命名\",{\"0\":{\"341\":1}}],[\"变更test及目录下所有文件的拥有者为nginx\",{\"1\":{\"60\":1}}],[\"变更文件desc\",{\"1\":{\"60\":1}}],[\"获得一个类中所有字段列表\",{\"1\":{\"334\":2}}],[\"获取资源加载器\",{\"1\":{\"456\":1}}],[\"获取当前\",{\"1\":{\"456\":1}}],[\"获取容器中\",{\"1\":{\"456\":1}}],[\"获取\",{\"1\":{\"334\":1,\"456\":1}}],[\"获取流水\",{\"1\":{\"244\":1}}],[\"获取写锁\",{\"1\":{\"237\":1}}],[\"获取读锁\",{\"1\":{\"237\":1}}],[\"获取不到\",{\"1\":{\"236\":1}}],[\"判断\",{\"1\":{\"334\":1}}],[\"判断是\",{\"1\":{\"334\":1}}],[\"顶级类型将返回\",{\"1\":{\"334\":1}}],[\"声明的类型\",{\"1\":{\"334\":1}}],[\"或\",{\"1\":{\"334\":1,\"445\":1}}],[\"或者\",{\"1\":{\"384\":1}}],[\"或者说一个值只能拥有一个所有者\",{\"1\":{\"371\":1}}],[\"或者是在运行时可以通过反射访问\",{\"1\":{\"320\":1}}],[\"或者是引用的接口中并没有该方法时\",{\"1\":{\"319\":1}}],[\"或者很少发生改变\",{\"1\":{\"210\":1}}],[\"或者不使用单例模式\",{\"1\":{\"159\":1}}],[\"或者smtp\",{\"1\":{\"70\":1}}],[\"循环获取最终\",{\"1\":{\"334\":1}}],[\"封装方法相关的信息\",{\"1\":{\"334\":1}}],[\"限制字段集合\",{\"1\":{\"334\":1}}],[\"限流以及监控等\",{\"1\":{\"30\":1}}],[\"限流\",{\"1\":{\"29\":1}}],[\"体系中类型的包括\",{\"1\":{\"334\":1}}],[\"扩充了参数化类型\",{\"1\":{\"333\":1}}],[\"扩展型可标记语言\",{\"1\":{\"70\":1}}],[\"扩展性\",{\"1\":{\"29\":1}}],[\"泛型和特征\",{\"1\":{\"405\":1}}],[\"泛型机制详解\",{\"1\":{\"335\":1}}],[\"泛型\",{\"0\":{\"422\":1},\"1\":{\"335\":1,\"424\":2}}],[\"泛型数组类型和通配符类型\",{\"1\":{\"333\":1}}],[\"泛型的出现扩充了数据类型的概念\",{\"1\":{\"333\":1}}],[\"泛型就是计算结果类型\",{\"1\":{\"243\":1}}],[\"保持重启之后跟随启动\",{\"1\":{\"328\":1}}],[\"保存退出\",{\"1\":{\"60\":1}}],[\"端口映射\",{\"1\":{\"328\":1}}],[\"端口号\",{\"1\":{\"60\":3}}],[\"容器创建\",{\"1\":{\"462\":1}}],[\"容器也会加载这个bean\",{\"1\":{\"456\":1}}],[\"容器内部端口\",{\"1\":{\"328\":1}}],[\"容器内路径\",{\"1\":{\"328\":2}}],[\"容器日期与宿主主机时间不一致解决\",{\"0\":{\"42\":1}}],[\"宿主主机路径\",{\"1\":{\"328\":2}}],[\"挂载\",{\"1\":{\"328\":2}}],[\"挂载存在权限问题需要指定用户\",{\"1\":{\"328\":2}}],[\"任意大小的整数和任意精度的浮点数\",{\"1\":{\"353\":1}}],[\"任意结点的左右子树也是一棵平衡二叉树\",{\"1\":{\"288\":1}}],[\"任务名称\",{\"1\":{\"327\":1}}],[\"登录成功后重定向的页面\",{\"1\":{\"325\":1}}],[\"地址的用户进行访问\",{\"1\":{\"325\":1}}],[\"允许来自特定\",{\"1\":{\"325\":1}}],[\"允许认证用户访问\",{\"1\":{\"325\":1}}],[\"允许你在一组匿名函数中实现不同版本的算法\",{\"1\":{\"213\":1}}],[\"搭配\",{\"0\":{\"324\":1}}],[\"搭建di系统定时任务调度管理使用的是quartz\",{\"1\":{\"79\":1}}],[\"笔记\",{\"1\":{\"321\":1}}],[\"成员\",{\"1\":{\"320\":1}}],[\"成功\",{\"1\":{\"42\":1}}],[\"元素是从0\",{\"1\":{\"399\":1}}],[\"元素类型是\",{\"1\":{\"399\":1}}],[\"元素必须有相同的类型\",{\"1\":{\"397\":1}}],[\"元组\",{\"0\":{\"388\":1}}],[\"元注解是作用于注解上的注解\",{\"1\":{\"320\":1}}],[\"元注解\",{\"0\":{\"320\":1}}],[\"元空间\",{\"0\":{\"269\":1}}],[\"忽略任何使用参数为泛型变量的方法或构造函数调用产生的警告\",{\"1\":{\"319\":1}}],[\"检查\",{\"1\":{\"319\":1}}],[\"检测需要关闭的空闲连接\",{\"1\":{\"83\":1}}],[\"既然说class对象和加载的类唯一对应\",{\"1\":{\"317\":1}}],[\"既然基本数据类型能够读取和写入基本数据类型\",{\"1\":{\"302\":1}}],[\"思考\",{\"1\":{\"317\":1}}],[\"反射\",{\"1\":{\"335\":1},\"2\":{\"337\":1}}],[\"反射工具\",{\"1\":{\"334\":1,\"335\":1}}],[\"反射修改类的属性\",{\"0\":{\"316\":1}}],[\"反射调用类方法\",{\"0\":{\"315\":1}}],[\"反射创建类对象\",{\"0\":{\"314\":1}}],[\"反码为1001\",{\"1\":{\"278\":1}}],[\"反码为1000\",{\"1\":{\"278\":1}}],[\"反码\",{\"0\":{\"277\":1}}],[\"验证\",{\"1\":{\"313\":1,\"325\":1}}],[\"守护进程在后台运行运行\",{\"1\":{\"312\":1}}],[\"守护线程自动结束\",{\"1\":{\"312\":2}}],[\"守护线程\",{\"0\":{\"312\":1}}],[\"定义\",{\"0\":{\"416\":1,\"418\":1,\"426\":1,\"460\":1},\"1\":{\"391\":1}}],[\"定义的拦截器handlerinterceptoradapter\",{\"1\":{\"73\":1}}],[\"定时器\",{\"0\":{\"311\":1}}],[\"唤醒后依然需要等待这里的锁释放之前等待的线程才能继续\",{\"1\":{\"309\":1}}],[\"唤醒处于等待状态的线程\",{\"1\":{\"309\":1}}],[\"死锁\",{\"0\":{\"308\":1}}],[\"让线程1加入\",{\"1\":{\"306\":1}}],[\"让位\",{\"1\":{\"306\":1}}],[\"让下一阶段用户线程并发运行时\",{\"1\":{\"268\":1}}],[\"手动调用wait\",{\"1\":{\"304\":1}}],[\"阻塞\",{\"1\":{\"304\":1}}],[\"打包完成后\",{\"1\":{\"477\":1}}],[\"打包\",{\"1\":{\"477\":2}}],[\"打包test目录为test\",{\"1\":{\"60\":1}}],[\"打印流\",{\"0\":{\"300\":1}}],[\"转换流\",{\"0\":{\"299\":1}}],[\"转发到后端的微服务上去\",{\"1\":{\"30\":1}}],[\"操作字符串\",{\"0\":{\"384\":1}}],[\"操作和原来的流是一样的\",{\"1\":{\"298\":1}}],[\"操作记录保存\",{\"1\":{\"120\":1}}],[\"则会调用接口中方法\",{\"1\":{\"456\":1}}],[\"则会发生整型溢出\",{\"1\":{\"348\":1}}],[\"则\",{\"1\":{\"445\":1}}],[\"则返回\",{\"1\":{\"334\":1,\"348\":1}}],[\"则需要针对特殊处理\",{\"1\":{\"325\":1}}],[\"则无需再去请求外部设备\",{\"1\":{\"298\":1}}],[\"则服务器会返回\",{\"1\":{\"94\":1}}],[\"缓冲区\",{\"1\":{\"298\":1}}],[\"缓冲流\",{\"0\":{\"298\":1}}],[\"字符串切片类型\",{\"1\":{\"381\":1}}],[\"字符串是\",{\"1\":{\"381\":1}}],[\"字符串\",{\"0\":{\"381\":1},\"1\":{\"387\":1}}],[\"字符串与切片\",{\"0\":{\"380\":1}}],[\"字符类型\",{\"0\":{\"356\":1}}],[\"字符\",{\"0\":{\"355\":1}}],[\"字符流是以一个具体的字符进行读取\",{\"1\":{\"297\":1}}],[\"字符流不同于字节\",{\"1\":{\"297\":1}}],[\"字符流\",{\"0\":{\"297\":1}}],[\"字段上\",{\"1\":{\"455\":1}}],[\"字段\",{\"1\":{\"391\":1,\"455\":1}}],[\"字段列表\",{\"1\":{\"334\":2}}],[\"字段的最大可能长度\",{\"1\":{\"111\":1}}],[\"依次线性排列\",{\"1\":{\"397\":1}}],[\"依然会返回\",{\"1\":{\"296\":1}}],[\"依赖注入\",{\"1\":{\"455\":1,\"460\":2}}],[\"依赖倒转原则\",{\"0\":{\"143\":1}}],[\"依赖服务a异常时切换至备份服务b\",{\"1\":{\"29\":1}}],[\"映射\",{\"0\":{\"295\":1}}],[\"队首出队\",{\"1\":{\"293\":1}}],[\"队列\",{\"0\":{\"286\":1},\"1\":{\"483\":1}}],[\"双端队列\",{\"0\":{\"293\":1}}],[\"按顺序从前往后存放\",{\"1\":{\"292\":1}}],[\"按照从上往下的顺序\",{\"1\":{\"287\":1}}],[\"列表中允许存在重复元素\",{\"1\":{\"292\":1}}],[\"列表\",{\"0\":{\"292\":1},\"1\":{\"483\":1}}],[\"列出所有端口\",{\"1\":{\"60\":1}}],[\"数组的长度也是类型的一部分\",{\"1\":{\"399\":1}}],[\"数组的大小是固定的\",{\"1\":{\"291\":1}}],[\"数组\",{\"0\":{\"396\":1}}],[\"数组可以根据注解去获取\",{\"1\":{\"334\":1}}],[\"数组可以存放基本数据类型\",{\"1\":{\"291\":1}}],[\"数组类型容易跟数组切片混淆\",{\"1\":{\"399\":1}}],[\"数组类型\",{\"1\":{\"334\":2}}],[\"数组存放的类型只能是一种\",{\"1\":{\"291\":1}}],[\"数据源\",{\"0\":{\"329\":1}}],[\"数据流datainputstream也是filterinputstream的子类\",{\"1\":{\"301\":1}}],[\"数据流\",{\"0\":{\"301\":1}}],[\"数据的\",{\"1\":{\"244\":1}}],[\"数据存储是表格式和关系式的\",{\"1\":{\"116\":1}}],[\"数据模型\",{\"1\":{\"116\":1}}],[\"数据本身就是索引的一部分\",{\"1\":{\"113\":1}}],[\"数据库\",{\"2\":{\"106\":1,\"137\":1,\"486\":1}}],[\"数据统计与线程池管理\",{\"1\":{\"29\":1}}],[\"数据可视化\",{\"1\":{\"15\":1}}],[\"数据解构及设计模式\",{\"0\":{\"15\":1}}],[\"集合结构直接存取\",{\"1\":{\"483\":1}}],[\"集合类型的索引下标都是从\",{\"1\":{\"434\":1}}],[\"集合类与\",{\"0\":{\"291\":1}}],[\"集合\",{\"0\":{\"294\":1}}],[\"集合的大小是可变的\",{\"1\":{\"291\":1}}],[\"集群部署\",{\"0\":{\"126\":1}}],[\"集群等各种维度\",{\"1\":{\"29\":1}}],[\"路径上出现的黑色结点的个数都相等\",{\"1\":{\"289\":1}}],[\"路由转发\",{\"1\":{\"30\":1}}],[\"空结点视为nil\",{\"1\":{\"289\":1}}],[\"空间分配担保\",{\"0\":{\"263\":1}}],[\"红色结点的父结点和子结点不能为红色\",{\"1\":{\"289\":1}}],[\"红黑树中是将空节点视为叶子结点\",{\"1\":{\"289\":1}}],[\"红黑树\",{\"0\":{\"289\":1}}],[\"根结点一定是黑色\",{\"1\":{\"289\":1}}],[\"根据bean定义通过反射创建bean实例\",{\"1\":{\"460\":1}}],[\"根据用户所期望的停顿时间来制定回收计划\",{\"1\":{\"268\":1}}],[\"根据优化规则对代码指令进行重排序\",{\"1\":{\"230\":1}}],[\"根据类加载特性\",{\"1\":{\"157\":1}}],[\"根据日期查询并复制到新路径\",{\"0\":{\"59\":1}}],[\"规则5\",{\"1\":{\"289\":1}}],[\"规则4\",{\"1\":{\"289\":1}}],[\"规则3\",{\"1\":{\"289\":1}}],[\"规则2\",{\"1\":{\"289\":1}}],[\"规则1\",{\"1\":{\"289\":1}}],[\"规则管理等能力\",{\"1\":{\"29\":1}}],[\"否则都用\",{\"1\":{\"411\":1}}],[\"否则为0\",{\"1\":{\"350\":2}}],[\"否则需要通过links指定数据库的容器名\",{\"1\":{\"328\":1}}],[\"否则prometheus无法自动登录会提示\",{\"1\":{\"325\":1}}],[\"否则会抛出异常\",{\"1\":{\"309\":1}}],[\"否则太过死板\",{\"1\":{\"295\":1}}],[\"否则视为不平衡\",{\"1\":{\"288\":1}}],[\"否则获取数据会出现乱码导致无法解析\",{\"1\":{\"70\":1}}],[\"左移\",{\"1\":{\"350\":1}}],[\"左右子树都高度差不能超过1\",{\"1\":{\"288\":1}}],[\"左开右闭区间\",{\"1\":{\"115\":1}}],[\"平衡二叉树一定是一棵二叉查找树\",{\"1\":{\"288\":1}}],[\"平均响应时间\",{\"1\":{\"29\":1}}],[\"后的\",{\"1\":{\"472\":1}}],[\"后台ip和port\",{\"1\":{\"327\":1}}],[\"后台通过actuator暴露的uri\",{\"1\":{\"327\":1}}],[\"后台会创建一个隐藏的聚集主键索引\",{\"1\":{\"115\":1}}],[\"后处于等待的线程\",{\"1\":{\"309\":1}}],[\"后面没有分支了\",{\"1\":{\"287\":1}}],[\"栈\",{\"0\":{\"285\":1}}],[\"线性表\",{\"0\":{\"283\":1,\"284\":1,\"285\":1,\"286\":1}}],[\"线程锁和线程同步\",{\"0\":{\"307\":1}}],[\"线程的礼让和加入\",{\"0\":{\"306\":1}}],[\"线程的休眠和中断\",{\"0\":{\"304\":1}}],[\"线程开始运行\",{\"1\":{\"305\":1}}],[\"线程优先级\",{\"0\":{\"305\":1}}],[\"线程创建工厂\",{\"1\":{\"242\":1}}],[\"线程等待队列\",{\"1\":{\"242\":1}}],[\"线程最大空闲时间的时间单位\",{\"1\":{\"242\":1}}],[\"线程最大空闲时间\",{\"1\":{\"242\":1}}],[\"线程池\",{\"0\":{\"242\":1},\"1\":{\"244\":1}}],[\"线程池隔离\",{\"1\":{\"29\":1}}],[\"线程会直接进入队列去排队\",{\"1\":{\"236\":1}}],[\"线程1加入到此线程\",{\"1\":{\"306\":1}}],[\"线程1结束\",{\"1\":{\"306\":2}}],[\"线程1开始运行\",{\"1\":{\"306\":2}}],[\"线程1和线程2同时开始对a的值进行cas修改\",{\"1\":{\"240\":1}}],[\"线程1再次释放了一次锁\",{\"1\":{\"235\":1}}],[\"线程1释放了一次锁\",{\"1\":{\"235\":1}}],[\"线程2开始运行\",{\"1\":{\"306\":2}}],[\"线程2成功获取到锁\",{\"1\":{\"235\":1}}],[\"线程2想要获取锁\",{\"1\":{\"235\":1}}],[\"才会让appclassloader来加载\",{\"1\":{\"317\":1}}],[\"才会抛出内存溢出异常\",{\"1\":{\"270\":1}}],[\"才能返回true\",{\"1\":{\"281\":1}}],[\"隔壁初中生都在打acm了\",{\"1\":{\"281\":1}}],[\"隔离策略\",{\"1\":{\"29\":1}}],[\"今晚奖励自己一次\",{\"1\":{\"281\":1}}],[\"比较有趣的是\",{\"1\":{\"281\":1}}],[\"比如setter\",{\"1\":{\"455\":1}}],[\"比如synchronized关键字\",{\"1\":{\"259\":1}}],[\"比如l的祖先结点就是a\",{\"1\":{\"287\":1}}],[\"比如k\",{\"1\":{\"287\":1}}],[\"比如b和c就是兄弟结点\",{\"1\":{\"287\":1}}],[\"比如b\",{\"1\":{\"287\":1}}],[\"比如上面这棵树的深度为4\",{\"1\":{\"287\":1}}],[\"比如g的层次就是3\",{\"1\":{\"287\":1}}],[\"比如结点b及其之后延伸的所有分支合在一起\",{\"1\":{\"287\":1}}],[\"比如获取第5个数\",{\"1\":{\"279\":1}}],[\"比如离开了局部变量的作用域或是引用被设定为null\",{\"1\":{\"258\":1}}],[\"比如我们要实现一个专门供给student对象supplier\",{\"1\":{\"281\":1}}],[\"比如我们要计算一个范围内所有数的和\",{\"1\":{\"243\":1}}],[\"比如我们之前提到的string类型对象\",{\"1\":{\"259\":1}}],[\"比如我们某段代码虽然加了锁\",{\"1\":{\"227\":1}}],[\"比如同一个线程可以重复为写锁加锁\",{\"1\":{\"237\":1}}],[\"比如在一个循环内部加锁\",{\"1\":{\"227\":1}}],[\"比如有两个线程都需要修改变量i的值\",{\"1\":{\"225\":1}}],[\"比如程序各组件之间相互了解过多等\",{\"1\":{\"159\":1}}],[\"比如说\",{\"1\":{\"92\":1}}],[\"比如鉴权信息\",{\"1\":{\"70\":1}}],[\"比如\",{\"1\":{\"30\":1,\"278\":1,\"348\":1}}],[\"得到其他类型的值\",{\"1\":{\"281\":1}}],[\"传输给主进程的值\",{\"1\":{\"474\":1}}],[\"传入fileinputstream\",{\"1\":{\"298\":1}}],[\"传入上面函数式需要的参数\",{\"1\":{\"281\":1}}],[\"传统的汇编指令有一操作数\",{\"1\":{\"249\":1}}],[\"预设注解\",{\"0\":{\"319\":1}}],[\"预定好之后\",{\"1\":{\"281\":1}}],[\"预热排队模式\",{\"1\":{\"29\":1}}],[\"吃饱了\",{\"1\":{\"281\":1}}],[\"好了好了\",{\"1\":{\"281\":1}}],[\"真不错\",{\"1\":{\"281\":1}}],[\"真好吃\",{\"1\":{\"281\":2}}],[\"真的不能再来新的任务时\",{\"1\":{\"242\":1}}],[\"专门消费student对象的consumer\",{\"1\":{\"281\":2}}],[\"专门供给student对象的supplier\",{\"1\":{\"281\":1}}],[\"年起出版了以\",{\"1\":{\"279\":1}}],[\"年的双十一大促流量的核心场景\",{\"1\":{\"29\":1}}],[\"斐波纳契数列季刊\",{\"1\":{\"279\":1}}],[\"斐波纳契数列都有直接的应用\",{\"1\":{\"279\":1}}],[\"斐波那契\",{\"1\":{\"279\":1}}],[\"斐波那契数列以如下被以递推的方法定义\",{\"1\":{\"279\":1}}],[\"斐波那契数列\",{\"0\":{\"279\":1},\"1\":{\"279\":2}}],[\"化学等领域\",{\"1\":{\"279\":1}}],[\"准晶体结构\",{\"1\":{\"279\":1}}],[\"∈\",{\"1\":{\"279\":1}}],[\"≥\",{\"1\":{\"279\":1}}],[\"兔子数列\",{\"1\":{\"279\":1}}],[\"故又称为\",{\"1\":{\"279\":1}}],[\"又称黄金分割数列\",{\"1\":{\"279\":1}}],[\"补码就是1010\",{\"1\":{\"278\":1}}],[\"补码就是1001了\",{\"1\":{\"278\":1}}],[\"补码\",{\"0\":{\"278\":1}}],[\"补充\",{\"0\":{\"99\":1}}],[\"符号位不变\",{\"1\":{\"277\":1,\"278\":1}}],[\"正常情况下会报错\",{\"1\":{\"309\":1}}],[\"正常执行完语句\",{\"1\":{\"83\":1}}],[\"正数补0\",{\"1\":{\"350\":1}}],[\"正数的补码就是其本身\",{\"1\":{\"278\":1}}],[\"正数反码是其本身\",{\"1\":{\"277\":1}}],[\"二\",{\"0\":{\"404\":1}}],[\"二叉查找树和平衡二叉树\",{\"0\":{\"288\":1}}],[\"二叉树\",{\"0\":{\"287\":1}}],[\"二进制\",{\"0\":{\"276\":1}}],[\"二操作数甚至三操作数的指令\",{\"1\":{\"249\":1}}],[\"虚引用\",{\"1\":{\"270\":1}}],[\"虚拟机\",{\"1\":{\"272\":1}}],[\"虚拟机内部需要用到的对象\",{\"1\":{\"259\":1}}],[\"虚拟机的结束而销毁\",{\"1\":{\"253\":1}}],[\"被stop\",{\"1\":{\"304\":1}}],[\"被弱引用关联对象只能生存到下一次垃圾收集发生时\",{\"1\":{\"270\":1}}],[\"被添加了锁的对象\",{\"1\":{\"259\":1}}],[\"弱引用对象都会被回收\",{\"1\":{\"270\":1}}],[\"弱引用\",{\"1\":{\"270\":1}}],[\"筛选回收\",{\"1\":{\"268\":1}}],[\"找出要回收的对象\",{\"1\":{\"268\":1}}],[\"找到对应行数\",{\"1\":{\"134\":2}}],[\"找到被调用的接口定义\",{\"1\":{\"70\":1}}],[\"递归扫描整个堆里的对象图\",{\"1\":{\"268\":1}}],[\"能返回值\",{\"1\":{\"361\":1}}],[\"能正确地在可用的region中分配新对象\",{\"1\":{\"268\":1}}],[\"能够存储的数字为\",{\"1\":{\"348\":1}}],[\"能够自主判断和变更机器指令的执行顺序\",{\"1\":{\"230\":1}}],[\"能够从最底层硬件层面得到效率的提升\",{\"1\":{\"225\":1}}],[\"收集器\",{\"0\":{\"268\":1}}],[\"收藏网址\",{\"0\":{\"44\":1,\"61\":1},\"2\":{\"24\":1}}],[\"收藏\",{\"2\":{\"23\":1}}],[\"收藏笔记\",{\"0\":{\"5\":1}}],[\"垃圾收集器就永远不会回收掉被引用的对象\",{\"1\":{\"270\":1}}],[\"垃圾集实现\",{\"0\":{\"267\":1}}],[\"垃圾回收算法\",{\"0\":{\"261\":1}}],[\"垃圾回收之前执行\",{\"1\":{\"260\":1}}],[\"垃圾回收机制\",{\"0\":{\"256\":1}}],[\"整形溢出\",{\"1\":{\"348\":1}}],[\"整数类型\",{\"0\":{\"348\":1}}],[\"整棵树中所有结点的最大层次\",{\"1\":{\"287\":1}}],[\"整理算法\",{\"0\":{\"266\":1}}],[\"整体保存\",{\"1\":{\"120\":1}}],[\"清空字符串\",{\"1\":{\"384\":1}}],[\"清除算法\",{\"0\":{\"264\":1}}],[\"清屏\",{\"1\":{\"60\":1}}],[\"标题\",{\"1\":{\"426\":1}}],[\"标识某注解可以在同一个声明上使用多次\",{\"1\":{\"320\":1}}],[\"标识这个注解怎么保存\",{\"1\":{\"320\":1}}],[\"标识一个匿名函数或函数式接口\",{\"1\":{\"319\":1}}],[\"标记这个注解是继承于哪个注解类\",{\"1\":{\"320\":1}}],[\"标记这个注解应该是哪种\",{\"1\":{\"320\":1}}],[\"标记这些注解是否包含在用户文档中\",{\"1\":{\"320\":1}}],[\"标记过时方法\",{\"1\":{\"319\":1}}],[\"标记\",{\"0\":{\"264\":1,\"265\":1,\"266\":1}}],[\"标准库中的\",{\"1\":{\"384\":1}}],[\"标准库文档\",{\"1\":{\"10\":1}}],[\"标准格式为\",{\"1\":{\"280\":1}}],[\"标准的xml\",{\"1\":{\"70\":1}}],[\"新建预加载文件\",{\"1\":{\"472\":1}}],[\"新建\",{\"1\":{\"472\":3}}],[\"新事例\",{\"1\":{\"466\":1}}],[\"新的\",{\"1\":{\"262\":1}}],[\"新名\",{\"1\":{\"60\":1}}],[\"常量使用\",{\"1\":{\"345\":1}}],[\"常量不仅仅默认不可变\",{\"1\":{\"345\":1}}],[\"常量不允许使用\",{\"1\":{\"345\":1}}],[\"常量池里面引用的对象\",{\"1\":{\"259\":1}}],[\"常规优先级\",{\"1\":{\"305\":1}}],[\"常用于货币相关的场景\",{\"1\":{\"353\":1}}],[\"常用\",{\"0\":{\"60\":1}}],[\"常用软件相关\",{\"0\":{\"21\":1}}],[\"时\",{\"1\":{\"258\":1}}],[\"引入允许我们向现有的类添加新的方法或者属性\",{\"1\":{\"458\":1}}],[\"引入\",{\"1\":{\"458\":1}}],[\"引入的目的主要是为了支持泛型\",{\"1\":{\"333\":1}}],[\"引入额外中间件\",{\"1\":{\"29\":1}}],[\"引用必须总是有效的\",{\"1\":{\"378\":1}}],[\"引用与借用\",{\"0\":{\"373\":1}}],[\"引用类型\",{\"0\":{\"270\":1}}],[\"引用计数\",{\"1\":{\"258\":1}}],[\"引用计数+1\",{\"1\":{\"258\":1}}],[\"引用计数器\",{\"1\":{\"258\":1}}],[\"引用计数法\",{\"0\":{\"258\":1}}],[\"申请堆外内存\",{\"0\":{\"255\":1}}],[\"爆内存和爆栈\",{\"0\":{\"254\":1}}],[\"随着虚拟机的创建而创建\",{\"1\":{\"253\":1}}],[\"随机写\",{\"1\":{\"50\":1}}],[\"随机读\",{\"1\":{\"50\":1}}],[\"设置了\",{\"1\":{\"470\":1}}],[\"设置为\",{\"1\":{\"470\":1}}],[\"设置为守护线程\",{\"1\":{\"312\":1}}],[\"设置线程栈大小\",{\"1\":{\"250\":1}}],[\"设计模式查缺补漏\",{\"0\":{\"138\":1}}],[\"设计模式\",{\"0\":{\"147\":1,\"163\":1,\"185\":1},\"1\":{\"15\":1,\"218\":1},\"2\":{\"220\":1}}],[\"此时\",{\"1\":{\"333\":1}}],[\"此时1000表示\",{\"1\":{\"278\":1}}],[\"此时不能完成修改任务\",{\"1\":{\"225\":1}}],[\"此外\",{\"1\":{\"249\":1}}],[\"采用的是定制版的jvm\",{\"1\":{\"249\":1}}],[\"该变量被称为值的所有者\",{\"1\":{\"371\":1}}],[\"该注解只能用于方法上\",{\"1\":{\"334\":1}}],[\"该方法是否是重写方法\",{\"1\":{\"319\":1}}],[\"该指令需要对数据进行操作\",{\"1\":{\"249\":1}}],[\"该模式在多线程环境下需要进行特殊处理\",{\"1\":{\"159\":1}}],[\"该模式同时解决了两个问题\",{\"1\":{\"159\":1}}],[\"本质和普通进程类似\",{\"1\":{\"312\":1}}],[\"本质是栈结构\",{\"1\":{\"249\":1}}],[\"本地方法栈\",{\"1\":{\"253\":1}}],[\"本次的测试线程为30\",{\"1\":{\"51\":1}}],[\"本次的测试文件大小为5g\",{\"1\":{\"51\":1}}],[\"技术概括\",{\"0\":{\"249\":1}}],[\"箱明细数据分批上传保存\",{\"1\":{\"244\":1}}],[\"存储\",{\"0\":{\"439\":1}}],[\"存储不同元素\",{\"0\":{\"435\":1}}],[\"存储锁\",{\"1\":{\"244\":1}}],[\"存放的内容\",{\"1\":{\"310\":1}}],[\"存在\",{\"1\":{\"471\":1}}],[\"存在使用差异\",{\"1\":{\"466\":1}}],[\"存在幻读问题\",{\"1\":{\"115\":1}}],[\"存在不可重复读问题\",{\"1\":{\"115\":1}}],[\"存在脏读问题\",{\"1\":{\"115\":1}}],[\"越玩越有递归那味了\",{\"1\":{\"243\":1}}],[\"小于就可以开始算了\",{\"1\":{\"243\":1}}],[\"小美\",{\"1\":{\"154\":2}}],[\"继承recursivetask\",{\"1\":{\"243\":1}}],[\"继续使用\",{\"1\":{\"28\":1}}],[\"拒绝策略\",{\"1\":{\"242\":1}}],[\"之后\",{\"1\":{\"470\":1}}],[\"之后会尝试复用线程资源\",{\"1\":{\"242\":1}}],[\"之前\",{\"1\":{\"98\":1}}],[\"直到有线程资源可用为止\",{\"1\":{\"242\":1}}],[\"直到到达核心线程池大小为止\",{\"1\":{\"242\":1}}],[\"直接删除第二个汉字\",{\"1\":{\"384\":1}}],[\"直接反射获取\",{\"1\":{\"334\":1}}],[\"直接相加\",{\"1\":{\"277\":1}}],[\"直接查看比较高的磁盘读写程序\",{\"1\":{\"60\":1}}],[\"直接解压\",{\"1\":{\"43\":1}}],[\"核心原则是\",{\"1\":{\"342\":1}}],[\"核心线程池大小\",{\"1\":{\"242\":1}}],[\"核心库无多余依赖\",{\"1\":{\"29\":1}}],[\"很简单\",{\"1\":{\"419\":1}}],[\"很有可能造成程序反应迟钝\",{\"1\":{\"298\":1}}],[\"很明显\",{\"1\":{\"240\":1}}],[\"很少使用\",{\"1\":{\"186\":1}}],[\"再比如\",{\"1\":{\"357\":1}}],[\"再不起眼的东西\",{\"1\":{\"357\":1}}],[\"再执行\",{\"1\":{\"281\":1}}],[\"再清理掉整个旧region的全部空间\",{\"1\":{\"268\":1}}],[\"再去进入等待队列\",{\"1\":{\"236\":1}}],[\"再通过遍历testlist寻找相应的实例\",{\"1\":{\"79\":1}}],[\"会出现报错情况\",{\"1\":{\"471\":1}}],[\"会抛出\",{\"1\":{\"470\":1}}],[\"会返回一个\",{\"1\":{\"441\":1}}],[\"会报编译警告\",{\"1\":{\"319\":1}}],[\"会报编译错误\",{\"1\":{\"319\":1}}],[\"会自动向子线程传递\",{\"1\":{\"310\":1}}],[\"会自动销毁\",{\"1\":{\"242\":1}}],[\"会唤醒刚才变成等待状态的线程\",{\"1\":{\"309\":1}}],[\"会使得线程的运行终止\",{\"1\":{\"304\":1}}],[\"会使得线程处于等待状态\",{\"1\":{\"304\":1}}],[\"会从运行状态回到就绪\",{\"1\":{\"304\":1}}],[\"会转变为效率更高的红黑树结构\",{\"1\":{\"295\":1}}],[\"会被列入回收范围内进行第二次回收\",{\"1\":{\"270\":1}}],[\"会被清除\",{\"1\":{\"244\":1}}],[\"会继续划分子任务执行\",{\"1\":{\"243\":2}}],[\"会直接去尝试获取\",{\"1\":{\"236\":1}}],[\"会将整个同步范围进行扩展\",{\"1\":{\"227\":1}}],[\"永远都是队列的第一位才能得到锁\",{\"1\":{\"236\":1}}],[\"永久性重定向\",{\"1\":{\"94\":1}}],[\"公平锁\",{\"1\":{\"236\":1}}],[\"公平锁与非公平锁\",{\"0\":{\"236\":1}}],[\"公司分列\",{\"1\":{\"30\":1}}],[\"释放两次后其他线程才能加锁\",{\"1\":{\"235\":1}}],[\"即0置为1\",{\"1\":{\"350\":1}}],[\"即\",{\"1\":{\"348\":2}}],[\"即常说的泛型\",{\"1\":{\"334\":1}}],[\"即在反码的基础上+1\",{\"1\":{\"278\":1}}],[\"即可\",{\"1\":{\"242\":1,\"419\":1}}],[\"即程序执行的顺序按照代码的先后顺序执行\",{\"1\":{\"231\":1}}],[\"即使服务对象还未准备好或不存在\",{\"1\":{\"177\":1}}],[\"机器指令级别的重排序\",{\"1\":{\"230\":1}}],[\"机器发现\",{\"1\":{\"29\":1}}],[\"机器发现等\",{\"1\":{\"29\":1}}],[\"具体实现依然是基于jvm内存模型实现的\",{\"1\":{\"228\":1}}],[\"具体命令\",{\"0\":{\"50\":1}}],[\"内置的\",{\"1\":{\"254\":1}}],[\"内存划分完成之后\",{\"1\":{\"253\":1}}],[\"内存区域一共分为5个区域\",{\"1\":{\"253\":1}}],[\"内存区域划分\",{\"0\":{\"253\":1}}],[\"内存管理\",{\"0\":{\"252\":1}}],[\"内存模型\",{\"0\":{\"228\":1,\"229\":1}}],[\"内容展示到页面\",{\"1\":{\"474\":1}}],[\"内容\",{\"1\":{\"60\":2,\"426\":1}}],[\"偏向锁\",{\"0\":{\"226\":1}}],[\"表达式3\",{\"1\":{\"410\":1}}],[\"表达式2\",{\"1\":{\"410\":1}}],[\"表达式1\",{\"1\":{\"410\":1}}],[\"表达式不能包含分号\",{\"1\":{\"361\":1}}],[\"表达式\",{\"0\":{\"280\":1,\"361\":1,\"457\":1},\"1\":{\"280\":1}}],[\"表示借用\",{\"1\":{\"434\":1}}],[\"表示该函数永不返回\",{\"1\":{\"367\":1}}],[\"表示我们不关注具体的值\",{\"1\":{\"357\":1}}],[\"表示参数化类型\",{\"1\":{\"334\":1}}],[\"表示此对象不可能再被使用\",{\"1\":{\"258\":1}}],[\"表示其他线程还没对其进行修改\",{\"1\":{\"225\":1}}],[\"表锁\",{\"1\":{\"115\":1}}],[\"那就用\",{\"1\":{\"455\":1}}],[\"那就正常进行替换\",{\"1\":{\"225\":1}}],[\"那如果我们手动创建一个与jdk包名一样\",{\"1\":{\"317\":1}}],[\"那么该生命周期会被赋给所有的输出生命周期\",{\"1\":{\"445\":1}}],[\"那么a或者t至少有一个是在当前作用域中定义的\",{\"1\":{\"426\":1}}],[\"那么a就是b\",{\"1\":{\"287\":1}}],[\"那么返回一个\",{\"1\":{\"366\":1}}],[\"那么这个函数返回什么呢\",{\"1\":{\"357\":1}}],[\"那么当你将其修改为范围之外的值\",{\"1\":{\"348\":1}}],[\"那么能否将对象也支持呢\",{\"1\":{\"302\":1}}],[\"那么能否有更加简便的方式来做这样的事情呢\",{\"1\":{\"299\":1}}],[\"那么称这两个节点为兄弟结点\",{\"1\":{\"287\":1}}],[\"那么我们称这个结点为叶子结点\",{\"1\":{\"287\":1}}],[\"那么我们可以将匿名内部类简写为\",{\"1\":{\"280\":1}}],[\"那么此时4bit位能够表示的范围是\",{\"1\":{\"278\":1}}],[\"那么第二次\",{\"1\":{\"260\":1}}],[\"那么它就会被存储到局部变量队列上\",{\"1\":{\"249\":1}}],[\"那么被操作的数据在指令执行前\",{\"1\":{\"249\":1}}],[\"那么只能拒绝了\",{\"1\":{\"242\":1}}],[\"那么就只会在获取时才创建\",{\"1\":{\"455\":1}}],[\"那么就是5\",{\"1\":{\"279\":1}}],[\"那么就需要限定一下范围\",{\"1\":{\"243\":1}}],[\"那么就会直接尝试继续创建新的非核心线程运行\",{\"1\":{\"242\":1}}],[\"那么就可以解决aba问题了\",{\"1\":{\"240\":1}}],[\"那么就替换失败\",{\"1\":{\"225\":1}}],[\"那么如何解决这种aba问题呢\",{\"1\":{\"240\":1}}],[\"那么说明其他线程已经将其修改\",{\"1\":{\"225\":1}}],[\"那么并不会加锁访问i\",{\"1\":{\"225\":1}}],[\"那么没有任何理由引入新的类和接口\",{\"1\":{\"213\":1}}],[\"那么应用该模式可能会显得小题大作\",{\"1\":{\"210\":1}}],[\"那么你将可以节省大量内存\",{\"1\":{\"183\":1}}],[\"看看当前数据的值是不是我们预期的那样\",{\"1\":{\"225\":1}}],[\"参考文章\",{\"0\":{\"218\":1,\"245\":1,\"272\":1,\"321\":1,\"335\":1,\"479\":1}}],[\"参数中不包含\",{\"1\":{\"419\":1}}],[\"参数化类型\",{\"1\":{\"334\":2}}],[\"参数名称\",{\"1\":{\"280\":1}}],[\"参数类型\",{\"1\":{\"280\":1}}],[\"参数\",{\"1\":{\"154\":3}}],[\"装饰器模式\",{\"1\":{\"217\":1}}],[\"装饰模式\",{\"0\":{\"173\":1}}],[\"适配器模式\",{\"1\":{\"217\":1}}],[\"访问者对象可以在与各种对象交互时收集一些有用的信息\",{\"1\":{\"215\":1}}],[\"访问者模式\",{\"0\":{\"214\":1}}],[\"访问协议\",{\"1\":{\"27\":1}}],[\"许多现代编程语言支持函数类型功能\",{\"1\":{\"213\":1}}],[\"策略模式\",{\"0\":{\"211\":1},\"1\":{\"217\":1}}],[\"订阅者的通知顺序是随机的\",{\"1\":{\"207\":1}}],[\"观察者模式\",{\"0\":{\"205\":1},\"1\":{\"217\":1}}],[\"绝大部分动态编程语言\",{\"1\":{\"204\":1}}],[\"负数补1\",{\"1\":{\"350\":1}}],[\"负数还有0\",{\"1\":{\"348\":1}}],[\"负数多出来一个可以表示的数\",{\"1\":{\"278\":1}}],[\"负数的补码是在其原码的基础上\",{\"1\":{\"278\":1}}],[\"负数的反码是在其原码的基础上\",{\"1\":{\"277\":1}}],[\"负责更新region的统计数据\",{\"1\":{\"268\":1}}],[\"负责人必须完整跟踪原发器的生命周期\",{\"1\":{\"204\":1}}],[\"负载均衡策略\",{\"1\":{\"27\":1}}],[\"程序的正常运\",{\"1\":{\"317\":1}}],[\"程序正常运行中\",{\"1\":{\"312\":1}}],[\"程序计数器都是线程之间相互隔离的\",{\"1\":{\"253\":1}}],[\"程序将消耗大量内存\",{\"1\":{\"204\":1}}],[\"程序员必会的工具库\",{\"1\":{\"11\":1}}],[\"程序员进阶之路\",{\"1\":{\"11\":1}}],[\"备忘录模式\",{\"0\":{\"202\":1}}],[\"迭代器模式\",{\"0\":{\"196\":1},\"1\":{\"217\":1}}],[\"责任链模式\",{\"0\":{\"190\":1},\"1\":{\"217\":1}}],[\"部分请求可能未被处理\",{\"1\":{\"192\":1}}],[\"部分客户端可能会受到算法框架的限制\",{\"1\":{\"189\":1}}],[\"部署文档\",{\"1\":{\"54\":1}}],[\"部署博客\",{\"0\":{\"54\":1}}],[\"部署\",{\"0\":{\"38\":1,\"326\":1},\"1\":{\"48\":1}}],[\"行为型\",{\"0\":{\"185\":1},\"1\":{\"217\":1}}],[\"行锁\",{\"1\":{\"115\":1}}],[\"团队中的新成员总是会问\",{\"1\":{\"184\":1}}],[\"享元模式\",{\"0\":{\"182\":1}}],[\"外观可能成为与程序中所有类都耦合的上帝对象\",{\"1\":{\"181\":1}}],[\"外观模式\",{\"0\":{\"179\":1},\"1\":{\"217\":1}}],[\"代表匹配一个值\",{\"1\":{\"344\":1}}],[\"代表了\",{\"1\":{\"334\":1}}],[\"代理也可以正常工作\",{\"1\":{\"177\":1}}],[\"代理模式\",{\"0\":{\"176\":1},\"1\":{\"217\":1}}],[\"代码出错\",{\"1\":{\"466\":1}}],[\"代码语句\",{\"1\":{\"280\":1}}],[\"代码会变得更加复杂\",{\"1\":{\"184\":1}}],[\"代码整体复杂度增加\",{\"1\":{\"166\":1}}],[\"代码可能会变得更加复杂\",{\"1\":{\"195\":1}}],[\"代码可能会变得复杂\",{\"1\":{\"178\":1}}],[\"代码可能会比之前更加复杂\",{\"1\":{\"153\":1}}],[\"代码可能会因此变得更复杂\",{\"1\":{\"150\":1}}],[\"代码复杂度\",{\"1\":{\"29\":1}}],[\"代码量减少90\",{\"1\":{\"11\":1}}],[\"各层的初始化配置代码看上去可能会很糟糕\",{\"1\":{\"175\":1}}],[\"桥接模式\",{\"0\":{\"167\":1},\"1\":{\"217\":1}}],[\"类似\",{\"1\":{\"357\":1,\"397\":1}}],[\"类的一个具体对象\",{\"1\":{\"333\":1}}],[\"类的静态成员变量引用的对象\",{\"1\":{\"259\":1}}],[\"类型和\",{\"1\":{\"381\":1}}],[\"类型大小\",{\"1\":{\"348\":1}}],[\"类型定义的形式统一为\",{\"1\":{\"348\":1}}],[\"类型变量\",{\"1\":{\"334\":1}}],[\"类型变量类型\",{\"1\":{\"333\":1}}],[\"类型\",{\"0\":{\"332\":1},\"1\":{\"334\":1,\"335\":1,\"381\":1,\"384\":2,\"441\":1}}],[\"类加载器\",{\"0\":{\"317\":1}}],[\"类加载机制\",{\"0\":{\"313\":1}}],[\"类与类加载\",{\"0\":{\"271\":1}}],[\"类适配\",{\"1\":{\"164\":1}}],[\"类\",{\"0\":{\"164\":1},\"1\":{\"334\":2}}],[\"类时\",{\"1\":{\"157\":1}}],[\"结合学习\",{\"1\":{\"466\":1}}],[\"结合两个数据库表结构生成修改表字段语句\",{\"0\":{\"102\":1}}],[\"结构体\",{\"0\":{\"390\":1}}],[\"结构型\",{\"0\":{\"163\":1},\"1\":{\"217\":1}}],[\"结尾的表达式返回一个\",{\"1\":{\"366\":1}}],[\"结点度为0时\",{\"1\":{\"287\":1}}],[\"结束之后会自动销毁\",{\"1\":{\"253\":1}}],[\"克隆包含循环引用的复杂对象可能会非常麻烦\",{\"1\":{\"162\":1}}],[\"避免反复运行初始化代码\",{\"1\":{\"161\":1}}],[\"避免多个线程多次创建单例对象\",{\"1\":{\"159\":1}}],[\"深拷贝\",{\"1\":{\"160\":1}}],[\"浅拷贝\",{\"1\":{\"160\":1}}],[\"浅棕色带点微卷\",{\"1\":{\"154\":2}}],[\"要是有强迫症不能忍受黄标但是又实在想用字段注入\",{\"1\":{\"455\":1}}],[\"要求右边的参数必须为字符串的切片引用\",{\"1\":{\"384\":1}}],[\"要求浏览器不会把重定向请求的\",{\"1\":{\"94\":1}}],[\"要显式处理可能的溢出\",{\"1\":{\"348\":1}}],[\"要么为空\",{\"1\":{\"416\":1}}],[\"要么任意多个不可变引用\",{\"1\":{\"378\":1}}],[\"要么就不做\",{\"1\":{\"231\":1}}],[\"要么干脆不编写测试代码\",{\"1\":{\"159\":1}}],[\"违反了单一职责原则\",{\"1\":{\"159\":1}}],[\"仅仅编译器阶段\",{\"1\":{\"319\":1}}],[\"仅仅是检查\",{\"1\":{\"319\":1}}],[\"仅仅只是标记一下gc\",{\"1\":{\"268\":1}}],[\"仅仅锁住索引记录的一行\",{\"1\":{\"115\":1}}],[\"仅在首次请求单例对象时对其进行初始化\",{\"1\":{\"158\":1}}],[\"懒汉单例模式\",{\"1\":{\"157\":1}}],[\"暂时不需要了解\",{\"1\":{\"298\":1}}],[\"暂时停止对该服务的调用\",{\"1\":{\"29\":1}}],[\"暂停用户线程\",{\"1\":{\"268\":2}}],[\"暂缓创建步骤或递归运行创建步骤\",{\"1\":{\"155\":1}}],[\"阿玛尼红管唇釉\",{\"1\":{\"154\":2}}],[\"阿里的nacos\",{\"1\":{\"31\":1}}],[\"纪念日礼物\",{\"1\":{\"154\":2}}],[\"迪奥烈焰蓝金\",{\"1\":{\"154\":2}}],[\"迪米特法则\",{\"0\":{\"146\":1}}],[\"生产环境查看一下功能是否正常运行\",{\"1\":{\"477\":1}}],[\"生产环境\",{\"1\":{\"472\":1}}],[\"生命周期与继承\",{\"1\":{\"455\":1}}],[\"生命周期\",{\"0\":{\"444\":1,\"461\":1},\"1\":{\"405\":1}}],[\"生成单号或者箱码\",{\"1\":{\"244\":1}}],[\"生成不同形式的产品时\",{\"1\":{\"155\":1}}],[\"生成器模式\",{\"0\":{\"154\":1},\"1\":{\"217\":1}}],[\"生日礼物\",{\"1\":{\"154\":2}}],[\"情人节礼物\",{\"1\":{\"154\":2}}],[\"买东西\",{\"1\":{\"154\":2}}],[\"购物\",{\"1\":{\"154\":2}}],[\"逛街\",{\"1\":{\"154\":2}}],[\"上海浦东\",{\"1\":{\"154\":2}}],[\"省略属性\",{\"1\":{\"154\":1}}],[\"省略\",{\"1\":{\"154\":2}}],[\"建造者\",{\"0\":{\"154\":1},\"1\":{\"217\":1}}],[\"向应用程序中引入新产品变体时\",{\"1\":{\"152\":1}}],[\"抽象部分专注于处理高层逻辑\",{\"1\":{\"168\":1}}],[\"抽象工厂类\",{\"0\":{\"151\":1},\"1\":{\"217\":1}}],[\"抽象不应该依赖于细节\",{\"1\":{\"143\":1}}],[\"应用该模式可能会矫枉过正\",{\"1\":{\"198\":1}}],[\"应用工厂方法模式需要引入许多新的子类\",{\"1\":{\"150\":1}}],[\"应该是为了配置中心集群\",{\"1\":{\"31\":1}}],[\"你也可以直接用for\",{\"1\":{\"399\":1}}],[\"你也太敷衍了吧\",{\"1\":{\"357\":1}}],[\"你只能拥有要么一个可变引用\",{\"1\":{\"378\":1}}],[\"你不能说\",{\"1\":{\"357\":1}}],[\"你没看错\",{\"1\":{\"357\":1}}],[\"你的室友都拿国家奖学金了\",{\"1\":{\"281\":1}}],[\"你都要更新所有的访问者\",{\"1\":{\"216\":1}}],[\"你使用这些函数的方式就和使用策略对象时完全相同\",{\"1\":{\"213\":1}}],[\"你可实现新型的集合和迭代器并将其传递给现有代码\",{\"1\":{\"197\":1}}],[\"你可对客户端代码和集合进行整理\",{\"1\":{\"197\":1}}],[\"你可对发起操作和执行操作的类进行解耦\",{\"1\":{\"191\":1}}],[\"你可将重复代码提取到一个超类中\",{\"1\":{\"188\":1}}],[\"你可仅允许客户端重写一个大型算法中的特定部分\",{\"1\":{\"188\":1}}],[\"你可能需要牺牲执行速度来换取内存\",{\"1\":{\"184\":1}}],[\"你可以引入在不同类对象上执行的新行为\",{\"1\":{\"215\":1}}],[\"你可以使用组合来代替继承\",{\"1\":{\"212\":1}}],[\"你可以通过让负责人维护原发器状态历史记录来简化原发器代码\",{\"1\":{\"203\":1}}],[\"你可以更方便地复用各个组件\",{\"1\":{\"200\":1}}],[\"你可以更方便地生成复杂对象\",{\"1\":{\"161\":1}}],[\"你可以减轻应用中多个组件间的耦合情况\",{\"1\":{\"200\":1}}],[\"你可以暂停遍历并在需要时继续\",{\"1\":{\"197\":1}}],[\"你可以并行遍历同一集合\",{\"1\":{\"197\":1}}],[\"你可以实现操作的延迟执行\",{\"1\":{\"194\":1}}],[\"你可以实现撤销和恢复功能\",{\"1\":{\"194\":1}}],[\"你可以解耦触发和执行操作的类\",{\"1\":{\"194\":1}}],[\"你可以控制请求处理的顺序\",{\"1\":{\"191\":1}}],[\"你可以让自己的代码独立于复杂子系统\",{\"1\":{\"180\":1}}],[\"你可以对生命周期进行管理\",{\"1\":{\"177\":1}}],[\"你可以在运行时切换对象内的算法\",{\"1\":{\"212\":1}}],[\"你可以在运行时建立对象之间的联系\",{\"1\":{\"206\":1}}],[\"你可以在运行时添加或删除对象的功能\",{\"1\":{\"174\":1}}],[\"你可以在不破坏对象封装情况的前提下创建对象状态快照\",{\"1\":{\"203\":1}}],[\"你可以在不修改已有客户端代码的情况下在程序中创建新的命令\",{\"1\":{\"194\":1}}],[\"你可以在不更改现有代码的情况下在程序中新增处理者\",{\"1\":{\"191\":1}}],[\"你可以在不对服务或客户端做出修改的情况下创建新代理\",{\"1\":{\"177\":1}}],[\"你可以在客户端毫无察觉的情况下控制服务对象\",{\"1\":{\"177\":1}}],[\"你可以用\",{\"1\":{\"357\":1}}],[\"你可以用多个装饰封装对象来组合几种行为\",{\"1\":{\"174\":1}}],[\"你可以用继承以外的方式来处理复杂对象的不同配置\",{\"1\":{\"161\":1}}],[\"你可以利用多态和递归机制更方便地使用复杂树结构\",{\"1\":{\"171\":1}}],[\"你可以新增抽象部分和实现部分\",{\"1\":{\"168\":1}}],[\"你可以创建与平台无关的类和程序\",{\"1\":{\"168\":1}}],[\"你可以克隆预生成原型\",{\"1\":{\"161\":1}}],[\"你可以克隆对象\",{\"1\":{\"161\":1}}],[\"你可以保证一个类只有一个实例\",{\"1\":{\"158\":1}}],[\"你可以将算法的实现和使用算法的代码隔离开来\",{\"1\":{\"212\":1}}],[\"你可以将多个组件间的交流抽取到同一位置\",{\"1\":{\"200\":1}}],[\"你可以将一组简单命令组合成一个复杂命令\",{\"1\":{\"194\":1}}],[\"你可以将实现了许多不同行为的一个大类拆分为多个较小的类\",{\"1\":{\"174\":1}}],[\"你可以将复杂构造代码从产品的业务逻辑中分离出来\",{\"1\":{\"155\":1}}],[\"你可以将产品生成代码抽取到同一位置\",{\"1\":{\"152\":1}}],[\"你可以将产品创建代码放在程序的单一位置\",{\"1\":{\"149\":1}}],[\"你可以复用相同的制造代码\",{\"1\":{\"155\":1}}],[\"你可以分步创建对象\",{\"1\":{\"155\":1}}],[\"你可以避免客户端和具体产品代码的耦合\",{\"1\":{\"152\":1}}],[\"你可以避免创建者和具体产品之间的紧密耦合\",{\"1\":{\"149\":1}}],[\"你可以确保同一工厂生成的产品相互匹配\",{\"1\":{\"152\":1}}],[\"你无需对上下文进行修改就能够引入新的策略\",{\"1\":{\"212\":1}}],[\"你无需修改发布者代码就能引入新的订阅者类\",{\"1\":{\"206\":1}}],[\"你无需修改实际组件就能增加新的中介者\",{\"1\":{\"200\":1}}],[\"你无需修改客户端代码\",{\"1\":{\"152\":1}}],[\"你无需创建新子类即可扩展对象的行为\",{\"1\":{\"174\":1}}],[\"你需要过度一般化组件接口\",{\"1\":{\"172\":1}}],[\"你就可以在应用中添加新元素\",{\"1\":{\"171\":1}}],[\"你就可以在程序中引入新的产品类型\",{\"1\":{\"149\":1}}],[\"你就能在不修改现有客户端代码的情况下在程序中添加新类型的适配器\",{\"1\":{\"165\":1}}],[\"你获得了一个指向该实例的全局访问节点\",{\"1\":{\"158\":1}}],[\"子类指定类型\",{\"1\":{\"148\":1}}],[\"子系统\",{\"1\":{\"66\":2}}],[\"子系统都是默认放在系统盘的\",{\"1\":{\"66\":1}}],[\"由多个收集器线程并行完成的\",{\"1\":{\"268\":1}}],[\"由\",{\"1\":{\"148\":1}}],[\"由于切片的索引是通过字节来进行\",{\"1\":{\"383\":1}}],[\"由于\",{\"1\":{\"356\":1}}],[\"由于外部i\",{\"1\":{\"298\":1}}],[\"由于整棵树错综复杂\",{\"1\":{\"287\":1}}],[\"由于消除\",{\"1\":{\"278\":1}}],[\"由于单例类的构造函数是私有的\",{\"1\":{\"159\":1}}],[\"由于静态内部类持有单例对象\",{\"1\":{\"157\":1}}],[\"由于该模式需要新增多个类\",{\"1\":{\"156\":1}}],[\"由于该主题中产生的消息会被所有实例监听和消费\",{\"1\":{\"32\":1}}],[\"由于采用该模式需要向应用中引入众多接口和类\",{\"1\":{\"153\":1}}],[\"由于修改注释同时也会修改字段长度和是否为空限制\",{\"1\":{\"103\":1}}],[\"由于项目统一切片封装返回对象\",{\"1\":{\"98\":1}}],[\"将选中的\",{\"1\":{\"474\":1}}],[\"将增强处理添加到目标对象中\",{\"1\":{\"458\":1}}],[\"将a变成一个迭代器\",{\"1\":{\"399\":1}}],[\"将a的值修改为2之后紧接着又修改回1\",{\"1\":{\"240\":1}}],[\"将cpu资源让位给其他线程\",{\"1\":{\"306\":1}}],[\"将此函数式的返回值作为当前实现的实参\",{\"1\":{\"281\":1}}],[\"将传入的int参数转换为字符串的形式\",{\"1\":{\"281\":1}}],[\"将与特定状态相关的代码放在单独的类中\",{\"1\":{\"209\":1}}],[\"将工厂抽象为抽象类\",{\"1\":{\"148\":1}}],[\"将数据存储在列和行中\",{\"1\":{\"116\":1}}],[\"将数据存储在\",{\"1\":{\"116\":1}}],[\"工具\",{\"1\":{\"476\":1}}],[\"工具类库\",{\"1\":{\"11\":1}}],[\"工厂与\",{\"0\":{\"460\":1}}],[\"工厂bean\",{\"1\":{\"455\":1}}],[\"工厂方法模式\",{\"0\":{\"148\":1},\"1\":{\"217\":1}}],[\"每一个引用参数都会获得独自的生命周期\",{\"1\":{\"445\":1}}],[\"每一个软件单位对其他单位都只有最少的知识\",{\"1\":{\"146\":1}}],[\"每10秒检测一次告警\",{\"1\":{\"327\":1}}],[\"每10秒采集一次数据\",{\"1\":{\"327\":1}}],[\"每向下一层+1\",{\"1\":{\"287\":1}}],[\"每当有一个地方引用此对象时\",{\"1\":{\"258\":1}}],[\"每个函数参数都需要标注类型\",{\"1\":{\"364\":1}}],[\"每个有符号类型规定的数字范围是\",{\"1\":{\"348\":1}}],[\"每个对象都应该有针对于锁的一些操作\",{\"1\":{\"309\":1}}],[\"每个对象都包含一个\",{\"1\":{\"258\":1}}],[\"每个元素都有一个自己的下标位置\",{\"1\":{\"292\":1}}],[\"每个结点到空节点\",{\"1\":{\"289\":1}}],[\"每个结点可以是黑色或是红色\",{\"1\":{\"289\":1}}],[\"每个结点的层次\",{\"1\":{\"287\":1}}],[\"每个结点延伸下去的下一个结点都可以称为一棵子树\",{\"1\":{\"287\":1}}],[\"每个结点连接的子结点数目\",{\"1\":{\"287\":1}}],[\"每个数字的值都是前两个数字的和\",{\"1\":{\"279\":1}}],[\"每个线程都有一个自己的区域\",{\"1\":{\"253\":1}}],[\"每个任务最多计算125个数的和\",{\"1\":{\"243\":1}}],[\"每个实例都写成如下将会是越来越多\",{\"1\":{\"79\":1}}],[\"每次在元素层次结构中添加或移除一个类时\",{\"1\":{\"216\":1}}],[\"合成复用原则\",{\"0\":{\"145\":1}}],[\"细节应该依赖于抽象\",{\"1\":{\"143\":1}}],[\"里面在后续使用\",{\"1\":{\"471\":1}}],[\"里氏替换原则\",{\"0\":{\"142\":1}}],[\"里添加修改命令\",{\"0\":{\"134\":1}}],[\"替换对应字段\",{\"1\":{\"134\":1}}],[\"替换hystrix\",{\"1\":{\"29\":2}}],[\"去除\",{\"1\":{\"133\":1}}],[\"版本永久代去掉变为元空间\",{\"1\":{\"262\":1}}],[\"版本\",{\"0\":{\"132\":1}}],[\"更换\",{\"0\":{\"132\":1}}],[\"更新\",{\"0\":{\"433\":1},\"1\":{\"49\":1}}],[\"哨兵模式\",{\"0\":{\"125\":1}}],[\"主要部分\",{\"1\":{\"339\":1,\"405\":1}}],[\"主要有三种角色\",{\"1\":{\"27\":1}}],[\"主机端口\",{\"1\":{\"328\":1}}],[\"主从复制\",{\"0\":{\"124\":1}}],[\"乐观锁\",{\"1\":{\"122\":1}}],[\"持久化\",{\"0\":{\"120\":1}}],[\"证书对用户进行身份验证\",{\"1\":{\"116\":1}}],[\"半结构化和结构化数据\",{\"1\":{\"116\":1}}],[\"灵活性\",{\"1\":{\"116\":1}}],[\"擅长插入或更新大量记录\",{\"1\":{\"116\":1}}],[\"差异摘要\",{\"0\":{\"116\":1}}],[\"普通队列中从队尾入队\",{\"1\":{\"293\":1}}],[\"普通索引不管只要加锁都会产生间隙锁\",{\"1\":{\"115\":1}}],[\"普罗米修斯\",{\"1\":{\"36\":1}}],[\"且其中一个是\",{\"1\":{\"445\":1}}],[\"且new并不是关键字\",{\"1\":{\"418\":1}}],[\"且忽略其他条件时就用\",{\"1\":{\"411\":1}}],[\"且配置文件需要将ip改成容器名\",{\"1\":{\"328\":1}}],[\"且无需对这些类做出修改\",{\"1\":{\"215\":1}}],[\"且它们之间不会相互影响\",{\"1\":{\"168\":1}}],[\"且表中存在记录\",{\"1\":{\"115\":1}}],[\"且未配置单独的事务管理器\",{\"1\":{\"83\":1}}],[\"临键锁\",{\"1\":{\"115\":1}}],[\"临时重定向\",{\"1\":{\"94\":1}}],[\"临时性重定向\",{\"1\":{\"94\":1}}],[\"防止幻读\",{\"1\":{\"115\":1}}],[\"间隙锁\",{\"1\":{\"115\":1}}],[\"没错\",{\"1\":{\"357\":1}}],[\"没有泛型的之前\",{\"1\":{\"333\":1}}],[\"没有返回值\",{\"1\":{\"281\":1}}],[\"没有架构\",{\"1\":{\"116\":1}}],[\"没有提供异步支持\",{\"1\":{\"30\":1}}],[\"没走任何索引会将每条聚合索引加写锁类似表锁\",{\"1\":{\"115\":1}}],[\"锁降级指的是写锁降级为读锁\",{\"1\":{\"238\":1}}],[\"锁降级和锁升级\",{\"0\":{\"238\":1}}],[\"锁框架\",{\"0\":{\"233\":1}}],[\"锁粗化则是我们代码中频繁地出现互斥同步操作\",{\"1\":{\"227\":1}}],[\"锁消除和锁粗化都是在运行时的一些优化方案\",{\"1\":{\"227\":1}}],[\"锁消除和锁粗化\",{\"0\":{\"227\":1}}],[\"锁的实现得到了改进\",{\"1\":{\"224\":1}}],[\"锁\",{\"0\":{\"122\":1},\"1\":{\"244\":1}}],[\"锁住的永远是索引而非记录本身\",{\"1\":{\"115\":1}}],[\"锁机制\",{\"0\":{\"114\":1,\"223\":1}}],[\"记录锁和间隙锁的组合\",{\"1\":{\"115\":1}}],[\"记录锁\",{\"1\":{\"115\":1}}],[\"全局锁\",{\"1\":{\"115\":1}}],[\"全栈知识体系\",{\"1\":{\"11\":1}}],[\"也可以带一个返回值\",{\"1\":{\"407\":1}}],[\"也可以叫双亲结点\",{\"1\":{\"287\":1}}],[\"也就自然找不到main方法了\",{\"1\":{\"317\":1}}],[\"也就是织入\",{\"1\":{\"458\":1}}],[\"也就是我们上面编写的方法实现\",{\"1\":{\"458\":1}}],[\"也就是接受几个参数\",{\"1\":{\"419\":1}}],[\"也就是字符串中的字符所占的字节数是变化的\",{\"1\":{\"381\":1}}],[\"也就是说不能有两个连续的红色\",{\"1\":{\"289\":1}}],[\"也就是说\",{\"1\":{\"260\":1,\"312\":1}}],[\"也就是java程序开始运行之后就会根据分区合理地使用对应区域的内存了\",{\"1\":{\"253\":1}}],[\"也就是本地方法\",{\"1\":{\"249\":1}}],[\"也就是无论\",{\"1\":{\"92\":1}}],[\"也是访问第三个元素\",{\"1\":{\"434\":1}}],[\"也是用于唤醒\",{\"1\":{\"309\":1}}],[\"也是由缓冲区处理\",{\"1\":{\"298\":1}}],[\"也不会有\",{\"1\":{\"278\":1}}],[\"也叫排他锁\",{\"1\":{\"115\":1}}],[\"也叫共享锁\",{\"1\":{\"115\":1}}],[\"加载bean定义\",{\"1\":{\"460\":1}}],[\"加载\",{\"1\":{\"313\":1}}],[\"加载quartz数据源配置\",{\"1\":{\"76\":1}}],[\"加几个聚合方法\",{\"1\":{\"154\":1}}],[\"加锁\",{\"1\":{\"115\":1}}],[\"快照读\",{\"1\":{\"115\":1}}],[\"快捷键\",{\"1\":{\"60\":1}}],[\"级别下\",{\"1\":{\"115\":1}}],[\"串行读\",{\"1\":{\"115\":1}}],[\"读取\",{\"0\":{\"434\":1}}],[\"读写锁\",{\"0\":{\"237\":1}}],[\"读锁\",{\"1\":{\"115\":1}}],[\"读锁和写锁\",{\"1\":{\"115\":1}}],[\"读已提交\",{\"1\":{\"115\":1}}],[\"读未提交\",{\"1\":{\"115\":1}}],[\"读权限\",{\"1\":{\"60\":1}}],[\"必须传递切片引用类型\",{\"1\":{\"384\":1}}],[\"必须在开始之前\",{\"1\":{\"312\":1}}],[\"必须是在持有锁\",{\"1\":{\"309\":1}}],[\"必须留一个抽象方法出来\",{\"1\":{\"280\":1}}],[\"必须要压到堆栈上\",{\"1\":{\"249\":1}}],[\"必须要有主键\",{\"1\":{\"113\":1}}],[\"必须确定这个服务内包含哪些商务方法\",{\"1\":{\"70\":1}}],[\"树的根结点为1\",{\"1\":{\"287\":1}}],[\"树\",{\"0\":{\"287\":1,\"289\":1},\"1\":{\"113\":1}}],[\"底层原理\",{\"0\":{\"113\":1}}],[\"底层是servlet\",{\"1\":{\"30\":1}}],[\"附加说明\",{\"1\":{\"111\":1}}],[\"扫描的行数\",{\"1\":{\"111\":1}}],[\"效率从高到低\",{\"1\":{\"111\":1}}],[\"决定如何查找对应的记录\",{\"1\":{\"111\":1}}],[\"组合模式\",{\"0\":{\"170\":1},\"1\":{\"217\":1}}],[\"组合索引\",{\"0\":{\"110\":1}}],[\"组件名\",{\"1\":{\"27\":1}}],[\"索引\",{\"0\":{\"108\":1}}],[\"知识查缺补漏\",{\"0\":{\"107\":1,\"119\":1,\"221\":1,\"248\":1,\"454\":1}}],[\"现在大家可以思考一个问题\",{\"1\":{\"419\":1}}],[\"现在请你设计一个java程序\",{\"1\":{\"279\":1}}],[\"现在无论你怎么算\",{\"1\":{\"278\":1}}],[\"现在一个线程要将其修改为20\",{\"1\":{\"225\":1}}],[\"现需将二者结合\",{\"1\":{\"103\":1}}],[\"现代处理器很高级\",{\"1\":{\"230\":1}}],[\"现代\",{\"1\":{\"14\":1}}],[\"库字段长度及是否为空准确但缺少注释\",{\"1\":{\"103\":1}}],[\"库具有完整注释但字段长度及是否为空不确定\",{\"1\":{\"103\":1}}],[\"其它编程语言的数组往往是可变长度的\",{\"1\":{\"397\":1}}],[\"其它用户\",{\"1\":{\"60\":1}}],[\"其从\",{\"1\":{\"333\":1}}],[\"其余各位取反\",{\"1\":{\"278\":1}}],[\"其余各个位取反\",{\"1\":{\"277\":1}}],[\"其实\",{\"1\":{\"455\":1}}],[\"其实答案在开头的代码片段中就给出了\",{\"1\":{\"419\":1}}],[\"其实就等于一个数组\",{\"1\":{\"399\":1}}],[\"其实就是我们方法中的局部变量\",{\"1\":{\"259\":1}}],[\"其实就是存放被引用的次数\",{\"1\":{\"258\":1}}],[\"其实当调用\",{\"1\":{\"384\":1}}],[\"其实我们之前可能就发现了\",{\"1\":{\"309\":1}}],[\"其实死锁的概念在操作系统中也有提及\",{\"1\":{\"308\":1}}],[\"其实之前讲过很多次了\",{\"1\":{\"231\":1}}],[\"其他线程能够立即看得到修改的值\",{\"1\":{\"231\":1}}],[\"其维护工作就可能会越困难\",{\"1\":{\"189\":1}}],[\"其中每一个元素都是一个数组\",{\"1\":{\"399\":1}}],[\"其中linkedlist除了可以直接当做列表使用之外\",{\"1\":{\"293\":1}}],[\"其中一个是接受的参数类型\",{\"1\":{\"281\":1}}],[\"其中只有一个get方法用于获取需要的对象\",{\"1\":{\"281\":1}}],[\"其中方法区和堆是所有线程共享的区域\",{\"1\":{\"253\":1}}],[\"其中\",{\"1\":{\"103\":1,\"348\":1}}],[\"两个数据库\",{\"1\":{\"103\":1}}],[\"监听主进程发来的事件\",{\"1\":{\"474\":1}}],[\"监听渲染程序发来的事件\",{\"1\":{\"472\":1}}],[\"监听支持\",{\"1\":{\"27\":1}}],[\"监控\",{\"0\":{\"324\":1},\"2\":{\"100\":1}}],[\"修改失败\",{\"1\":{\"225\":1}}],[\"修改数据库支持\",{\"0\":{\"135\":1}}],[\"修改\",{\"0\":{\"133\":1},\"1\":{\"133\":1}}],[\"修改默认的json实现为fastjson\",{\"1\":{\"98\":1,\"325\":1}}],[\"修改镜像存储位置\",{\"0\":{\"64\":1}}],[\"针对\",{\"1\":{\"98\":1}}],[\"针对系统维度也提供自适应的保护机制\",{\"1\":{\"29\":1}}],[\"指向\",{\"1\":{\"472\":2}}],[\"指示编译器去忽略注解中声明的警告\",{\"1\":{\"319\":1}}],[\"指的是这样一个数列\",{\"1\":{\"279\":1}}],[\"指当多个线程访问同一个变量时\",{\"1\":{\"231\":1}}],[\"指令重排序\",{\"0\":{\"230\":1}}],[\"指定启动顺序\",{\"1\":{\"328\":1}}],[\"指定网络模式\",{\"1\":{\"328\":1}}],[\"指定\",{\"1\":{\"98\":1}}],[\"指南中文版\",{\"1\":{\"11\":1}}],[\"处理的时候将对象转成\",{\"1\":{\"98\":1}}],[\"添加脚本以及打包相关配置\",{\"1\":{\"476\":1}}],[\"添加相关脚本\",{\"0\":{\"473\":1}}],[\"添加泛型\",{\"1\":{\"148\":1}}],[\"添加\",{\"0\":{\"474\":1},\"1\":{\"98\":1,\"476\":1}}],[\"添加自定义的逻辑\",{\"1\":{\"29\":1}}],[\"协议详解\",{\"1\":{\"94\":1}}],[\"协议规定\",{\"1\":{\"94\":1}}],[\"与结构体紧密关联\",{\"1\":{\"419\":1}}],[\"与其它语言不同\",{\"1\":{\"383\":1}}],[\"与当前结点直接向下相连的结点\",{\"1\":{\"287\":1}}],[\"与mysql\",{\"0\":{\"116\":1}}],[\"与\",{\"1\":{\"94\":1,\"113\":1,\"397\":1}}],[\"与权限拦截器冲突导致的cors跨域设置失效问题\",{\"1\":{\"73\":1}}],[\"状态\",{\"1\":{\"304\":1}}],[\"状态模式\",{\"0\":{\"208\":1}}],[\"状态码\",{\"1\":{\"94\":1}}],[\"状态下的重定向把\",{\"1\":{\"94\":1}}],[\"状态下重定向时不允许把\",{\"1\":{\"94\":1}}],[\"例如常见的\",{\"1\":{\"357\":1}}],[\"例如对象树\",{\"1\":{\"215\":1}}],[\"例如\",{\"1\":{\"94\":1,\"204\":1,\"333\":1,\"348\":1,\"361\":1,\"364\":1,\"365\":1,\"419\":1}}],[\"例如权限校验\",{\"1\":{\"30\":1}}],[\"虽然给定的是fileinputstream\",{\"1\":{\"299\":1}}],[\"虽然给定的是fileoutputstream\",{\"1\":{\"299\":1}}],[\"虽然普通的文件流读取文件数据非常便捷\",{\"1\":{\"298\":1}}],[\"虽然能够很方便地实现跨平台\",{\"1\":{\"249\":1}}],[\"虽然其他线程不能加读锁\",{\"1\":{\"238\":1}}],[\"虽然\",{\"1\":{\"94\":1,\"466\":1}}],[\"虽然提供的是一个有损的服务\",{\"1\":{\"29\":1}}],[\"注入\",{\"1\":{\"460\":1}}],[\"注入的一个好处是\",{\"1\":{\"455\":1}}],[\"注册annotationawareaspectjautoproxycreator到容器中\",{\"1\":{\"456\":1}}],[\"注释和文档\",{\"1\":{\"405\":1}}],[\"注解并没有继承于任何子类\",{\"1\":{\"320\":1}}],[\"注解\",{\"0\":{\"318\":1},\"1\":{\"455\":1}}],[\"注意事项\",{\"0\":{\"407\":1},\"1\":{\"466\":1}}],[\"注意\",{\"1\":{\"296\":1,\"302\":1,\"309\":1}}],[\"注意要填写当前的引用对象\",{\"1\":{\"240\":1}}],[\"注意这里提到的内存模型和我们在jvm中介绍的内存模型不在同一个层次\",{\"1\":{\"228\":1}}],[\"注\",{\"1\":{\"94\":1}}],[\"明确要求客户端应该采用\",{\"1\":{\"94\":1}}],[\"返回字符串的长度\",{\"1\":{\"389\":1}}],[\"返回值和错误处理\",{\"1\":{\"405\":1}}],[\"返回值\",{\"1\":{\"361\":1}}],[\"返回值作为参数执行andthen内的函数式\",{\"1\":{\"281\":1}}],[\"返回数组组件类型\",{\"1\":{\"334\":1}}],[\"返回所属类型\",{\"1\":{\"334\":1}}],[\"返回当前\",{\"1\":{\"334\":1}}],[\"返回确切的泛型参数\",{\"1\":{\"334\":1}}],[\"返回的\",{\"1\":{\"334\":1}}],[\"返回的结果会作为join的结果\",{\"1\":{\"243\":1}}],[\"返回\",{\"1\":{\"98\":1,\"334\":2}}],[\"返回结果不正确\",{\"0\":{\"97\":1}}],[\"返回301永久重定向\",{\"1\":{\"93\":1}}],[\"返回上两级目录\",{\"1\":{\"60\":1}}],[\"返回上一级目录\",{\"1\":{\"60\":1}}],[\"链表\",{\"0\":{\"284\":1}}],[\"链接\",{\"1\":{\"92\":1}}],[\"链路追踪\",{\"0\":{\"33\":1}}],[\"都有其用途\",{\"1\":{\"357\":1}}],[\"都只能获取到当前线程所属的变量\",{\"1\":{\"310\":1}}],[\"都是为了能与\",{\"1\":{\"470\":1}}],[\"都是\",{\"1\":{\"356\":1}}],[\"都是这个结点的祖先结点\",{\"1\":{\"287\":1}}],[\"都是叶子结点\",{\"1\":{\"287\":1}}],[\"都是a的子结点\",{\"1\":{\"287\":1}}],[\"都会创建一个新的核心线程\",{\"1\":{\"242\":1}}],[\"都会被重定向到它们相应的\",{\"1\":{\"92\":1}}],[\"都会被重定向到\",{\"1\":{\"92\":1}}],[\"都不支持autotype\",{\"1\":{\"98\":1,\"325\":1}}],[\"都可以方便地广播一些需要让其他连接在该主题上的实例都知道的消息\",{\"1\":{\"32\":1}}],[\"跳转\",{\"0\":{\"91\":1}}],[\"未创建\",{\"1\":{\"466\":1}}],[\"未使用的\",{\"1\":{\"244\":1}}],[\"未配置导致错误\",{\"1\":{\"87\":1}}],[\"未分类\",{\"0\":{\"20\":1}}],[\"我这里读取的是一个字符串或是一个个字符\",{\"1\":{\"299\":1}}],[\"我这边的解决办法是\",{\"1\":{\"83\":1}}],[\"我是吃完之后的操作\",{\"1\":{\"281\":1}}],[\"我是学生\",{\"1\":{\"281\":1}}],[\"我们之前都是在将我们的增强处理添加到目标对象\",{\"1\":{\"458\":1}}],[\"我们之前在xml中定义的就是切面\",{\"1\":{\"458\":1}}],[\"我们之前在springboot阶段已经讲解过了\",{\"1\":{\"225\":1}}],[\"我们已经多次使用过关联函数\",{\"1\":{\"419\":1}}],[\"我们已经了解了list的使用\",{\"1\":{\"293\":1}}],[\"我们往往通过引用的方式去使用\",{\"1\":{\"399\":1}}],[\"我们这里说的数组是\",{\"1\":{\"397\":1}}],[\"我们来看看他们的作用是什么\",{\"1\":{\"309\":1}}],[\"我们还可以在当前线程的工作不重要时\",{\"1\":{\"306\":1}}],[\"我们还可以使用jni机制来通过java调用c\",{\"1\":{\"249\":1}}],[\"我们称为子结点\",{\"1\":{\"287\":1}}],[\"我们称为结点的度\",{\"1\":{\"287\":1}}],[\"我们一般称位于最上方的结点为树的根结点\",{\"1\":{\"287\":1}}],[\"我们一个一个来看\",{\"1\":{\"281\":1}}],[\"我们也可以使用组合条件判断\",{\"1\":{\"281\":1}}],[\"我们也可以使用andthen方法继续调用\",{\"1\":{\"281\":1}}],[\"我们再来学习这些基本数据类型就会很轻松了\",{\"1\":{\"278\":1}}],[\"我们的jvm执行引擎和本地库接口\",{\"1\":{\"253\":1}}],[\"我们可以发现\",{\"1\":{\"309\":1}}],[\"我们可以使用threadlocal类\",{\"1\":{\"310\":1}}],[\"我们可以使用join\",{\"1\":{\"306\":1}}],[\"我们可以使用compose将指定函数式的结果作为当前函数式的实参\",{\"1\":{\"281\":1}}],[\"我们可以来观察一下它的close方法源码\",{\"1\":{\"298\":1}}],[\"我们可以来编写一个简单的例子\",{\"1\":{\"281\":1}}],[\"我们可以提前将消费之后的操作以同样的方式预定好\",{\"1\":{\"281\":1}}],[\"我们可以看到\",{\"1\":{\"253\":1}}],[\"我们可以干涉线程池中线程的创建过程\",{\"1\":{\"242\":1}}],[\"我们每向线程池提交一个多线程任务时\",{\"1\":{\"242\":1}}],[\"我们会在后面介绍\",{\"1\":{\"228\":1}}],[\"我们先从最原始的重量级锁开始\",{\"1\":{\"224\":1}}],[\"我们仅使用\",{\"1\":{\"157\":1}}],[\"我发布到不同的仓库\",{\"1\":{\"54\":2}}],[\"除了上面外\",{\"1\":{\"83\":1}}],[\"导入\",{\"1\":{\"466\":1}}],[\"导致程序卡住\",{\"1\":{\"308\":1}}],[\"导致数据库连接出错\",{\"0\":{\"129\":1}}],[\"导致\",{\"0\":{\"97\":1},\"1\":{\"98\":1,\"466\":1}}],[\"导致了错误\",{\"1\":{\"83\":1}}],[\"导出wsl子系统镜像\",{\"1\":{\"66\":1}}],[\"一般用于注册bean\",{\"1\":{\"456\":1}}],[\"一些读者读到这里可能就不愿意了\",{\"1\":{\"357\":1}}],[\"一定要执行下面这一句\",{\"1\":{\"325\":1}}],[\"一定程度上解决幻读问题\",{\"1\":{\"115\":1}}],[\"一次性读取同单个读取一样\",{\"1\":{\"296\":1}}],[\"一种是堆栈\",{\"1\":{\"249\":1}}],[\"一个命令行窗口跑\",{\"1\":{\"475\":1}}],[\"一个变量要么有值\",{\"1\":{\"416\":1}}],[\"一个清晰明确的结构体\",{\"1\":{\"391\":1}}],[\"一个值同时只能被一个变量所拥有\",{\"1\":{\"371\":1}}],[\"一个线程修改了这个变量的值\",{\"1\":{\"231\":1}}],[\"一个对象应该只包含单一的职责\",{\"1\":{\"140\":1}}],[\"一段时间后\",{\"1\":{\"201\":1}}],[\"一开始创建连接会实例化connectionholder\",{\"1\":{\"83\":1}}],[\"一致性协议\",{\"1\":{\"27\":1}}],[\"开发环境\",{\"1\":{\"472\":1}}],[\"开始打包\",{\"0\":{\"477\":1}}],[\"开始\",{\"1\":{\"434\":1}}],[\"开始引入\",{\"1\":{\"333\":1}}],[\"开始支持\",{\"1\":{\"319\":2,\"320\":1}}],[\"开始唤醒\",{\"1\":{\"309\":1}}],[\"开始等待\",{\"1\":{\"309\":1}}],[\"开始计算\",{\"1\":{\"243\":1}}],[\"开闭原则\",{\"0\":{\"141\":1},\"1\":{\"149\":1,\"152\":1,\"165\":1,\"168\":1,\"171\":1,\"177\":1,\"191\":1,\"194\":1,\"197\":1,\"200\":1,\"206\":1,\"209\":1,\"212\":1,\"215\":1}}],[\"开启事务导致了这个错误\",{\"1\":{\"83\":1}}],[\"开源生态广泛\",{\"1\":{\"29\":1}}],[\"开源工厂\",{\"1\":{\"19\":1}}],[\"帮助其解决时通过google发现可能是druid出现的错误\",{\"1\":{\"83\":1}}],[\"帮助命令\",{\"1\":{\"60\":1}}],[\"先配置好数据源\",{\"1\":{\"329\":1}}],[\"先完成线程1的内容\",{\"1\":{\"306\":1}}],[\"先进先出\",{\"1\":{\"286\":1}}],[\"先进后出\",{\"1\":{\"285\":1}}],[\"先放到队列\",{\"1\":{\"121\":1}}],[\"先将全部实例注解进去\",{\"1\":{\"79\":1}}],[\"先创建test目录\",{\"1\":{\"60\":1}}],[\"然后通过\",{\"1\":{\"440\":1}}],[\"然后通过阅读源码\",{\"1\":{\"83\":1}}],[\"然后构造并返回该结构体的实例\",{\"1\":{\"419\":1}}],[\"然后进行自定义判断并返回一个boolean结果\",{\"1\":{\"281\":1}}],[\"然后会向外供给一个对象\",{\"1\":{\"281\":1}}],[\"然后把决定回收的那一部分region的存活对象复制到空的region中\",{\"1\":{\"268\":1}}],[\"然后将其整理成集合\",{\"1\":{\"116\":1}}],[\"然后根据如下获取并加以判断\",{\"1\":{\"79\":1}}],[\"然后execute方法里通过thirdbusinessfactory工厂类去获取相应参数获取ithirdbll接口的实例\",{\"1\":{\"79\":1}}],[\"然后服务端从config服务里面拉取配置信息缓存到本地仓库\",{\"1\":{\"31\":1}}],[\"然后服务端会监听到配置发生变化\",{\"1\":{\"31\":1}}],[\"首先扫描bean\",{\"1\":{\"460\":1}}],[\"首先还是最基本的apply方法\",{\"1\":{\"281\":1}}],[\"首先通过\",{\"1\":{\"134\":1}}],[\"首先通过一个主定时任务去触发其它任务的调度处理\",{\"1\":{\"79\":1}}],[\"首先我们需要实现soaphandler接口的类\",{\"1\":{\"70\":1}}],[\"自我感悟\",{\"0\":{\"244\":1}}],[\"自动装配\",{\"1\":{\"455\":1}}],[\"自动转换为记录锁\",{\"1\":{\"115\":1}}],[\"自动转换为间隙锁\",{\"1\":{\"115\":1}}],[\"自动注销实例\",{\"1\":{\"27\":1}}],[\"自定义job\",{\"1\":{\"76\":1}}],[\"延时启动\",{\"1\":{\"76\":1}}],[\"=5\",{\"1\":{\"343\":1,\"351\":1}}],[\"=f\",{\"1\":{\"279\":1}}],[\"=1\",{\"1\":{\"279\":2}}],[\"=0\",{\"1\":{\"279\":1}}],[\"=>\",{\"1\":{\"277\":1,\"278\":1,\"410\":3,\"470\":1,\"472\":6,\"474\":4}}],[\"===\",{\"1\":{\"472\":2}}],[\"==\",{\"1\":{\"83\":2,\"157\":2,\"242\":4,\"244\":2,\"281\":1,\"306\":2,\"325\":2,\"334\":2,\"349\":3,\"472\":1}}],[\"=\",{\"1\":{\"70\":15,\"73\":2,\"76\":2,\"79\":1,\"83\":9,\"98\":4,\"104\":4,\"154\":15,\"157\":2,\"235\":1,\"236\":1,\"240\":3,\"242\":7,\"243\":7,\"244\":4,\"270\":1,\"277\":2,\"278\":2,\"279\":3,\"281\":18,\"298\":6,\"299\":2,\"305\":1,\"306\":8,\"309\":4,\"312\":2,\"325\":5,\"334\":20,\"343\":1,\"344\":3,\"345\":1,\"346\":3,\"349\":2,\"351\":1,\"356\":4,\"360\":3,\"361\":2,\"366\":1,\"375\":2,\"384\":16,\"389\":9,\"399\":8,\"412\":5,\"440\":2,\"456\":2,\"470\":2,\"472\":5,\"474\":4}}],[\"方法使该类的对象能够在以后重新配置或重新注入\",{\"1\":{\"455\":1}}],[\"方法使值达到最小值或最大值\",{\"1\":{\"348\":1}}],[\"方法参数上\",{\"1\":{\"455\":1}}],[\"方法返回一个\",{\"1\":{\"441\":1}}],[\"方法返回该值和一个指示是否存在溢出的布尔值\",{\"1\":{\"348\":1}}],[\"方法创建\",{\"1\":{\"440\":1}}],[\"方法插入键值对\",{\"1\":{\"440\":1}}],[\"方法和关联函数\",{\"1\":{\"405\":1}}],[\"方法的第二个参数是一个引用的类型\",{\"1\":{\"384\":1}}],[\"方法在所有模式下都按照补码循环溢出规则处理\",{\"1\":{\"348\":1}}],[\"方法后\",{\"1\":{\"309\":1}}],[\"方法会暂时使得此线程进入等待状态\",{\"1\":{\"309\":1}}],[\"方法来创建\",{\"1\":{\"440\":1}}],[\"方法来实现线程的加入\",{\"1\":{\"306\":1}}],[\"方法来将当前资源让位给其他同优先级线程\",{\"1\":{\"306\":1}}],[\"方法强行停止\",{\"1\":{\"304\":1}}],[\"方法时发生溢出\",{\"1\":{\"348\":1}}],[\"方法时\",{\"1\":{\"304\":1}}],[\"方法只会有一次调用机会\",{\"1\":{\"260\":1}}],[\"方法区中\",{\"1\":{\"259\":1}}],[\"方法改成\",{\"1\":{\"94\":3}}],[\"方法获取资源\",{\"1\":{\"94\":1}}],[\"方法\",{\"0\":{\"309\":1,\"417\":1},\"1\":{\"70\":1,\"94\":3,\"384\":1,\"434\":1}}],[\"方便用户根据需求给\",{\"1\":{\"29\":1}}],[\"方便自定义接入\",{\"1\":{\"29\":1}}],[\"方便接入\",{\"1\":{\"29\":1}}],[\"<div\",{\"1\":{\"474\":1}}],[\"<button\",{\"1\":{\"474\":1}}],[\"<br\",{\"1\":{\"474\":1}}],[\"<<\",{\"1\":{\"350\":1}}],[\"<v>\",{\"1\":{\"281\":2}}],[\"<=\",{\"1\":{\"242\":1,\"243\":1}}],[\"<p1\",{\"1\":{\"154\":2}}],[\"<p1>\",{\"1\":{\"154\":1}}],[\"<t>\",{\"1\":{\"154\":1,\"281\":2}}],[\"<\",{\"1\":{\"70\":3,\"242\":3,\"279\":1,\"306\":4,\"309\":1,\"312\":1,\"474\":1}}],[\"<wsse\",{\"1\":{\"70\":4}}],[\"<section>\",{\"1\":{\"474\":1}}],[\"<string>process\",{\"1\":{\"472\":1}}],[\"<s\",{\"1\":{\"70\":1}}],[\"默认浮点类型是\",{\"1\":{\"349\":1}}],[\"默认不可变\",{\"1\":{\"343\":1}}],[\"默认\",{\"1\":{\"320\":1}}],[\"默认为10\",{\"1\":{\"225\":1}}],[\"默认情况下soap头是空的\",{\"1\":{\"70\":1}}],[\"默认存储在c盘占空间\",{\"1\":{\"65\":1}}],[\"下的\",{\"1\":{\"471\":1}}],[\"下的命令行工具\",{\"1\":{\"10\":1}}],[\"下载慢\",{\"1\":{\"466\":1}}],[\"下一代一定是子女\",{\"1\":{\"287\":1}}],[\"下面代码会发生错误\",{\"1\":{\"384\":1}}],[\"下面是调用webservice的代码\",{\"1\":{\"70\":1}}],[\"下面的例子演示如何设置给webservice设置授权信息\",{\"1\":{\"70\":1}}],[\"它支持直接向容器中添加bean定义\",{\"1\":{\"456\":1}}],[\"它实现了接口\",{\"1\":{\"456\":1}}],[\"它返回了\",{\"1\":{\"434\":1}}],[\"它又在\",{\"1\":{\"419\":1}}],[\"它的长度无法在编译期得知\",{\"1\":{\"399\":1}}],[\"它就是表达式\",{\"1\":{\"361\":1}}],[\"它可以存放从\",{\"1\":{\"348\":1}}],[\"它可以支持不同的底层接口\",{\"1\":{\"70\":1}}],[\"它将我们的变量值存储在内部\",{\"1\":{\"310\":1}}],[\"它是指两个线程相互持有对方需要的锁\",{\"1\":{\"308\":1}}],[\"它不是继承自filterinputstream的\",{\"1\":{\"302\":1}}],[\"它能够提供一个缓冲\",{\"1\":{\"298\":1}}],[\"它只会机械地比较当前值是不是预期值\",{\"1\":{\"240\":1}}],[\"它并不会为对象加锁\",{\"1\":{\"225\":1}}],[\"它们完成了一个具体的操作\",{\"1\":{\"360\":1}}],[\"它们可能没有访问元素私有成员变量和方法的必要权限\",{\"1\":{\"216\":1}}],[\"它们都应该依赖抽象\",{\"1\":{\"143\":1}}],[\"它需要选择合适的策略\",{\"1\":{\"213\":1}}],[\"它采用xml格式来封装各种不同类型的数据\",{\"1\":{\"70\":1}}],[\"浏览以及查找注册信息\",{\"1\":{\"70\":1}}],[\"像http\",{\"1\":{\"70\":1}}],[\"当查询不到时\",{\"1\":{\"441\":1}}],[\"当你只要匹配一个条件\",{\"1\":{\"411\":1}}],[\"当你想要遍历一些复杂的对象结构\",{\"1\":{\"215\":1}}],[\"当\",{\"1\":{\"381\":1}}],[\"当所有者\",{\"1\":{\"371\":1}}],[\"当用\",{\"1\":{\"367\":1}}],[\"当用户通过uddi找到你的wsdl描述文档后\",{\"1\":{\"70\":1}}],[\"当前类型为\",{\"1\":{\"334\":1}}],[\"当前读\",{\"1\":{\"115\":1}}],[\"当其他所有的非守护线程结束之后\",{\"1\":{\"312\":1}}],[\"当其他线程调用对象的notify\",{\"1\":{\"309\":1}}],[\"当我们希望一个线程等待另一个线程执行完成后再继续进行\",{\"1\":{\"306\":1}}],[\"当等待状态结束后会回到就绪状态\",{\"1\":{\"304\":1}}],[\"当等待队列和线程池都没有空间了\",{\"1\":{\"242\":1}}],[\"当线程出现异常或错误\",{\"1\":{\"304\":1}}],[\"当线程进入休眠\",{\"1\":{\"304\":1}}],[\"当线程池中核心线程数已满时\",{\"1\":{\"242\":1}}],[\"当cpu给予的运行时间结束时\",{\"1\":{\"304\":1}}],[\"当向外部设备写入数据时\",{\"1\":{\"298\":1}}],[\"当没有任何数据可读时\",{\"1\":{\"296\":1}}],[\"当链表长度到达一定限制时\",{\"1\":{\"295\":1}}],[\"当然\",{\"1\":{\"281\":1,\"309\":1,\"455\":1}}],[\"当然也可以在一开始就全部初始化好\",{\"1\":{\"242\":1}}],[\"当引用计数为0时\",{\"1\":{\"258\":1}}],[\"当引用失效\",{\"1\":{\"258\":1}}],[\"当目前线程池中所有的线程都处于运行状态\",{\"1\":{\"242\":1}}],[\"当一个非核心线程空闲超过一定时间\",{\"1\":{\"242\":1}}],[\"当一个线程持有写锁的情况下\",{\"1\":{\"238\":1}}],[\"当一条\",{\"1\":{\"115\":1}}],[\"当请求到达\",{\"1\":{\"92\":1}}],[\"当某服务出现不可用或响应超时的情况时\",{\"1\":{\"29\":1}}],[\"的开发环境地址\",{\"1\":{\"472\":1}}],[\"的环境才能运行\",{\"1\":{\"470\":1}}],[\"的\",{\"1\":{\"466\":1}}],[\"的区别\",{\"1\":{\"456\":1}}],[\"的名称\",{\"1\":{\"456\":1}}],[\"的生命周期被赋给所有的输出生命周期\",{\"1\":{\"445\":1}}],[\"的方法类似\",{\"1\":{\"440\":1}}],[\"的形式调用\",{\"1\":{\"419\":1}}],[\"的形式去描述\",{\"1\":{\"399\":1}}],[\"的函数被称之为关联函数\",{\"1\":{\"419\":1}}],[\"的匹配必须穷尽所有情况\",{\"1\":{\"410\":1}}],[\"的语法糖\",{\"1\":{\"399\":1}}],[\"的基本类型\",{\"1\":{\"397\":1}}],[\"的操作符时\",{\"1\":{\"384\":1}}],[\"的关系\",{\"0\":{\"370\":1}}],[\"的返回值也是单元类型\",{\"1\":{\"357\":1}}],[\"的赋值语句还不支持解构式赋值\",{\"1\":{\"344\":1}}],[\"的子接口\",{\"1\":{\"333\":1}}],[\"的双亲委派机制在保护\",{\"1\":{\"317\":1}}],[\"的情况下使用\",{\"1\":{\"309\":1}}],[\"的值\",{\"1\":{\"243\":1,\"348\":1,\"357\":1}}],[\"的支持\",{\"1\":{\"130\":1}}],[\"的协议\",{\"1\":{\"130\":1}}],[\"的速度更快\",{\"1\":{\"116\":1}}],[\"的接口也会封装多一层成对象\",{\"1\":{\"98\":1}}],[\"的含义类似\",{\"1\":{\"94\":1}}],[\"的项目时\",{\"1\":{\"83\":1}}],[\"的通信协议\",{\"1\":{\"70\":1}}],[\"的服务器性能\",{\"1\":{\"29\":1}}],[\"简单对象存取协议\",{\"1\":{\"70\":1}}],[\"简单的监控查看\",{\"1\":{\"29\":1}}],[\"简单的\",{\"1\":{\"29\":1}}],[\"通知描述了切面何时执行以及如何执行增强处理\",{\"1\":{\"458\":1}}],[\"通知\",{\"1\":{\"458\":1}}],[\"通用形式\",{\"0\":{\"410\":1}}],[\"通用的\",{\"1\":{\"154\":1}}],[\"通配符类型\",{\"1\":{\"334\":1}}],[\"通过构造方法完成注入\",{\"1\":{\"455\":1}}],[\"通过成员属性对应的set方法完成注入\",{\"1\":{\"455\":1}}],[\"通过下标索引访问\",{\"1\":{\"434\":1}}],[\"通过关键字\",{\"1\":{\"391\":1}}],[\"通过反射将对应限制值设置为\",{\"1\":{\"334\":1}}],[\"通过使用yield\",{\"1\":{\"306\":1}}],[\"通过使用setpriority方法来设定优先级\",{\"1\":{\"305\":1}}],[\"通过对对象的序列化操作\",{\"1\":{\"302\":1}}],[\"通过前面的学习\",{\"1\":{\"293\":1}}],[\"通过消除臃肿的状态机条件语句简化上下文代码\",{\"1\":{\"209\":1}}],[\"通过将体积庞大的遍历算法代码抽取为独立的类\",{\"1\":{\"197\":1}}],[\"通过子类抑制默认步骤实现可能会导致违反里氏替换原则\",{\"1\":{\"189\":1}}],[\"通过\",{\"1\":{\"134\":2,\"366\":1}}],[\"通过soap在web上提供的软件服务\",{\"1\":{\"70\":1}}],[\"通常是启动类或配置类\",{\"1\":{\"456\":1}}],[\"通常选择需要测试的盘的data目录\",{\"1\":{\"51\":1}}],[\"通常会使用轻量级的消息代理来构建一个共用的消息主题\",{\"1\":{\"32\":1}}],[\"重量级锁\",{\"0\":{\"224\":1}}],[\"重定向\",{\"0\":{\"94\":1}}],[\"重新创建\",{\"1\":{\"66\":1}}],[\"重启\",{\"1\":{\"60\":2}}],[\"取消屏幕锁定\",{\"1\":{\"60\":1}}],[\"所有位向右移动指定位数\",{\"1\":{\"350\":1}}],[\"所有位向左移动指定位数\",{\"1\":{\"350\":1}}],[\"所有权原则\",{\"0\":{\"371\":1}}],[\"所有权\",{\"0\":{\"369\":1},\"1\":{\"342\":1}}],[\"所有权和借用\",{\"1\":{\"339\":1}}],[\"所有代码执行结束时\",{\"1\":{\"304\":1}}],[\"所有的原始类型都通过字节码类\",{\"1\":{\"333\":1}}],[\"所有的空结点都是黑色\",{\"1\":{\"289\":1}}],[\"所有的操作基本都是围绕两种数据结构\",{\"1\":{\"249\":1}}],[\"所有路径以及补全命令\",{\"1\":{\"60\":1}}],[\"所用引用基类的地方必须能透明地使用其子类的对象\",{\"1\":{\"142\":1}}],[\"所用到类型支持\",{\"1\":{\"98\":1,\"325\":1}}],[\"所用限制处理\",{\"1\":{\"98\":1}}],[\"所以变量声明可以不需要\",{\"1\":{\"384\":1}}],[\"所以\",{\"1\":{\"348\":1}}],[\"所以绑定含义更准确\",{\"1\":{\"342\":1}}],[\"所以说就这样设计了\",{\"1\":{\"309\":1}}],[\"所以说我们需要先规定一下结点之间的称呼\",{\"1\":{\"287\":1}}],[\"所以现在\",{\"1\":{\"278\":1}}],[\"所以在补码下\",{\"1\":{\"278\":1}}],[\"所以在性能要求比较苛刻的android上\",{\"1\":{\"249\":1}}],[\"所以g1收集器在这个阶段实际并没有额外的停顿\",{\"1\":{\"268\":1}}],[\"所以java的执行效率实际上是不如c\",{\"1\":{\"249\":1}}],[\"所以cas操作成功\",{\"1\":{\"240\":1}}],[\"所以虚拟机一旦检测到这种操作\",{\"1\":{\"227\":1}}],[\"所以锁会被消除\",{\"1\":{\"227\":1}}],[\"所以你需要想出仔细考虑模拟单例的方法\",{\"1\":{\"159\":1}}],[\"所以默认停用\",{\"1\":{\"130\":1}}],[\"所以这里建议使用自增\",{\"1\":{\"113\":1}}],[\"所以也没指定那个事务管理器\",{\"1\":{\"83\":1}}],[\"所以称它为消息总线\",{\"1\":{\"32\":1}}],[\"所以不存节点信息不一致的情况\",{\"1\":{\"31\":1}}],[\"查询到时返回\",{\"1\":{\"441\":1}}],[\"查询\",{\"0\":{\"441\":1}}],[\"查询语言\",{\"1\":{\"116\":2}}],[\"查询的表\",{\"1\":{\"111\":1}}],[\"查询类型\",{\"1\":{\"111\":1}}],[\"查找\",{\"1\":{\"60\":1}}],[\"查看ls命令的帮助文档\",{\"1\":{\"60\":1}}],[\"查看磁盘空间使用情况\",{\"1\":{\"60\":2}}],[\"查看磁盘储存状况\",{\"1\":{\"60\":1}}],[\"查看\",{\"1\":{\"60\":1}}],[\"查看目录使用情况\",{\"1\":{\"60\":1}}],[\"查看目录与文件\",{\"1\":{\"60\":1}}],[\"查看文件尾内容\",{\"1\":{\"60\":1}}],[\"查看文件内容\",{\"1\":{\"60\":1}}],[\"查看desc\",{\"1\":{\"60\":2}}],[\"查看进程端口号\",{\"1\":{\"60\":1}}],[\"查看进程\",{\"1\":{\"60\":1}}],[\"查看报告系统运行时长及平均负载\",{\"1\":{\"60\":1}}],[\"查看端口号占用情况\",{\"1\":{\"60\":2}}],[\"查看io读写\",{\"1\":{\"60\":1}}],[\"查看内存快照\",{\"1\":{\"254\":1}}],[\"查看内存\",{\"1\":{\"60\":1}}],[\"查看秒级监控\",{\"1\":{\"29\":1}}],[\"光标以后的\",{\"1\":{\"60\":1}}],[\"光标以前的\",{\"1\":{\"60\":1}}],[\"光标到结尾\",{\"1\":{\"60\":1}}],[\"光标到开头\",{\"1\":{\"60\":1}}],[\"退出当前窗口或当前用户\",{\"1\":{\"60\":1}}],[\"退路\",{\"1\":{\"29\":1}}],[\"中已明确说明\",{\"1\":{\"456\":1}}],[\"中值的借用\",{\"1\":{\"441\":1}}],[\"中国队\",{\"1\":{\"440\":1}}],[\"中国人\",{\"1\":{\"386\":2}}],[\"中且没有\",{\"1\":{\"419\":1}}],[\"中文\",{\"1\":{\"384\":1}}],[\"中文文档\",{\"1\":{\"11\":1}}],[\"中的第三个元素\",{\"1\":{\"434\":1}}],[\"中的动态数组\",{\"1\":{\"397\":1}}],[\"中的\",{\"1\":{\"384\":1}}],[\"中的字符是\",{\"1\":{\"381\":1}}],[\"中的所有类型\",{\"1\":{\"334\":1}}],[\"中每一个值都被一个变量所拥有\",{\"1\":{\"371\":1}}],[\"中是有单独的定义的\",{\"1\":{\"357\":1}}],[\"中它的速度与\",{\"1\":{\"349\":1}}],[\"中所有类型的公共高级接口\",{\"1\":{\"334\":1}}],[\"中途是不允许转换的\",{\"1\":{\"312\":1}}],[\"中介者可能会演化成为上帝对象\",{\"1\":{\"201\":1}}],[\"中介者模式\",{\"0\":{\"199\":1}}],[\"中\",{\"1\":{\"173\":1,\"419\":1}}],[\"中包含什么域名\",{\"1\":{\"92\":1}}],[\"中断当前程序\",{\"1\":{\"60\":1}}],[\"立刻关机\",{\"1\":{\"60\":1}}],[\"关键字修饰\",{\"1\":{\"384\":1}}],[\"关键字来声明\",{\"1\":{\"345\":1}}],[\"关键字而不是\",{\"1\":{\"345\":1}}],[\"关键字让变量变为可变\",{\"1\":{\"343\":1}}],[\"关键字\",{\"0\":{\"231\":1}}],[\"关闭长时间不使用的连接\",{\"1\":{\"83\":1}}],[\"关闭长时间不使用的连接超时时间\",{\"1\":{\"83\":1}}],[\"关机或重启\",{\"1\":{\"60\":1}}],[\"关于显示结果的\",{\"1\":{\"51\":1}}],[\"来匹配解构出具体的值\",{\"1\":{\"434\":1}}],[\"来进行循环\",{\"1\":{\"399\":1}}],[\"来创建工作内存中的变量\",{\"1\":{\"310\":1}}],[\"来支持对象类型的io\",{\"1\":{\"302\":1}}],[\"来了个新的多线程任务\",{\"1\":{\"242\":1}}],[\"来发布\",{\"1\":{\"70\":1}}],[\"来切换模式\",{\"1\":{\"60\":1}}],[\"来管理\",{\"1\":{\"54\":2}}],[\"编译器自动推导出one的类型\",{\"1\":{\"399\":1}}],[\"编译器重排序\",{\"1\":{\"230\":1}}],[\"编码\",{\"1\":{\"381\":2,\"383\":1}}],[\"编辑\",{\"1\":{\"70\":1}}],[\"编辑desc\",{\"1\":{\"60\":1}}],[\"编辑模式\",{\"1\":{\"60\":1}}],[\"编程\",{\"0\":{\"8\":1},\"2\":{\"55\":1,\"71\":1,\"74\":1,\"77\":1,\"80\":1,\"84\":1,\"117\":1,\"127\":1,\"136\":1,\"219\":1,\"246\":1,\"273\":1,\"322\":1,\"330\":1,\"336\":1,\"402\":1,\"452\":1,\"463\":1,\"480\":1,\"485\":1}}],[\"插入字符串\",{\"1\":{\"384\":1}}],[\"插入字符\",{\"1\":{\"384\":1}}],[\"插入元素默认是插入到尾部\",{\"1\":{\"292\":1}}],[\"插入模式\",{\"1\":{\"60\":1}}],[\"插件的形式\",{\"1\":{\"29\":1}}],[\"插件且美观\",{\"1\":{\"21\":1}}],[\"给文件拥有者增加test目录及其下所有文件的执行权限\",{\"1\":{\"60\":1}}],[\"给文件拥有者增加test\",{\"1\":{\"60\":1}}],[\"执行javamain方法\",{\"1\":{\"250\":1}}],[\"执行起来会更加复杂\",{\"1\":{\"249\":1}}],[\"执行查询时可能会用到的索引\",{\"1\":{\"111\":1}}],[\"执行屏幕锁定\",{\"1\":{\"60\":1}}],[\"执行权限\",{\"1\":{\"60\":1}}],[\"执行解压操作仅会对不存在的进行补充\",{\"1\":{\"43\":1}}],[\"写锁\",{\"1\":{\"115\":1}}],[\"写权限\",{\"1\":{\"60\":1}}],[\"写占30\",{\"1\":{\"51\":1}}],[\"郡组\",{\"1\":{\"60\":1}}],[\"拥有者\",{\"1\":{\"60\":1}}],[\"权限代号\",{\"1\":{\"60\":1}}],[\"权限范围\",{\"1\":{\"60\":1}}],[\"权重\",{\"1\":{\"27\":1}}],[\"改变文件或目录的访问权限\",{\"1\":{\"60\":1}}],[\"改变文件或目录的拥有者和组\",{\"1\":{\"60\":1}}],[\"解构\",{\"0\":{\"415\":1}}],[\"解析虚拟机参数\",{\"1\":{\"250\":1}}],[\"解释器模式\",{\"0\":{\"186\":1}}],[\"解压test\",{\"1\":{\"60\":1}}],[\"解决方法\",{\"0\":{\"104\":1}}],[\"解决办法\",{\"0\":{\"98\":1}}],[\"解决由于因\",{\"1\":{\"87\":1}}],[\"解决spring\",{\"0\":{\"76\":1,\"79\":1}}],[\"解决的办法\",{\"1\":{\"70\":1}}],[\"解决\",{\"0\":{\"66\":1,\"131\":1},\"1\":{\"43\":1,\"79\":1}}],[\"压缩和解压\",{\"1\":{\"60\":1}}],[\"系统资源无法回收\",{\"1\":{\"60\":1}}],[\"系统自适应保护\",{\"1\":{\"29\":1}}],[\"强度比软引用弱\",{\"1\":{\"270\":1}}],[\"强引用\",{\"1\":{\"270\":1}}],[\"强制\",{\"0\":{\"91\":1}}],[\"强制退出\",{\"1\":{\"60\":1}}],[\"强制终止\",{\"1\":{\"60\":1}}],[\"强一致性\",{\"1\":{\"27\":1}}],[\"杀死进程号为27810的进程\",{\"1\":{\"60\":1}}],[\"杀死进程\",{\"1\":{\"60\":1}}],[\"搜索文件\",{\"1\":{\"60\":1}}],[\"切面是通知和切点的结合\",{\"1\":{\"458\":1}}],[\"切面\",{\"1\":{\"458\":1}}],[\"切点\",{\"1\":{\"458\":1}}],[\"切片\",{\"1\":{\"387\":1}}],[\"切片通过反射方式屏蔽限制值\",{\"1\":{\"334\":1}}],[\"切入点\",{\"1\":{\"334\":1}}],[\"切换不同的镜像源仍然较慢\",{\"1\":{\"466\":1}}],[\"切换成本较高\",{\"1\":{\"224\":1}}],[\"切换目录\",{\"1\":{\"60\":1}}],[\"切记\",{\"1\":{\"60\":1}}],[\"务必小心\",{\"1\":{\"60\":1}}],[\"危险操作\",{\"1\":{\"60\":1}}],[\"删除字符串中从指定位置开始到结尾的全部字符\",{\"1\":{\"384\":1}}],[\"删除第一个汉字\",{\"1\":{\"384\":1}}],[\"删除并返回字符串中指定位置的字符\",{\"1\":{\"384\":1}}],[\"删除并返回字符串的最后一个字符\",{\"1\":{\"384\":1}}],[\"删除现有的\",{\"1\":{\"66\":1}}],[\"删除test目录\",{\"1\":{\"60\":1}}],[\"删除\",{\"1\":{\"60\":3}}],[\"删除过多层文件夹\",{\"0\":{\"7\":1}}],[\"原生浏览器的环境将无法运行此\",{\"1\":{\"470\":1}}],[\"原始类型\",{\"1\":{\"334\":1}}],[\"原样返回\",{\"1\":{\"281\":1}}],[\"原本的1000就作为新增的最小值\",{\"1\":{\"278\":1}}],[\"原子更新boolean\",{\"1\":{\"239\":1}}],[\"原子更新long\",{\"1\":{\"239\":1}}],[\"原子更新int\",{\"1\":{\"239\":1}}],[\"原子类\",{\"0\":{\"239\":1}}],[\"原子性\",{\"1\":{\"231\":1}}],[\"原则\",{\"0\":{\"232\":1}}],[\"原型模式\",{\"0\":{\"160\":1}}],[\"原因\",{\"0\":{\"103\":1,\"130\":1}}],[\"原名\",{\"1\":{\"60\":1}}],[\"原理是将部署服务的机器地址记录到注册中心\",{\"1\":{\"27\":1}}],[\"剪切\",{\"1\":{\"60\":2}}],[\"剪切文件desc\",{\"1\":{\"60\":1}}],[\"剪切或改名\",{\"1\":{\"60\":1}}],[\"拷贝test目录到\",{\"1\":{\"60\":1}}],[\"拷贝desc\",{\"1\":{\"60\":1}}],[\"拷贝\",{\"1\":{\"60\":1}}],[\"9090\",{\"1\":{\"327\":1,\"328\":2}}],[\"90\",{\"1\":{\"281\":1}}],[\"9\",{\"1\":{\"60\":2,\"328\":1}}],[\"9️⃣\",{\"1\":{\"25\":1}}],[\"创建\",{\"0\":{\"432\":1,\"440\":1,\"468\":1,\"470\":1,\"472\":1}}],[\"创建锁时为了避免多个线程获取到锁还使用\",{\"1\":{\"244\":1}}],[\"创建型\",{\"0\":{\"147\":1},\"1\":{\"217\":1}}],[\"创建目录\",{\"1\":{\"60\":1}}],[\"创建空文件\",{\"1\":{\"60\":1}}],[\"基本环境搭建\",{\"0\":{\"467\":1}}],[\"基本类型\",{\"1\":{\"334\":1}}],[\"基础知识梳理\",{\"0\":{\"482\":1}}],[\"基础知识查缺补漏\",{\"0\":{\"275\":1}}],[\"基础信息\",{\"1\":{\"348\":1}}],[\"基础类型\",{\"1\":{\"339\":1}}],[\"基础入门\",{\"0\":{\"339\":1,\"405\":1}}],[\"基础\",{\"1\":{\"60\":1,\"335\":1}}],[\"基于内存\",{\"1\":{\"483\":1}}],[\"基于栈的指令集架构\",{\"1\":{\"249\":1}}],[\"基于注解的支持\",{\"1\":{\"29\":1}}],[\"基于\",{\"1\":{\"29\":2}}],[\"基于异常比率\",{\"1\":{\"29\":2}}],[\"基于响应时间\",{\"1\":{\"29\":1}}],[\"基于名称快速定位文件和文件夹\",{\"1\":{\"21\":1}}],[\"7原码为1111\",{\"1\":{\"278\":1}}],[\"703s\",{\"1\":{\"134\":1}}],[\"7\",{\"1\":{\"60\":2,\"99\":1,\"279\":1,\"319\":1,\"384\":1}}],[\"7️⃣\",{\"1\":{\"25\":1}}],[\"6549233\",{\"1\":{\"484\":1}}],[\"61dafb\",{\"1\":{\"474\":1}}],[\"64\",{\"1\":{\"349\":1}}],[\"6原码为1110\",{\"1\":{\"278\":1}}],[\"600\",{\"1\":{\"472\":1}}],[\"60秒后重启\",{\"1\":{\"60\":1}}],[\"60\",{\"1\":{\"60\":1,\"281\":1}}],[\"6\",{\"1\":{\"60\":2,\"361\":1,\"365\":1,\"384\":1,\"389\":2}}],[\"6️⃣\",{\"1\":{\"25\":1}}],[\"500\",{\"1\":{\"389\":2}}],[\"50\",{\"1\":{\"306\":4,\"309\":1,\"440\":1}}],[\"509\",{\"1\":{\"116\":1}}],[\"55\",{\"1\":{\"279\":1}}],[\"5\",{\"1\":{\"60\":2,\"279\":2,\"306\":1,\"312\":1,\"343\":1,\"344\":3,\"346\":1,\"349\":1,\"361\":1,\"365\":1,\"366\":4,\"375\":3,\"384\":1}}],[\"5️⃣\",{\"1\":{\"25\":1}}],[\"404\",{\"1\":{\"487\":1}}],[\"40dbc78711c8\",{\"1\":{\"484\":1}}],[\"40vmin\",{\"1\":{\"474\":1}}],[\"4k蓝光画质+杜比音效设计模式\",{\"1\":{\"218\":1}}],[\"4\",{\"1\":{\"60\":3,\"344\":2,\"356\":2,\"381\":2,\"389\":2,\"399\":2,\"412\":1}}],[\"4️⃣\",{\"1\":{\"25\":1}}],[\"|x|\",{\"1\":{\"412\":1}}],[\"||\",{\"1\":{\"83\":2,\"242\":5,\"281\":1}}],[\"|\",{\"1\":{\"59\":1,\"60\":3,\"350\":1,\"412\":1}}],[\"确保这是你正在使用的分支名称\",{\"1\":{\"54\":1}}],[\"配置不对会导致编译时提示\",{\"1\":{\"466\":1}}],[\"配置文件\",{\"0\":{\"327\":1,\"328\":1,\"470\":1}}],[\"配置jvm装载环境\",{\"1\":{\"250\":1}}],[\"配置重定向\",{\"1\":{\"92\":1}}],[\"配置一个连接在池中最小生存的时间\",{\"1\":{\"83\":1}}],[\"配置间隔多久才进行一次检测\",{\"1\":{\"83\":1}}],[\"配置\",{\"0\":{\"86\":1,\"133\":1,\"325\":1,\"329\":1,\"470\":1},\"1\":{\"54\":1}}],[\"配置中心发生配置变化\",{\"1\":{\"31\":1}}],[\"配置中心的配置变更是服务端有监听器\",{\"1\":{\"31\":1}}],[\"私钥用\",{\"1\":{\"54\":2}}],[\"调整\",{\"1\":{\"54\":1}}],[\"调用宏也是表达式\",{\"1\":{\"361\":1}}],[\"调用一个函数是表达式\",{\"1\":{\"361\":1}}],[\"调用prestartallcorethreads\",{\"1\":{\"242\":1}}],[\"调用该方法关闭该数据源的连接\",{\"1\":{\"83\":1}}],[\"调用父类的方法\",{\"1\":{\"76\":1}}],[\"调用web\",{\"1\":{\"70\":1}}],[\"调用次数等\",{\"1\":{\"29\":1}}],[\"调用关系\",{\"1\":{\"29\":1}}],[\"汇总每个进程的信息\",{\"1\":{\"51\":1}}],[\"如何为一个结构体定义一个构造器方法\",{\"1\":{\"419\":1}}],[\"如何获取泛型的参数类型\",{\"0\":{\"334\":1}}],[\"如等待io请求\",{\"1\":{\"304\":1}}],[\"如\",{\"1\":{\"270\":1,\"334\":4,\"483\":1}}],[\"如果\",{\"1\":{\"471\":1}}],[\"如果括号中的类是importbeandefinitionregistrar的实现类\",{\"1\":{\"456\":1}}],[\"如果bean不是单例模式\",{\"1\":{\"455\":1}}],[\"如果你想要为类型a实现特征t\",{\"1\":{\"426\":1}}],[\"如果你的算法极少发生改变\",{\"1\":{\"213\":1}}],[\"如果你的程序只与简单的集合进行交互\",{\"1\":{\"198\":1}}],[\"如果使用\",{\"1\":{\"348\":1}}],[\"如果使用该方法\",{\"1\":{\"319\":1}}],[\"如果发现其父类\",{\"1\":{\"319\":1}}],[\"如果要往里面写入内容\",{\"1\":{\"299\":1}}],[\"如果缓冲区中存在此数据\",{\"1\":{\"298\":1}}],[\"如果两个结点的父结点是同一个\",{\"1\":{\"287\":1}}],[\"如果某个节点没有任何的子结点\",{\"1\":{\"287\":1}}],[\"如果一个接口中有且只有一个待实现的抽象方法\",{\"1\":{\"280\":1}}],[\"如果这次回收后还没有足够的内存\",{\"1\":{\"270\":1}}],[\"如果我们连续两次这样操作\",{\"1\":{\"260\":1}}],[\"如果堆栈上的数据需要暂时保存起来时\",{\"1\":{\"249\":1}}],[\"如果jvm执行某条指令时\",{\"1\":{\"249\":1}}],[\"如果大于继续拆分\",{\"1\":{\"243\":1}}],[\"如果能获取到\",{\"1\":{\"236\":1}}],[\"如果他们都使用cas算法\",{\"1\":{\"225\":1}}],[\"如果是其他类型的文件不适用\",{\"1\":{\"297\":1}}],[\"如果是\",{\"1\":{\"225\":2}}],[\"如果是发布者接口则可轻松引入发布者类\",{\"1\":{\"206\":1}}],[\"如果状态机只有很少的几个状态\",{\"1\":{\"210\":1}}],[\"如果客户端过于频繁地创建备忘录\",{\"1\":{\"204\":1}}],[\"如果客户端对服务对象的生命周期没有特殊要求\",{\"1\":{\"177\":1}}],[\"如果程序中有很多相似对象\",{\"1\":{\"183\":1}}],[\"如果表上没有任何索引\",{\"1\":{\"115\":1}}],[\"如果不使用借用\",{\"1\":{\"441\":1}}],[\"如果不是\",{\"1\":{\"225\":2}}],[\"如果不满足条件\",{\"1\":{\"94\":1}}],[\"如果不写则一直将5g文件分4k每次写完为止\",{\"1\":{\"51\":1}}],[\"如果请求报文首部包含一些条件\",{\"1\":{\"94\":1}}],[\"如果直接通过new实例化则里面再通过\",{\"1\":{\"79\":1}}],[\"如下是handlerresolver的实现类定义\",{\"1\":{\"70\":1}}],[\"如下是soaphandler<soapmessagecontext>的实现\",{\"1\":{\"70\":1}}],[\"如提供规则管理和实时监控能力的控制台\",{\"1\":{\"29\":1}}],[\"以上都是语句\",{\"1\":{\"360\":1}}],[\"以上这些类型都实现\",{\"1\":{\"334\":1}}],[\"以某种格式保存对象\",{\"1\":{\"302\":1}}],[\"以操作writer的样子写入outputstream\",{\"1\":{\"299\":1}}],[\"以兔子繁殖为例子而引入\",{\"1\":{\"279\":1}}],[\"以线程共享的形式使用\",{\"1\":{\"244\":1}}],[\"以什么顺序调用\",{\"1\":{\"70\":1}}],[\"以每次4k的io进行测试\",{\"1\":{\"51\":1}}],[\"以及notifyall\",{\"1\":{\"309\":1}}],[\"以及\",{\"0\":{\"469\":1},\"1\":{\"43\":1,\"470\":1}}],[\"提前将部分内容存入内存\",{\"1\":{\"298\":1}}],[\"提定数据块的大小范围\",{\"1\":{\"51\":1}}],[\"提供字符串\",{\"1\":{\"483\":1}}],[\"提供公共接口或许会有困难\",{\"1\":{\"172\":1}}],[\"提供只针对\",{\"1\":{\"98\":1,\"325\":1}}],[\"提供多样化的\",{\"1\":{\"29\":1}}],[\"提供实时监控\",{\"1\":{\"29\":1}}],[\"提供开箱即用的控制台\",{\"1\":{\"29\":1}}],[\"同一时刻\",{\"1\":{\"378\":1}}],[\"同一作用域\",{\"1\":{\"377\":1}}],[\"同一个对象的\",{\"1\":{\"260\":1}}],[\"同步代码块内部\",{\"1\":{\"309\":1}}],[\"同理\",{\"1\":{\"298\":1}}],[\"同样采用装饰者模式\",{\"1\":{\"301\":1}}],[\"同样的\",{\"1\":{\"281\":1}}],[\"同样也包括本地方法栈中jni引用的对象\",{\"1\":{\"259\":1}}],[\"同样支持上诉单列索引类型\",{\"1\":{\"110\":1}}],[\"同事再开发的时候碰到了\",{\"1\":{\"83\":1}}],[\"同上\",{\"1\":{\"51\":1,\"456\":1}}],[\"同时类名也保持一致\",{\"1\":{\"317\":1}}],[\"同时会释放当前代码块持有的锁\",{\"1\":{\"309\":1}}],[\"同时存在\",{\"1\":{\"103\":1}}],[\"同时需要注意的一点\",{\"1\":{\"98\":1}}],[\"同时约束了只能用rabbitmq和kafka来进行通知服务端进行配置变更\",{\"1\":{\"31\":1}}],[\"同时支持服务端同时注册多个注册中心节点\",{\"1\":{\"31\":1}}],[\"同时\",{\"1\":{\"29\":1}}],[\"同时针对自定义的场景\",{\"1\":{\"29\":1}}],[\"单元类型就是\",{\"1\":{\"357\":1}}],[\"单元类型\",{\"0\":{\"355\":1,\"357\":1}}],[\"单据保存箱明细信息加锁\",{\"1\":{\"244\":1}}],[\"单例的客户端代码单元测试可能会比较困难\",{\"1\":{\"159\":1}}],[\"单例模式可能掩盖不良设计\",{\"1\":{\"159\":1}}],[\"单例模式\",{\"0\":{\"157\":1},\"1\":{\"217\":1}}],[\"单一职责原则你可以将接口或数据转换代码从程序主要业务逻辑中分离\",{\"1\":{\"165\":1}}],[\"单一职责原则\",{\"0\":{\"140\":1},\"1\":{\"149\":1,\"152\":1,\"155\":1,\"168\":1,\"174\":1,\"191\":1,\"194\":1,\"197\":1,\"200\":1,\"209\":1,\"215\":1}}],[\"单列索引\",{\"0\":{\"109\":1}}],[\"单独处理返回字符串类型\",{\"1\":{\"98\":1}}],[\"单独服务\",{\"1\":{\"31\":1}}],[\"单位秒\",{\"1\":{\"83\":1}}],[\"单位是毫秒\",{\"1\":{\"83\":2}}],[\"单次io的块文件大小为16k\",{\"1\":{\"51\":1}}],[\"使得算法其他部分修改对其所造成的影响减小\",{\"1\":{\"188\":1}}],[\"使得代码易于维护\",{\"1\":{\"152\":1}}],[\"使其更易于理解和维护\",{\"1\":{\"200\":1}}],[\"使其变得令人难以理解\",{\"1\":{\"172\":1}}],[\"使其成为对象树的一部分\",{\"1\":{\"171\":1}}],[\"使测试结果更真实\",{\"1\":{\"51\":1}}],[\"使用c语言编写\",{\"1\":{\"483\":1}}],[\"使用工厂\",{\"1\":{\"455\":1}}],[\"使用迭代器和\",{\"1\":{\"440\":1}}],[\"使用迭代器可能比直接遍历的效率低\",{\"1\":{\"198\":1}}],[\"使用特征作为函数参数\",{\"1\":{\"426\":1}}],[\"使用最多的是数组切片\",{\"1\":{\"399\":1}}],[\"使用下划线开头忽略未使用变量\",{\"1\":{\"343\":1}}],[\"使用起来也是很简单的\",{\"1\":{\"281\":1}}],[\"使用到native关键字\",{\"1\":{\"249\":1}}],[\"使用该模式只会让程序过于复杂\",{\"1\":{\"213\":1}}],[\"使用内置的身份验证方法\",{\"1\":{\"116\":1}}],[\"使用纵向扩展和只读副本来大规模提高性能\",{\"1\":{\"116\":1}}],[\"使用复制和分片进行水平扩展\",{\"1\":{\"116\":1}}],[\"使用唯一索引进行精准匹配\",{\"1\":{\"115\":2}}],[\"使用注解需要多个\",{\"0\":{\"79\":1}}],[\"使用自定义job\",{\"1\":{\"76\":1}}],[\"使用wsdl文件进行说明\",{\"1\":{\"70\":1}}],[\"使用esc或i或\",{\"1\":{\"60\":1}}],[\"使用\",{\"0\":{\"352\":1},\"1\":{\"59\":1,\"116\":3,\"344\":1,\"348\":3,\"384\":1,\"434\":1,\"456\":1,\"461\":1}}],[\"使用的是阻塞式的\",{\"1\":{\"30\":1}}],[\"使用指南手册\",{\"1\":{\"14\":1}}],[\"使用时需多考虑性能方面慎用\",{\"1\":{\"11\":1}}],[\"说明\",{\"0\":{\"51\":1},\"1\":{\"350\":1}}],[\"混合随机读写\",{\"1\":{\"50\":1}}],[\"软引用\",{\"1\":{\"270\":1}}],[\"软不存在软件包则执行\",{\"1\":{\"49\":1}}],[\"软件实体应当对扩展开放\",{\"1\":{\"141\":1}}],[\"软件\",{\"2\":{\"24\":1}}],[\"测试truncate\",{\"1\":{\"384\":1}}],[\"测试remove方法\",{\"1\":{\"384\":1}}],[\"测试时间为1000秒\",{\"1\":{\"51\":1}}],[\"测试随机写和读的i\",{\"1\":{\"51\":1}}],[\"测试随机写的i\",{\"1\":{\"51\":1}}],[\"测试过程绕过机器自带的buffer\",{\"1\":{\"51\":1}}],[\"测试文件名称\",{\"1\":{\"51\":1}}],[\"测试得到读写数据\",{\"1\":{\"48\":1}}],[\"测试工具\",{\"0\":{\"47\":1}}],[\"因数学家莱昂纳多\",{\"1\":{\"279\":1}}],[\"因此官方并不推荐使用\",{\"1\":{\"455\":1}}],[\"因此还需要额外的\",{\"1\":{\"434\":1}}],[\"因此称为关联函数\",{\"1\":{\"419\":1}}],[\"因此可以返回一个值\",{\"1\":{\"407\":1}}],[\"因此不能用\",{\"1\":{\"399\":1}}],[\"因此我们在使用\",{\"1\":{\"384\":1}}],[\"因此我们自己编写的同名包同名类不会被加载\",{\"1\":{\"317\":1}}],[\"因此你无法保证索引的字节刚好落在字符的边界上\",{\"1\":{\"383\":1}}],[\"因此每个字符占据\",{\"1\":{\"381\":1}}],[\"因此需要你为每一个函数参数都标识出它的具体类型\",{\"1\":{\"365\":1}}],[\"因此它是一个函数而不是方法\",{\"1\":{\"419\":1}}],[\"因此它就是一条表达式\",{\"1\":{\"361\":1}}],[\"因此它只适合读纯文本的文件\",{\"1\":{\"297\":1}}],[\"因此是语句\",{\"1\":{\"360\":1}}],[\"因此字符类型也是占用\",{\"1\":{\"356\":1}}],[\"因此在小数点非常后面发生了一点微小的变化\",{\"1\":{\"349\":1}}],[\"因此没有使用一个变量名而是使用了\",{\"1\":{\"344\":1}}],[\"因此守护线程不适合进行io操作\",{\"1\":{\"312\":1}}],[\"因此性能还不够高\",{\"1\":{\"298\":1}}],[\"因此代码整体复杂程度会有所增加\",{\"1\":{\"156\":1}}],[\"因此具有更大的灵活性\",{\"1\":{\"116\":1}}],[\"因此\",{\"1\":{\"113\":1,\"348\":1,\"455\":1}}],[\"因而采取\",{\"1\":{\"48\":1}}],[\"因为支持\",{\"1\":{\"470\":1}}],[\"因为不支持\",{\"1\":{\"470\":1}}],[\"因为它没有\",{\"1\":{\"419\":1}}],[\"因为它的第一个参数不是self\",{\"1\":{\"418\":1}}],[\"因为后者有固定的类型大小\",{\"1\":{\"399\":1}}],[\"因为切片是运行期的数据结构\",{\"1\":{\"399\":1}}],[\"因为会返回一个值\",{\"1\":{\"361\":1}}],[\"因为没有返回值的函数在\",{\"1\":{\"357\":1}}],[\"因为常量在编译完成后\",{\"1\":{\"345\":1}}],[\"因为\",{\"1\":{\"342\":1,\"349\":1,\"455\":1}}],[\"因为都是a的孩子\",{\"1\":{\"287\":1}}],[\"因为已经到头了\",{\"1\":{\"287\":1}}],[\"因为最大层次就是4\",{\"1\":{\"287\":1}}],[\"因为整棵树正是从这里开始延伸出去的\",{\"1\":{\"287\":1}}],[\"因为这时我们已经没有任何方法可以得到此对象的引用了\",{\"1\":{\"258\":1}}],[\"因为每个迭代器对象都包含其自身的遍历状态\",{\"1\":{\"197\":1}}],[\"因为你在发送者和接收者之间增加了一个全新的层次\",{\"1\":{\"195\":1}}],[\"因为你需要新增一系列接口和类\",{\"1\":{\"166\":1}}],[\"因为他人每次调用享元方法时都需要重新计算部分情景数据\",{\"1\":{\"184\":1}}],[\"因为他的配置信息在git仓库上\",{\"1\":{\"31\":1}}],[\"因为他的配置中心信息是保存在nacos里面的\",{\"1\":{\"31\":1}}],[\"因为需要新建许多类\",{\"1\":{\"178\":1}}],[\"因为许多测试框架以基于继承的方式创建模拟对象\",{\"1\":{\"159\":1}}],[\"因为新版的\",{\"1\":{\"130\":1}}],[\"因为spring\",{\"1\":{\"79\":1}}],[\"因为nacos可以同时作为注册中心和配置中心\",{\"1\":{\"31\":1}}],[\"发送事件给主进程\",{\"1\":{\"474\":1}}],[\"发布事件\",{\"1\":{\"456\":1}}],[\"发布同仓库可以去掉这个配置\",{\"1\":{\"54\":1}}],[\"发布同仓库可以去掉这个\",{\"1\":{\"54\":1}}],[\"发表了微博\",{\"1\":{\"426\":1}}],[\"发散函数\",{\"1\":{\"357\":1}}],[\"发现a的值是1\",{\"1\":{\"240\":1}}],[\"发现确实是由多数据源\",{\"1\":{\"83\":1}}],[\"发现错误过程\",{\"0\":{\"83\":1}}],[\"发现客户提供的挂载卷比较慢\",{\"1\":{\"48\":1}}],[\"发烧友绿软软件安全无法保证谨慎安装\",{\"1\":{\"21\":1}}],[\"磁盘\",{\"0\":{\"47\":1}}],[\"若继续使用需要添加\",{\"1\":{\"466\":1}}],[\"若存在多个输入生命周期\",{\"1\":{\"445\":1}}],[\"若只有一个输入生命周期\",{\"1\":{\"445\":1}}],[\"若使用\",{\"1\":{\"325\":1}}],[\"若没有也会自动查找替代\",{\"1\":{\"113\":1}}],[\"若是不添加则会出现空白情况\",{\"1\":{\"472\":1}}],[\"若是非数组则返回\",{\"1\":{\"334\":1}}],[\"若是用vpn调试则需使用\",{\"1\":{\"70\":1}}],[\"若是通过执行\",{\"1\":{\"43\":1}}],[\"若无test目录\",{\"1\":{\"60\":1}}],[\"若仅为快速启动和搜索建议用这个\",{\"1\":{\"21\":1}}],[\"包和模块\",{\"1\":{\"405\":1}}],[\"包括很多信息\",{\"1\":{\"458\":1}}],[\"包括其父类中的字段\",{\"1\":{\"334\":1}}],[\"包括返回值\",{\"1\":{\"280\":1}}],[\"包然后直接执行脚本启动\",{\"1\":{\"43\":1}}],[\"包启动项目然后挂载外部配置文件就需要提前单独准备好配置文件\",{\"1\":{\"43\":1}}],[\"包执行\",{\"1\":{\"43\":1}}],[\"包形式部署\",{\"0\":{\"43\":1}}],[\"换成\",{\"1\":{\"43\":1}}],[\"0deg\",{\"1\":{\"474\":1}}],[\"0了\",{\"1\":{\"278\":1}}],[\"000\",{\"1\":{\"345\":1}}],[\"0000\",{\"1\":{\"278\":1}}],[\"0001\",{\"1\":{\"277\":1,\"278\":1}}],[\"01\",{\"1\":{\"59\":2,\"70\":6}}],[\"0\",{\"1\":{\"43\":3,\"54\":1,\"70\":6,\"98\":2,\"99\":1,\"130\":1,\"242\":3,\"243\":1,\"277\":1,\"278\":2,\"279\":1,\"306\":5,\"309\":1,\"312\":1,\"325\":4,\"327\":2,\"334\":1,\"348\":4,\"349\":23,\"384\":1,\"389\":1,\"399\":5,\"434\":1,\"472\":1,\"474\":2}}],[\"0️⃣\",{\"1\":{\"25\":1}}],[\"$$\",{\"1\":{\"334\":2}}],[\"$host$request\",{\"1\":{\"92\":1,\"93\":2}}],[\"$app\",{\"1\":{\"43\":1}}],[\"$cp\",{\"1\":{\"43\":1}}],[\"$java\",{\"1\":{\"43\":2}}],[\"$base\",{\"1\":{\"43\":1}}],[\"$\",{\"1\":{\"43\":2,\"54\":1,\"325\":1}}],[\"形式通过脚本启动项目\",{\"1\":{\"43\":1}}],[\"非常方便\",{\"1\":{\"281\":1}}],[\"非公平机制\",{\"1\":{\"237\":1}}],[\"非公平锁\",{\"1\":{\"236\":1}}],[\"非锁模式\",{\"1\":{\"157\":1}}],[\"非主键索引的数据实际上存储的是对应记录的主键值\",{\"1\":{\"113\":1}}],[\"非\",{\"1\":{\"43\":1}}],[\"前言\",{\"0\":{\"466\":1}}],[\"前两个的融合体\",{\"1\":{\"281\":1}}],[\"前期准备\",{\"0\":{\"49\":1}}],[\"前情提要\",{\"0\":{\"48\":1},\"1\":{\"43\":1}}],[\"前端\",{\"0\":{\"14\":1}}],[\"项目为安装包\",{\"1\":{\"477\":1}}],[\"项目打包\",{\"0\":{\"476\":1}}],[\"项目\",{\"0\":{\"324\":1,\"468\":1},\"1\":{\"244\":1,\"470\":1,\"475\":2}}],[\"项目所用到\",{\"0\":{\"217\":1}}],[\"项目挂载项目\",{\"0\":{\"43\":1}}],[\"项目部署\",{\"0\":{\"40\":1}}],[\"已经确定它的值\",{\"1\":{\"345\":1}}],[\"已完结\",{\"1\":{\"218\":1}}],[\"已非\",{\"0\":{\"43\":1}}],[\"已集成\",{\"1\":{\"27\":4}}],[\"第二种最终解决该问题\",{\"1\":{\"42\":1}}],[\"第一种仍然存在时区问题\",{\"1\":{\"42\":1}}],[\">读取一个txt文件的内容<\",{\"1\":{\"474\":1}}],[\">卸载\",{\"1\":{\"313\":1}}],[\">使用\",{\"1\":{\"313\":1}}],[\">初始化\",{\"1\":{\"313\":1}}],[\">解析\",{\"1\":{\"313\":1}}],[\">准备\",{\"1\":{\"313\":1}}],[\">连接\",{\"1\":{\"313\":1}}],[\">=\",{\"1\":{\"281\":1}}],[\">>\",{\"1\":{\"98\":1,\"325\":1,\"350\":1}}],[\">testpassword<\",{\"1\":{\"70\":1}}],[\">\",{\"1\":{\"42\":1,\"59\":1,\"70\":2,\"92\":1,\"94\":1,\"111\":6,\"154\":4,\"235\":1,\"243\":1,\"280\":1,\"281\":16,\"305\":1,\"306\":4,\"309\":2,\"312\":1,\"334\":12,\"364\":1,\"366\":2,\"384\":5,\"389\":1,\"412\":1,\"418\":2,\"419\":1,\"420\":4,\"426\":3,\"427\":1,\"440\":1,\"460\":7,\"474\":2}}],[\"失败\",{\"1\":{\"42\":1}}],[\"问题记录记录\",{\"0\":{\"86\":1}}],[\"问题\",{\"0\":{\"41\":1,\"65\":1,\"87\":1,\"240\":1},\"1\":{\"79\":1},\"2\":{\"71\":1,\"74\":1,\"77\":1,\"80\":1,\"84\":1,\"88\":1,\"95\":1,\"100\":1}}],[\"洛基\",{\"1\":{\"37\":1}}],[\"分为两种情况\",{\"1\":{\"472\":1}}],[\"分为以下四个步骤\",{\"1\":{\"268\":1}}],[\"分别为\",{\"1\":{\"349\":1}}],[\"分别是wait\",{\"1\":{\"309\":1}}],[\"分支的数目\",{\"1\":{\"287\":1}}],[\"分代收集机制\",{\"0\":{\"262\":1}}],[\"分布式\",{\"0\":{\"123\":1}}],[\"分布式事务\",{\"0\":{\"35\":1}}],[\"分页查看desc\",{\"1\":{\"60\":1}}],[\"分页查看文件内容\",{\"1\":{\"60\":1}}],[\"分区容错性\",{\"1\":{\"27\":1}}],[\"鉴权\",{\"0\":{\"34\":1}}],[\"并创建一个被增强的对象\",{\"1\":{\"458\":1}}],[\"并调用init\",{\"1\":{\"455\":1}}],[\"并提供详细的习题解答\",{\"1\":{\"347\":1,\"354\":1,\"358\":1,\"362\":1,\"368\":1,\"372\":1,\"379\":1,\"387\":1,\"393\":1,\"395\":1,\"400\":1,\"408\":1,\"414\":1,\"421\":1,\"424\":1,\"428\":1,\"430\":1,\"438\":1,\"443\":1}}],[\"并发会用到\",{\"1\":{\"298\":1}}],[\"并发标记\",{\"1\":{\"268\":1}}],[\"并发编程\",{\"1\":{\"245\":1}}],[\"并发容器\",{\"0\":{\"241\":1}}],[\"并发与并行\",{\"0\":{\"222\":1}}],[\"并发线程数限流\",{\"1\":{\"29\":1}}],[\"并在结构中的每个对象上应用访问者时\",{\"1\":{\"215\":1}}],[\"并且值的类型必须标注\",{\"1\":{\"345\":1}}],[\"并且修改tams指针的值\",{\"1\":{\"268\":1}}],[\"并且线程启动时会自动创建\",{\"1\":{\"253\":1}}],[\"并且是基于寄存器的指令集架构\",{\"1\":{\"249\":1}}],[\"并且等待队列已满\",{\"1\":{\"242\":1}}],[\"并且版本号不会重复\",{\"1\":{\"240\":1}}],[\"并且必须全部解锁才真正释放锁\",{\"1\":{\"237\":1}}],[\"并且该职责被完整地封装在一个类中\",{\"1\":{\"140\":1}}],[\"并且能够处理非结构化\",{\"1\":{\"116\":1}}],[\"并且发送到注册中心或者由注册中心来返回需要的数据\",{\"1\":{\"70\":1}}],[\"并通过uddi进行注册\",{\"1\":{\"70\":1}}],[\"并让系统中所有微服务实例都连接上来\",{\"1\":{\"32\":1}}],[\"就代表一个指定的原始类型\",{\"1\":{\"333\":1}}],[\"就像族谱中的父子关系一样\",{\"1\":{\"287\":1}}],[\"就像族谱那样\",{\"1\":{\"287\":1}}],[\"就是\",{\"1\":{\"357\":1}}],[\"就是这颗树的深度\",{\"1\":{\"287\":1}}],[\"就是一棵a的子树\",{\"1\":{\"287\":1}}],[\"就是要做什么事情要么做完\",{\"1\":{\"231\":1}}],[\"就会将任务暂时存到等待队列中\",{\"1\":{\"242\":1}}],[\"就会数据一致\",{\"1\":{\"31\":1}}],[\"就直接获取到锁\",{\"1\":{\"236\":1}}],[\"就可以使用\",{\"1\":{\"281\":1}}],[\"就可以得到地址\",{\"1\":{\"27\":1}}],[\"就可能发生配置不一致的情况\",{\"1\":{\"31\":1}}],[\"这一步的操作\",{\"1\":{\"470\":1}}],[\"这名字挺有文艺范的\",{\"1\":{\"458\":1}}],[\"这点与其他编程语言不同\",{\"1\":{\"397\":1}}],[\"这些接口都可以直接使用lambda表达式\",{\"1\":{\"281\":1}}],[\"这些信息可能会有所帮助\",{\"1\":{\"215\":1}}],[\"这阶段耗时较长\",{\"1\":{\"268\":1}}],[\"这个点可以是方法的调用\",{\"1\":{\"458\":1}}],[\"这个值将被丢弃\",{\"1\":{\"371\":1}}],[\"这个类型提供了一个对应的实现\",{\"1\":{\"281\":1}}],[\"这个类决定了要调用那些handler\",{\"1\":{\"70\":1}}],[\"这个是我们需要实现的\",{\"1\":{\"281\":1}}],[\"这个方法就是我们要实现的\",{\"1\":{\"281\":1}}],[\"这个方法就是用于消费的\",{\"1\":{\"281\":1}}],[\"这个方法便于我们连续使用此消费接口\",{\"1\":{\"281\":1}}],[\"这个接口也是spring提供的一种bean加载机制\",{\"1\":{\"456\":1}}],[\"这个接口方法有点多\",{\"1\":{\"281\":1}}],[\"这个接口消费一个对象\",{\"1\":{\"281\":1}}],[\"这个接口专门用于消费某个对象的\",{\"1\":{\"281\":1}}],[\"这个接口是专门用于供给使用的\",{\"1\":{\"281\":1}}],[\"这个阶段需要停顿线程\",{\"1\":{\"268\":1}}],[\"这时并没有立即释放锁\",{\"1\":{\"309\":1}}],[\"这时其他线程可以获取到此对象的锁\",{\"1\":{\"309\":1}}],[\"这时就该树枝上长叶子了那样\",{\"1\":{\"287\":1}}],[\"这时就会根据当前设定的拒绝策略进行处理\",{\"1\":{\"242\":1}}],[\"这时线程2才开始进行判断\",{\"1\":{\"240\":1}}],[\"这种定义在\",{\"1\":{\"419\":1}}],[\"这种方法往往用于初始化当前结构体的实例\",{\"1\":{\"418\":1}}],[\"这种语法往往用做会导致程序崩溃的函数\",{\"1\":{\"367\":1}}],[\"这种用法和\",{\"1\":{\"357\":1}}],[\"这种问题称之为aba问题\",{\"1\":{\"240\":1}}],[\"这种情况下\",{\"1\":{\"227\":1}}],[\"这也是cas操作存在的问题\",{\"1\":{\"240\":1}}],[\"这行\",{\"1\":{\"133\":1}}],[\"这是配置跨域的一种方法\",{\"1\":{\"73\":1}}],[\"这是文档部署到的分支名称\",{\"1\":{\"54\":1}}],[\"这两个类型都是\",{\"1\":{\"381\":1}}],[\"这两个\",{\"1\":{\"66\":1}}],[\"这里加\",{\"1\":{\"471\":1}}],[\"这里\",{\"1\":{\"384\":1}}],[\"这里传入的对象会和之后的进行比较\",{\"1\":{\"281\":1}}],[\"这里实现了一个简单的功能\",{\"1\":{\"281\":1}}],[\"这里一共有两个类型参数\",{\"1\":{\"281\":1}}],[\"这里我们主要介绍一下四个主要的函数式接口\",{\"1\":{\"281\":1}}],[\"这里用了两个int存放\",{\"1\":{\"243\":1}}],[\"这里可以使用我们上一章学到的阻塞队列\",{\"1\":{\"242\":1}}],[\"这里的操作涉及存活对象的移动\",{\"1\":{\"268\":1}}],[\"这里的1已经不是一开始的那个1了\",{\"1\":{\"240\":1}}],[\"这里的服务器名字\",{\"1\":{\"92\":1}}],[\"这里有好多方法可以实现\",{\"1\":{\"70\":1}}],[\"这里针对性选择删除\",{\"1\":{\"43\":1}}],[\"这里配置的变更比较麻烦\",{\"1\":{\"31\":1}}],[\"这样获取外部资源文件\",{\"1\":{\"456\":1}}],[\"这样可以调用容器的服务\",{\"1\":{\"456\":1}}],[\"这样的写法称为装饰者模式\",{\"1\":{\"298\":1}}],[\"这样就简单多了\",{\"1\":{\"277\":1}}],[\"这样就会正常释放连接\",{\"1\":{\"83\":1}}],[\"这样才可以作为一个任务\",{\"1\":{\"243\":1}}],[\"这样才能销毁弃用的备忘录\",{\"1\":{\"204\":1}}],[\"这样明显是非常消耗性能的\",{\"1\":{\"227\":1}}],[\"这样\",{\"1\":{\"29\":1,\"213\":1}}],[\"还可以是抛出异常之类的\",{\"1\":{\"458\":1}}],[\"还可以当做其他的数据结构使用\",{\"1\":{\"293\":1}}],[\"还有一个是返回的结果类型\",{\"1\":{\"281\":1}}],[\"还有一种是队列\",{\"1\":{\"249\":1}}],[\"还要提供预期版本号和新的版本号\",{\"1\":{\"240\":1}}],[\"还要在服务端来编制软件\",{\"1\":{\"70\":1}}],[\"还保留了可重入锁和公平\",{\"1\":{\"237\":1}}],[\"还是看你自己\",{\"1\":{\"455\":1}}],[\"还是编入class文件中\",{\"1\":{\"320\":1}}],[\"还是\",{\"1\":{\"92\":1}}],[\"还没有同步配置信息\",{\"1\":{\"31\":1}}],[\"还提供低侵入性的注解资源定义方式\",{\"1\":{\"29\":1}}],[\"他们都是\",{\"1\":{\"333\":1}}],[\"他们其实是需要配合synchronized来使用的\",{\"1\":{\"309\":1}}],[\"他通过可以soap调用你建立的web服务中的一个或多个操作\",{\"1\":{\"70\":1}}],[\"他需要结合bus组件\",{\"1\":{\"31\":1}}],[\"他这里支持cp模式对于我的理解来说\",{\"1\":{\"31\":1}}],[\"他根据服务注册选择临时和永久来决定走ap模式还是cp模式\",{\"1\":{\"31\":1}}],[\"他同时支持ap和cp模式\",{\"1\":{\"31\":1}}],[\"性能\",{\"1\":{\"116\":1}}],[\"性能没有问题\",{\"1\":{\"31\":1}}],[\"性能也不差\",{\"1\":{\"31\":1}}],[\"性能最好\",{\"1\":{\"31\":1}}],[\"性能损耗\",{\"1\":{\"29\":1}}],[\"性能损耗小\",{\"1\":{\"29\":1}}],[\"推荐\",{\"1\":{\"31\":1,\"32\":1}}],[\"推荐使用\",{\"1\":{\"27\":1}}],[\"胎死腹中\",{\"1\":{\"30\":1}}],[\"接收一个参数\",{\"1\":{\"281\":1}}],[\"接收一切外界请求\",{\"1\":{\"30\":1}}],[\"接入\",{\"0\":{\"97\":1}}],[\"接口简介\",{\"0\":{\"333\":1}}],[\"接口内部必须有且仅有一个抽象方法\",{\"1\":{\"280\":1}}],[\"接口隔离原则\",{\"0\":{\"144\":1}}],[\"接口\",{\"1\":{\"29\":1,\"334\":1}}],[\"接口的形式\",{\"1\":{\"29\":1}}],[\"过滤器\",{\"1\":{\"30\":2}}],[\"+i\",{\"1\":{\"306\":4}}],[\"+f\",{\"1\":{\"279\":1}}],[\"+0\",{\"1\":{\"278\":1}}],[\"+=\",{\"1\":{\"243\":1,\"344\":1,\"384\":2,\"399\":1}}],[\"+end+\",{\"1\":{\"243\":1}}],[\"+start+\",{\"1\":{\"243\":1}}],[\"+x\",{\"1\":{\"43\":1}}],[\"+\",{\"0\":{\"468\":1},\"1\":{\"30\":1,\"37\":1,\"60\":10,\"70\":1,\"93\":1,\"243\":5,\"277\":1,\"278\":1,\"346\":1,\"348\":1,\"349\":9,\"361\":2,\"366\":1,\"384\":8,\"399\":1,\"427\":4,\"472\":1,\"474\":1,\"479\":2}}],[\"+1\",{\"1\":{\"25\":1}}],[\"官方文档\",{\"1\":{\"484\":1}}],[\"官方文档标明会损耗1\",{\"1\":{\"29\":1}}],[\"官方资料\",{\"0\":{\"484\":1}}],[\"官方主题部署项目指南\",{\"1\":{\"54\":1}}],[\"官网不推荐\",{\"1\":{\"29\":1}}],[\"增加编码复杂度\",{\"1\":{\"29\":1}}],[\"缺点\",{\"0\":{\"150\":1,\"153\":1,\"156\":1,\"159\":1,\"162\":1,\"166\":1,\"169\":1,\"172\":1,\"175\":1,\"178\":1,\"181\":1,\"184\":1,\"189\":1,\"192\":1,\"195\":1,\"198\":1,\"201\":1,\"204\":1,\"207\":1,\"210\":1,\"213\":1,\"216\":1},\"1\":{\"29\":1}}],[\"缺乏生产级别的配套设施\",{\"1\":{\"29\":1}}],[\"触发熔断原因可记录日志\",{\"1\":{\"29\":1}}],[\"熔断与恢复\",{\"1\":{\"29\":1}}],[\"熔断降级策略\",{\"1\":{\"29\":1}}],[\"优先使用对象组合\",{\"1\":{\"145\":1}}],[\"优点\",{\"0\":{\"149\":1,\"152\":1,\"155\":1,\"158\":1,\"161\":1,\"165\":1,\"168\":1,\"171\":1,\"174\":1,\"177\":1,\"180\":1,\"183\":1,\"188\":1,\"191\":1,\"194\":1,\"197\":1,\"200\":1,\"203\":1,\"206\":1,\"209\":1,\"212\":1,\"215\":1},\"1\":{\"29\":1}}],[\"优缺点\",{\"1\":{\"29\":1}}],[\"住\",{\"1\":{\"29\":1}}],[\"只会根据类型寻找\",{\"1\":{\"455\":1}}],[\"只不过这里的继承并不是类的继承\",{\"1\":{\"455\":1}}],[\"只关注\",{\"1\":{\"357\":1}}],[\"只能在主线程进行调用\",{\"1\":{\"466\":1}}],[\"只能说\",{\"1\":{\"357\":1}}],[\"只能存储一个变量\",{\"1\":{\"310\":1}}],[\"只有所谓的原始类型\",{\"1\":{\"333\":1}}],[\"只有bootstarpclassloader都没有加载的类\",{\"1\":{\"317\":1}}],[\"只有在同步代码块中才能使用这些方法\",{\"1\":{\"309\":1}}],[\"只适合打打杂\",{\"1\":{\"312\":1}}],[\"只被软引用关联着的对象\",{\"1\":{\"270\":1}}],[\"只要有定义即可\",{\"1\":{\"364\":1}}],[\"只要强引用关系还存在\",{\"1\":{\"270\":1}}],[\"只要每次操作都记录一下版本号\",{\"1\":{\"240\":1}}],[\"只要客户端代码通过客户端接口与适配器进行交互\",{\"1\":{\"165\":1}}],[\"只是connection\",{\"1\":{\"83\":1}}],[\"只包含限流降级的基本场景\",{\"1\":{\"29\":1}}],[\"只需引入相应依赖并简单配置即可快速接入\",{\"1\":{\"29\":1}}],[\"只需要查询注册中心\",{\"1\":{\"27\":1}}],[\"在初始创建bean对象时都会生成一个对应的单例工厂用于获取早期对象\",{\"1\":{\"460\":1}}],[\"在beanfactory\",{\"1\":{\"456\":1}}],[\"在之前的代码中\",{\"1\":{\"419\":1}}],[\"在实际开发中\",{\"1\":{\"399\":1}}],[\"在求值后\",{\"1\":{\"361\":1}}],[\"在目前为止的学习过程中\",{\"1\":{\"357\":1}}],[\"在现代的\",{\"1\":{\"349\":1}}],[\"在现代物理\",{\"1\":{\"279\":1}}],[\"在当前的花括号作用域内\",{\"1\":{\"346\":1}}],[\"在当前目录下创建test目录\",{\"1\":{\"60\":1}}],[\"在当前目录下创建文件desc\",{\"1\":{\"60\":1}}],[\"在main函数的作用域内对之前的x进行遮蔽\",{\"1\":{\"346\":1}}],[\"在继续当前内容\",{\"1\":{\"306\":1}}],[\"在i==10时\",{\"1\":{\"306\":1}}],[\"在下次读取时\",{\"1\":{\"298\":1}}],[\"在执行完后\",{\"1\":{\"281\":1}}],[\"在数学上\",{\"1\":{\"279\":1}}],[\"在了解了计算机底层的数据表示形式之后\",{\"1\":{\"278\":1}}],[\"在系统将要发生内存溢出异常之前\",{\"1\":{\"270\":1}}],[\"在某些情况下\",{\"1\":{\"249\":1}}],[\"在构造时需要指定初始值和对应的版本号\",{\"1\":{\"240\":1}}],[\"在cpu中\",{\"1\":{\"225\":1}}],[\"在jdk6之前\",{\"1\":{\"224\":1}}],[\"在访问者同某个元素进行交互时\",{\"1\":{\"216\":1}}],[\"在封装器栈中删除特定封装器比较困难\",{\"1\":{\"175\":1}}],[\"在特定情况下\",{\"1\":{\"172\":1}}],[\"在索引里使用的字节数\",{\"1\":{\"111\":1}}],[\"在开发spring\",{\"1\":{\"83\":1}}],[\"在调用webservice时\",{\"1\":{\"70\":1}}],[\"在用户能够调用web服务之前\",{\"1\":{\"70\":1}}],[\"在opt目录下查找以\",{\"1\":{\"60\":1}}],[\"在\",{\"1\":{\"60\":1,\"115\":1}}],[\"在混合读写的模式下\",{\"1\":{\"51\":1}}],[\"在总线上的各个实例\",{\"1\":{\"32\":1}}],[\"在微服务架构的系统中\",{\"1\":{\"32\":1}}],[\"在服务网关中可以完成一系列的横切功能\",{\"1\":{\"30\":1}}],[\"在较小较新的项目中使用还是比较方便的\",{\"1\":{\"29\":1}}],[\"在其内部暂时舍弃对一些非核心的接口和数据的请求\",{\"1\":{\"29\":1}}],[\"完成\",{\"1\":{\"460\":1}}],[\"完成类型转换\",{\"0\":{\"352\":1}}],[\"完全不需要任何加锁机制\",{\"1\":{\"227\":1}}],[\"完全ap\",{\"1\":{\"31\":1}}],[\"完善的扩展性设计\",{\"1\":{\"29\":1}}],[\"完美替换eureka\",{\"1\":{\"27\":1}}],[\"易用的控制台\",{\"1\":{\"29\":1}}],[\"热点\",{\"1\":{\"29\":1}}],[\"塑形\",{\"1\":{\"29\":1}}],[\"流程控制\",{\"0\":{\"406\":1},\"1\":{\"405\":1}}],[\"流水\",{\"1\":{\"244\":1}}],[\"流量控制\",{\"1\":{\"29\":1}}],[\"流量整形\",{\"1\":{\"29\":1}}],[\"流控等均由hystrix支持\",{\"1\":{\"30\":1}}],[\"流控效果\",{\"1\":{\"29\":1}}],[\"流控维度包括流控指标\",{\"1\":{\"29\":1}}],[\"承接了阿里巴巴近\",{\"1\":{\"29\":1}}],[\"丰富的流量控制场景\",{\"1\":{\"29\":1}}],[\"轻量级锁\",{\"0\":{\"225\":1}}],[\"轻量级的独立的通讯技术\",{\"1\":{\"70\":1}}],[\"轻量级\",{\"1\":{\"29\":1}}],[\"不同版本\",{\"1\":{\"466\":1}}],[\"不同的线程访问到threadlocal对象时\",{\"1\":{\"310\":1}}],[\"不同的工厂通过此方法生产不同的类\",{\"1\":{\"148\":1}}],[\"不能用\",{\"1\":{\"419\":1}}],[\"不能直接传递\",{\"1\":{\"384\":1}}],[\"不能确保备忘录中的状态不被修改\",{\"1\":{\"204\":1}}],[\"不可变引用\",{\"0\":{\"376\":1}}],[\"不关心我们在哪里定义了函数\",{\"1\":{\"364\":1}}],[\"不保留到运行时\",{\"1\":{\"319\":2}}],[\"不需要和用户交互\",{\"1\":{\"312\":1}}],[\"不要把操作系统重的守护进程和守护线程相提并论\",{\"1\":{\"312\":1}}],[\"不允许通过下标访问\",{\"1\":{\"294\":1}}],[\"不允许出现重复元素\",{\"1\":{\"294\":1}}],[\"不是很理解\",{\"1\":{\"367\":1}}],[\"不是\",{\"1\":{\"281\":1}}],[\"不难发现一个规律\",{\"1\":{\"279\":1}}],[\"不变\",{\"1\":{\"278\":1}}],[\"不存在做一半的情况\",{\"1\":{\"231\":1}}],[\"不会有人听到现在还是懵逼的吧\",{\"1\":{\"281\":1}}],[\"不会吧不会吧\",{\"1\":{\"281\":1}}],[\"不会接触到平台的详细信息\",{\"1\":{\"168\":1}}],[\"不会对静态内部类进行初始化\",{\"1\":{\"157\":1}}],[\"不加锁\",{\"1\":{\"115\":1}}],[\"不做修改的访问新地址\",{\"1\":{\"93\":1}}],[\"不推荐使用旧的\",{\"1\":{\"130\":1}}],[\"不推荐\",{\"1\":{\"32\":1}}],[\"不在使用\",{\"1\":{\"31\":1}}],[\"不提供控制台\",{\"1\":{\"29\":1}}],[\"不支持随机访问\",{\"1\":{\"294\":1}}],[\"不支持抽象类\",{\"1\":{\"280\":1}}],[\"不支持长连接\",{\"1\":{\"30\":1}}],[\"不支持\",{\"1\":{\"27\":6,\"29\":3}}],[\"模板然后选择对应的数据源即可\",{\"1\":{\"329\":1}}],[\"模板方法中的步骤越多\",{\"1\":{\"189\":1}}],[\"模板方法模式\",{\"0\":{\"187\":1},\"1\":{\"217\":1}}],[\"模板下载\",{\"1\":{\"17\":1}}],[\"模式2\",{\"1\":{\"410\":1}}],[\"模式1\",{\"1\":{\"410\":1}}],[\"模式匹配\",{\"1\":{\"405\":1}}],[\"模式构建器\",{\"1\":{\"154\":1}}],[\"模式\",{\"1\":{\"29\":1}}],[\"匀速器模式\",{\"1\":{\"29\":1}}],[\"滑动窗口\",{\"1\":{\"29\":2}}],[\"实例化\",{\"1\":{\"461\":1}}],[\"实例\",{\"1\":{\"460\":2}}],[\"实例名称\",{\"1\":{\"327\":1}}],[\"实现该接口的类拥有注册bean的能力\",{\"1\":{\"456\":1}}],[\"实现供给功能\",{\"1\":{\"281\":1}}],[\"实现此方法\",{\"1\":{\"281\":1}}],[\"实现某个功能的指令条数也会更多\",{\"1\":{\"249\":1}}],[\"实现行为不受装饰栈顺序影响的装饰比较困难\",{\"1\":{\"175\":1}}],[\"实现类\",{\"1\":{\"173\":1}}],[\"实现部分处理平台细节\",{\"1\":{\"168\":1}}],[\"实现不同之处\",{\"1\":{\"113\":1}}],[\"实现同样逻辑\",{\"1\":{\"11\":1}}],[\"实际使用的索引\",{\"1\":{\"111\":1}}],[\"实际上就是我们在方法执行前或是执行后需要做的内容\",{\"1\":{\"458\":1}}],[\"实际上就是多行捆绑在一起\",{\"1\":{\"110\":1}}],[\"实际上spring官方更推荐我们使用基于构造方法或是setter的\",{\"1\":{\"455\":1}}],[\"实际上类最开始是由bootstarpclassloader进行加载\",{\"1\":{\"317\":1}}],[\"实际上锁就是依附于对象存在的\",{\"1\":{\"309\":1}}],[\"实际上进行i\",{\"1\":{\"298\":1}}],[\"实际上从第三个数开始\",{\"1\":{\"279\":1}}],[\"实际上我们发现\",{\"1\":{\"249\":1}}],[\"实际上并不起作用\",{\"1\":{\"83\":1}}],[\"实时监控服务a状态\",{\"1\":{\"29\":1}}],[\"实时监控\",{\"1\":{\"29\":1}}],[\"实时统计实现\",{\"1\":{\"29\":1}}],[\"响应时间\",{\"1\":{\"29\":1}}],[\"信号量隔离\",{\"1\":{\"29\":3}}],[\"国\",{\"1\":{\"356\":1}}],[\"国内推荐sentienl\",{\"1\":{\"29\":1}}],[\"国外大规模使用\",{\"1\":{\"29\":1}}],[\"企业大规模使用\",{\"1\":{\"29\":1}}],[\"但精度更高\",{\"1\":{\"349\":1}}],[\"但集合可以有不同种类的元素\",{\"1\":{\"291\":1}}],[\"但集合只能存放对象\",{\"1\":{\"291\":1}}],[\"但非必须的对象\",{\"1\":{\"270\":1}}],[\"但可与用户程序并发执行\",{\"1\":{\"268\":1}}],[\"但耗时很短\",{\"1\":{\"268\":1}}],[\"但表中不存在记录\",{\"1\":{\"115\":1}}],[\"但它可以保持原请求的方法\",{\"1\":{\"93\":1}}],[\"但执行完之后忘记了手动释放连接\",{\"1\":{\"83\":1}}],[\"但按照网上所说只要配置这几个参数\",{\"1\":{\"83\":1}}],[\"但出现了一种情况\",{\"1\":{\"73\":1}}],[\"但在这里我们仅需要实现handlemessage\",{\"1\":{\"70\":1}}],[\"但是有所不同的是\",{\"1\":{\"434\":1}}],[\"但是字符串又是\",{\"1\":{\"383\":1}}],[\"但是并没有返回值\",{\"1\":{\"360\":1}}],[\"但是并不会关心当前值是否被修改过\",{\"1\":{\"240\":1}}],[\"但是完全不占用任何内存\",{\"1\":{\"357\":1}}],[\"但是我们不关心具体的值是什么\",{\"1\":{\"344\":1}}],[\"但是我只能往一个outputstream里输出\",{\"1\":{\"299\":1}}],[\"但是前者是唤醒所有调用wait\",{\"1\":{\"309\":1}}],[\"但是又迟迟不释放\",{\"1\":{\"308\":1}}],[\"但是现在支持以reader的方式进行读取\",{\"1\":{\"299\":1}}],[\"但是现在支持以writer的方式进行写入\",{\"1\":{\"299\":1}}],[\"但是outputstream又只支持byte类型\",{\"1\":{\"299\":1}}],[\"但是进行了一些额外的处理然后再调用fileinputstream的同名方法\",{\"1\":{\"298\":1}}],[\"但是每次都需要从外部i\",{\"1\":{\"298\":1}}],[\"但是必须保证其他方法有默认实现\",{\"1\":{\"280\":1}}],[\"但是性能上大打折扣\",{\"1\":{\"249\":1}}],[\"但是不能超过最大线程池大小\",{\"1\":{\"242\":1}}],[\"但是问题多多\",{\"1\":{\"240\":1}}],[\"但是线程1的速度比较快\",{\"1\":{\"240\":1}}],[\"但是线程自己是可以加读锁的\",{\"1\":{\"238\":1}}],[\"但是在字符串中不一样\",{\"1\":{\"381\":1}}],[\"但是在运行时根本不可能出现各个线程之间资源争夺的情况\",{\"1\":{\"227\":1}}],[\"但是在修改时\",{\"1\":{\"225\":1}}],[\"但是大多数浏览器都会在\",{\"1\":{\"94\":1}}],[\"但是如果在thirdbusinessfactory\",{\"1\":{\"79\":1}}],[\"但是保证了数据的一致性\",{\"1\":{\"31\":1}}],[\"但是\",{\"1\":{\"29\":1,\"94\":2}}],[\"但却保证了整个系统的稳定性和可用性\",{\"1\":{\"29\":1}}],[\"但不支持截长图\",{\"1\":{\"21\":1}}],[\"错误处理信息\",{\"1\":{\"29\":1}}],[\"而在单例模式下\",{\"1\":{\"455\":1}}],[\"而在jdk6之后\",{\"1\":{\"224\":1}}],[\"而对应的销毁方法不会被调用\",{\"1\":{\"455\":1}}],[\"而\",{\"1\":{\"399\":1,\"434\":1}}],[\"而有符号则表示数字可以取正数\",{\"1\":{\"348\":1}}],[\"而实际要去启动的是真正的string类\",{\"1\":{\"317\":1}}],[\"而我们自己编写的类实际上是appclassloader加载的\",{\"1\":{\"317\":1}}],[\"而守护线程就不一样了\",{\"1\":{\"312\":1}}],[\"而使用\",{\"1\":{\"310\":1}}],[\"而后者是看运气随机选择一个\",{\"1\":{\"309\":1}}],[\"而bufferedinputstream虽然有着同样的方法\",{\"1\":{\"298\":1}}],[\"而缓冲流正如其名称一样\",{\"1\":{\"298\":1}}],[\"而双端队列允许在队列的两端进行入队和出队操作\",{\"1\":{\"293\":1}}],[\"而各个结点度的最大值称为树的度\",{\"1\":{\"287\":1}}],[\"而虚拟机栈\",{\"1\":{\"253\":1}}],[\"而java内存模型\",{\"1\":{\"228\":1}}],[\"而是属性的继承\",{\"1\":{\"455\":1}}],[\"而是采用的原型模式\",{\"1\":{\"455\":1}}],[\"而是我们传入的fileinputstream\",{\"1\":{\"298\":1}}],[\"而是\",{\"1\":{\"278\":1}}],[\"而是被重新赋值的1\",{\"1\":{\"240\":1}}],[\"而是直接尝试修改i的值\",{\"1\":{\"225\":1}}],[\"而是在执行的时候\",{\"1\":{\"225\":1}}],[\"而无需与它们所属的具体类相耦合\",{\"1\":{\"161\":1}}],[\"而且自始至终不可变\",{\"1\":{\"345\":1}}],[\"而且是借用进行minor\",{\"1\":{\"268\":1}}],[\"而且大部分指令都是没有操作数的\",{\"1\":{\"249\":1}}],[\"而且绝大部分语言无法重写静态方法\",{\"1\":{\"159\":1}}],[\"而且局限于那些与本单位密切相关的软件单位\",{\"1\":{\"146\":1}}],[\"而不是直接向外部设备写入\",{\"1\":{\"298\":1}}],[\"而不是通过继承来达到复用的目的\",{\"1\":{\"145\":1}}],[\"而不是整体系统设计的策略\",{\"1\":{\"27\":1}}],[\"而直接返回一个提前准备好的fallback\",{\"1\":{\"29\":1}}],[\"出现负荷过载或者响应慢的情况\",{\"1\":{\"29\":1}}],[\"业务场景\",{\"1\":{\"29\":1,\"79\":1}}],[\"为名的一份数学杂志\",{\"1\":{\"279\":1}}],[\"为此\",{\"1\":{\"279\":1}}],[\"为一个对象设置虚引用关联的唯一目的只是为了能在这个对象被回收时收到一个系统通知\",{\"1\":{\"270\":1}}],[\"为什么要像这样拆分一个实体的状态\",{\"1\":{\"184\":1}}],[\"为系统中的基础设施和微服务应用提供集中化的外部配置支持\",{\"1\":{\"31\":1}}],[\"为了方便使用\",{\"1\":{\"470\":1}}],[\"为了演示方便\",{\"1\":{\"154\":1}}],[\"为了预防某些功能\",{\"1\":{\"29\":1}}],[\"为了防止整个系统出现雪崩\",{\"1\":{\"29\":1}}],[\"为新建的空文件夹\",{\"1\":{\"7\":1}}],[\"慢慢替换ribbon\",{\"1\":{\"28\":1}}],[\"进行更好的集成\",{\"1\":{\"470\":1}}],[\"进行依赖注入\",{\"1\":{\"460\":1}}],[\"进行抽象\",{\"1\":{\"333\":1}}],[\"进行数据转换就会很麻烦\",{\"1\":{\"299\":1}}],[\"进行自定义\",{\"1\":{\"242\":1}}],[\"进行注入\",{\"1\":{\"76\":1}}],[\"进入等待状态并释放锁\",{\"1\":{\"309\":1}}],[\"进入\",{\"1\":{\"60\":1}}],[\"进入维护阶段\",{\"1\":{\"28\":1}}],[\"进阶\",{\"1\":{\"16\":1,\"44\":1}}],[\"停用\",{\"0\":{\"129\":1}}],[\"停止更新\",{\"1\":{\"28\":1}}],[\"停更\",{\"1\":{\"27\":1}}],[\"客户端必须知晓策略间的不同\",{\"1\":{\"213\":1}}],[\"客户端代码仅与高层抽象部分进行互动\",{\"1\":{\"168\":1}}],[\"客户端不应该依赖那些它不需要的接口\",{\"1\":{\"144\":1}}],[\"客户端\",{\"1\":{\"27\":1}}],[\"对之前的x进行遮蔽\",{\"1\":{\"346\":1}}],[\"对方法拦截后对字段显示进行判断\",{\"1\":{\"334\":1}}],[\"对actuator监控所用的访问全部需要认证\",{\"1\":{\"325\":1}}],[\"对补码再求一次补码就可得该补码对应的原码\",{\"1\":{\"278\":1}}],[\"对各个region的回收价值和成本进行排序\",{\"1\":{\"268\":1}}],[\"对用户线程做一个短暂的暂停\",{\"1\":{\"268\":1}}],[\"对象是否表示数组类\",{\"1\":{\"334\":1}}],[\"对象的wait\",{\"1\":{\"309\":1}}],[\"对象流\",{\"0\":{\"302\":1}}],[\"对象必定被回收\",{\"1\":{\"260\":1}}],[\"对象存活判定算法\",{\"0\":{\"257\":1}}],[\"对象适配\",{\"1\":{\"164\":1}}],[\"对象适配器模式\",{\"0\":{\"164\":1}}],[\"对高内聚的类使用该模式可能会让代码更加复杂\",{\"1\":{\"169\":1}}],[\"对修改关闭\",{\"1\":{\"141\":1}}],[\"对接接口时抛出wsse的安全问题\",{\"1\":{\"70\":1}}],[\"对于原型模式下的bean\",{\"1\":{\"455\":1}}],[\"对于某些特殊集合\",{\"1\":{\"198\":1}}],[\"对于功能差异较大的类\",{\"1\":{\"172\":1}}],[\"对于服务数量小于上千台来说\",{\"1\":{\"31\":1}}],[\"对于非常复杂的企业级服务架构可能无法很好地\",{\"1\":{\"29\":1}}],[\"对\",{\"1\":{\"29\":1,\"357\":1}}],[\"对某些负荷会比较高的情况\",{\"1\":{\"29\":1}}],[\"对外暴露接口\",{\"1\":{\"27\":1}}],[\"对比诸如\",{\"1\":{\"14\":1}}],[\"跨域请求会先进行一次options请求\",{\"1\":{\"325\":1}}],[\"跨注册中心同步\",{\"1\":{\"27\":1}}],[\"跨平台密码管理工具\",{\"1\":{\"21\":1}}],[\"多重约束\",{\"1\":{\"427\":1}}],[\"多线程与反射\",{\"0\":{\"303\":1}}],[\"多个线程去获取锁的时候\",{\"1\":{\"236\":1}}],[\"多个线程按照申请锁的顺序去获得锁\",{\"1\":{\"236\":1}}],[\"多个扩展点\",{\"1\":{\"29\":1}}],[\"多数据中心\",{\"1\":{\"27\":1}}],[\"多版本\",{\"1\":{\"9\":1}}],[\"多版本管理器\",{\"1\":{\"9\":1}}],[\"无返回值\",{\"1\":{\"366\":1}}],[\"无法收敛的函数\",{\"1\":{\"357\":1}}],[\"无符号类型可以存储的数字范围是\",{\"1\":{\"348\":1}}],[\"无符号数表示数字只能取正数和0\",{\"1\":{\"348\":1}}],[\"无缓存\",{\"1\":{\"334\":1}}],[\"无锁虽好\",{\"1\":{\"240\":1}}],[\"无需借助额外的类和接口来保持代码简洁\",{\"1\":{\"213\":1}}],[\"无需修改已有状态类和上下文就能引入新状态\",{\"1\":{\"209\":1}}],[\"无需修改现有代码\",{\"1\":{\"197\":1}}],[\"无需更改现有代码\",{\"1\":{\"171\":1}}],[\"无需更改现有客户端代码\",{\"1\":{\"149\":1}}],[\"无论当前内存是否足够\",{\"1\":{\"270\":1}}],[\"无论任何情况下\",{\"1\":{\"270\":1}}],[\"无论白名单和黑名单\",{\"1\":{\"98\":1,\"325\":1}}],[\"无论是否存在其他空闲线程\",{\"1\":{\"242\":1}}],[\"无论是\",{\"1\":{\"92\":1}}],[\"无\",{\"1\":{\"27\":2}}],[\"有些类似\",{\"1\":{\"407\":1}}],[\"有理数和复数\",{\"0\":{\"353\":1},\"1\":{\"353\":1}}],[\"有无符号\",{\"1\":{\"348\":1}}],[\"有了\",{\"1\":{\"334\":1}}],[\"有序性\",{\"1\":{\"231\":1}}],[\"有时会遇到这样一个很麻烦的问题\",{\"1\":{\"299\":1}}],[\"有时直接更改服务类使其与其他代码兼容会更简单\",{\"1\":{\"166\":1}}],[\"有时候需要在soap头中插入信息\",{\"1\":{\"70\":1}}],[\"有严格的架构\",{\"1\":{\"116\":1}}],[\"有着相同的功能\",{\"1\":{\"94\":1}}],[\"有限的支持\",{\"1\":{\"29\":1}}],[\"有限支持\",{\"1\":{\"29\":1}}],[\"有\",{\"1\":{\"27\":2}}],[\"雪崩保护\",{\"1\":{\"27\":1}}],[\"健康检查\",{\"1\":{\"27\":1}}],[\"百万级客户使用\",{\"1\":{\"27\":1}}],[\"服务构建\",{\"1\":{\"462\":1}}],[\"服务响应可能会延迟\",{\"1\":{\"178\":1}}],[\"服务器以后\",{\"1\":{\"92\":1}}],[\"服务监控\",{\"0\":{\"36\":1}}],[\"服务总线\",{\"0\":{\"32\":1}}],[\"服务配置\",{\"0\":{\"31\":1}}],[\"服务网关=路由转发\",{\"1\":{\"30\":1}}],[\"服务网关\",{\"0\":{\"30\":1}}],[\"服务降级是从整个系统的负荷情况出发和考虑的\",{\"1\":{\"29\":1}}],[\"服务降级\",{\"1\":{\"29\":1}}],[\"服务熔断的作用类似于我们家用的保险丝\",{\"1\":{\"29\":1}}],[\"服务熔断\",{\"1\":{\"29\":1}}],[\"服务熔断与降级\",{\"0\":{\"29\":1}}],[\"服务与服务之间的调用\",{\"1\":{\"28\":1}}],[\"服务调用\",{\"0\":{\"28\":1}}],[\"服务健康检查\",{\"1\":{\"27\":1}}],[\"服务消费者\",{\"1\":{\"27\":1}}],[\"服务消费者在有需求的时候\",{\"1\":{\"27\":1}}],[\"服务提供者\",{\"1\":{\"27\":1}}],[\"服务注册中心\",{\"0\":{\"27\":1}}],[\"​\",{\"1\":{\"27\":5,\"28\":5,\"29\":3,\"30\":3,\"31\":3,\"32\":2,\"33\":2,\"184\":1,\"278\":1,\"281\":1,\"285\":1,\"286\":1,\"384\":2}}],[\"qq\",{\"1\":{\"154\":2}}],[\"qname\",{\"1\":{\"70\":2}}],[\"q\",{\"1\":{\"60\":2,\"472\":1}}],[\"q退出\",{\"1\":{\"60\":1}}],[\"qps\",{\"1\":{\"29\":1}}],[\"qatar\",{\"1\":{\"25\":1}}],[\"quits\",{\"1\":{\"472\":1}}],[\"quit\",{\"1\":{\"472\":2}}],[\"queue\",{\"0\":{\"293\":1}}],[\"question\",{\"1\":{\"25\":2}}],[\"quotefieldnames\",{\"1\":{\"98\":1,\"325\":1}}],[\"qualifier\",{\"0\":{\"79\":1},\"1\":{\"79\":1}}],[\"quartz\",{\"2\":{\"81\":1}}],[\"quartzproperties\",{\"1\":{\"76\":1}}],[\"quartzconfig\",{\"1\":{\"76\":1}}],[\"quarter\",{\"1\":{\"25\":4}}],[\"▫️\",{\"1\":{\"25\":1}}],[\"▪️\",{\"1\":{\"25\":1}}],[\"◽\",{\"1\":{\"25\":1}}],[\"◾\",{\"1\":{\"25\":1}}],[\"◻️\",{\"1\":{\"25\":1}}],[\"◼️\",{\"1\":{\"25\":1}}],[\"⬜\",{\"1\":{\"25\":1}}],[\"⬛\",{\"1\":{\"25\":1}}],[\"⚪\",{\"1\":{\"25\":1}}],[\"⚫\",{\"1\":{\"25\":1}}],[\"㊙️\",{\"1\":{\"25\":1}}],[\"㊗️\",{\"1\":{\"25\":1}}],[\"ⓜ️\",{\"1\":{\"25\":1}}],[\"ℹ️\",{\"1\":{\"25\":1}}],[\"8专门为我们提供好的用于lambda表达式的接口\",{\"1\":{\"281\":1}}],[\"89\",{\"1\":{\"279\":1}}],[\"8~+7\",{\"1\":{\"278\":1}}],[\"8了\",{\"1\":{\"278\":1}}],[\"8存在\",{\"1\":{\"278\":1}}],[\"800\",{\"1\":{\"472\":1}}],[\"80\",{\"1\":{\"92\":1,\"281\":2}}],[\"8\",{\"1\":{\"43\":2,\"60\":2,\"98\":4,\"154\":1,\"278\":1,\"279\":2,\"319\":1,\"320\":1,\"325\":4,\"360\":1,\"381\":2,\"383\":1,\"384\":1,\"474\":1}}],[\"8️⃣\",{\"1\":{\"25\":1}}],[\"8ball\",{\"1\":{\"25\":1}}],[\"360deg\",{\"1\":{\"474\":1}}],[\"3fd3333333333333\",{\"1\":{\"349\":1}}],[\"3fd3333333333334\",{\"1\":{\"349\":1}}],[\"3e99999a\",{\"1\":{\"349\":2}}],[\"32\",{\"1\":{\"349\":1}}],[\"39\",{\"1\":{\"328\":1}}],[\"34\",{\"1\":{\"279\":2}}],[\"33\",{\"1\":{\"154\":4}}],[\"3xx\",{\"0\":{\"94\":1}}],[\"3000\",{\"1\":{\"328\":2,\"472\":1}}],[\"304\",{\"1\":{\"94\":2}}],[\"303\",{\"1\":{\"94\":3}}],[\"302\",{\"1\":{\"94\":5}}],[\"307\",{\"1\":{\"93\":1,\"94\":2}}],[\"307也是临时重定向\",{\"1\":{\"93\":1}}],[\"301\",{\"1\":{\"92\":1,\"93\":1,\"94\":3}}],[\"3\",{\"1\":{\"60\":2,\"154\":1,\"240\":1,\"279\":2,\"328\":2,\"344\":1,\"349\":6,\"361\":1,\"384\":2,\"399\":9}}],[\"3️⃣\",{\"1\":{\"25\":1}}],[\"3rd\",{\"1\":{\"25\":1}}],[\"™️\",{\"1\":{\"25\":1}}],[\"®️\",{\"1\":{\"25\":1}}],[\"©️\",{\"1\":{\"25\":1}}],[\"❇️\",{\"1\":{\"25\":1}}],[\"✴️\",{\"1\":{\"25\":1}}],[\"✳️\",{\"1\":{\"25\":1}}],[\"➿\",{\"1\":{\"25\":1}}],[\"➰\",{\"1\":{\"25\":1}}],[\"❎\",{\"1\":{\"25\":1}}],[\"❌\",{\"1\":{\"25\":1}}],[\"✔️\",{\"1\":{\"25\":1}}],[\"☑️\",{\"1\":{\"25\":1}}],[\"✅\",{\"1\":{\"25\":1}}],[\"⭕\",{\"1\":{\"25\":1}}],[\"⚜️\",{\"1\":{\"25\":1}}],[\"♻️\",{\"1\":{\"25\":1}}],[\"⚕️\",{\"1\":{\"25\":1}}],[\"❗\",{\"1\":{\"25\":2}}],[\"❕\",{\"1\":{\"25\":1}}],[\"❔\",{\"1\":{\"25\":1}}],[\"❓\",{\"1\":{\"25\":1}}],[\"️⃣\",{\"1\":{\"25\":2}}],[\"️\",{\"1\":{\"25\":4}}],[\"♾️\",{\"1\":{\"25\":1}}],[\"➗\",{\"1\":{\"25\":1}}],[\"➖\",{\"1\":{\"25\":1}}],[\"➕\",{\"1\":{\"25\":1}}],[\"✖️\",{\"1\":{\"25\":1}}],[\"xyz\",{\"1\":{\"349\":12}}],[\"xss\",{\"1\":{\"254\":1}}],[\"xsd\",{\"1\":{\"70\":4}}],[\"xiaomei\",{\"1\":{\"154\":2}}],[\"xcopy\",{\"1\":{\"59\":1}}],[\"xmx最大值\",{\"1\":{\"254\":1}}],[\"xmx1g\",{\"1\":{\"43\":1}}],[\"xms最小值\",{\"1\":{\"254\":1}}],[\"xms512m\",{\"1\":{\"43\":1}}],[\"xmlns\",{\"1\":{\"70\":3}}],[\"xml\",{\"1\":{\"70\":13}}],[\"x\",{\"1\":{\"25\":2,\"28\":1,\"60\":1,\"116\":1,\"343\":2,\"346\":9,\"349\":4,\"361\":2,\"365\":3,\"366\":7,\"375\":3,\"389\":5,\"412\":3,\"418\":4,\"433\":1}}],[\"⚧️\",{\"1\":{\"25\":1}}],[\"♂️\",{\"1\":{\"25\":1}}],[\"♀️\",{\"1\":{\"25\":1}}],[\"⏏️\",{\"1\":{\"25\":1}}],[\"⏺️\",{\"1\":{\"25\":1}}],[\"⏹️\",{\"1\":{\"25\":1}}],[\"⏸️\",{\"1\":{\"25\":1}}],[\"⏬\",{\"1\":{\"25\":1}}],[\"⏫\",{\"1\":{\"25\":1}}],[\"⏮️\",{\"1\":{\"25\":1}}],[\"⏪\",{\"1\":{\"25\":1}}],[\"◀️\",{\"1\":{\"25\":1}}],[\"⏯️\",{\"1\":{\"25\":1}}],[\"⏭️\",{\"1\":{\"25\":1}}],[\"⏩\",{\"1\":{\"25\":1}}],[\"▶️\",{\"1\":{\"25\":1}}],[\"⛎\",{\"1\":{\"25\":1}}],[\"♓\",{\"1\":{\"25\":1}}],[\"♒\",{\"1\":{\"25\":1}}],[\"♑\",{\"1\":{\"25\":1}}],[\"♐\",{\"1\":{\"25\":1}}],[\"♏\",{\"1\":{\"25\":1}}],[\"♎\",{\"1\":{\"25\":1}}],[\"♍\",{\"1\":{\"25\":1}}],[\"♌\",{\"1\":{\"25\":1}}],[\"♋\",{\"1\":{\"25\":1}}],[\"♊\",{\"1\":{\"25\":1}}],[\"♉\",{\"1\":{\"25\":1}}],[\"♈\",{\"1\":{\"25\":1}}],[\"☮️\",{\"1\":{\"25\":1}}],[\"☪️\",{\"1\":{\"25\":1}}],[\"☦️\",{\"1\":{\"25\":1}}],[\"✝️\",{\"1\":{\"25\":1}}],[\"☯️\",{\"1\":{\"25\":1}}],[\"☸️\",{\"1\":{\"25\":1}}],[\"✡️\",{\"1\":{\"25\":1}}],[\"⚛️\",{\"1\":{\"25\":1}}],[\"⤵️\",{\"1\":{\"25\":1}}],[\"⤴️\",{\"1\":{\"25\":1}}],[\"↪️\",{\"1\":{\"25\":1}}],[\"↩️\",{\"1\":{\"25\":1}}],[\"↔️\",{\"1\":{\"25\":1}}],[\"↕️\",{\"1\":{\"25\":1}}],[\"↖️\",{\"1\":{\"25\":1}}],[\"⬅️\",{\"1\":{\"25\":1}}],[\"↙️\",{\"1\":{\"25\":1}}],[\"⬇️\",{\"1\":{\"25\":1}}],[\"↘️\",{\"1\":{\"25\":1}}],[\"➡️\",{\"1\":{\"25\":1}}],[\"↗️\",{\"1\":{\"25\":1}}],[\"⬆️\",{\"1\":{\"25\":1}}],[\"☣️\",{\"1\":{\"25\":1}}],[\"☢️\",{\"1\":{\"25\":1}}],[\"⛔\",{\"1\":{\"25\":1}}],[\"⚠️\",{\"1\":{\"25\":1}}],[\"♿\",{\"1\":{\"25\":1}}],[\"⚱️\",{\"1\":{\"25\":1}}],[\"⚰️\",{\"1\":{\"25\":1}}],[\"⚗️\",{\"1\":{\"25\":1}}],[\"⛓️\",{\"1\":{\"25\":1}}],[\"⚖️\",{\"1\":{\"25\":1}}],[\"⚙️\",{\"1\":{\"25\":1}}],[\"⚔️\",{\"1\":{\"25\":1}}],[\"⚒️\",{\"1\":{\"25\":1}}],[\"⛏️\",{\"1\":{\"25\":1}}],[\"✂️\",{\"1\":{\"25\":1}}],[\"✒️\",{\"1\":{\"25\":1}}],[\"✏️\",{\"1\":{\"25\":1}}],[\"✉️\",{\"1\":{\"25\":1}}],[\"⌨️\",{\"1\":{\"25\":1}}],[\"☎️\",{\"1\":{\"25\":2}}],[\"⛑️\",{\"1\":{\"25\":1}}],[\"♟️\",{\"1\":{\"25\":1}}],[\"♣️\",{\"1\":{\"25\":1}}],[\"♦️\",{\"1\":{\"25\":1}}],[\"♥️\",{\"1\":{\"25\":1}}],[\"♠️\",{\"1\":{\"25\":1}}],[\"⛸️\",{\"1\":{\"25\":1}}],[\"⛳\",{\"1\":{\"25\":1}}],[\"⚾\",{\"1\":{\"25\":1}}],[\"⚽\",{\"1\":{\"25\":1}}],[\"✨\",{\"1\":{\"25\":1}}],[\"☄️\",{\"1\":{\"25\":1}}],[\"⛄\",{\"1\":{\"25\":1}}],[\"☃️\",{\"1\":{\"25\":1}}],[\"❄️\",{\"1\":{\"25\":1}}],[\"⚡\",{\"1\":{\"25\":1}}],[\"⛱️\",{\"1\":{\"25\":1}}],[\"☔\",{\"1\":{\"25\":1}}],[\"☂️\",{\"1\":{\"25\":1}}],[\"⛈️\",{\"1\":{\"25\":1}}],[\"⛅\",{\"1\":{\"25\":1}}],[\"☁️\",{\"1\":{\"25\":1}}],[\"⭐\",{\"1\":{\"25\":1}}],[\"☀️\",{\"1\":{\"25\":1}}],[\"⏲️\",{\"1\":{\"25\":1}}],[\"⏱️\",{\"1\":{\"25\":1}}],[\"⏰\",{\"1\":{\"25\":1}}],[\"⌚\",{\"1\":{\"25\":1}}],[\"⏳\",{\"1\":{\"25\":1}}],[\"⌛\",{\"1\":{\"25\":1}}],[\"✈️\",{\"1\":{\"25\":1}}],[\"⛴️\",{\"1\":{\"25\":1}}],[\"⛵\",{\"1\":{\"25\":2}}],[\"⚓\",{\"1\":{\"25\":1}}],[\"⛽\",{\"1\":{\"25\":1}}],[\"♨️\",{\"1\":{\"25\":1}}],[\"⛺\",{\"1\":{\"25\":1}}],[\"⛲\",{\"1\":{\"25\":1}}],[\"⛩️\",{\"1\":{\"25\":1}}],[\"⛪\",{\"1\":{\"25\":1}}],[\"⛰️\",{\"1\":{\"25\":1}}],[\"☕\",{\"1\":{\"25\":1}}],[\"☘️\",{\"1\":{\"25\":1}}],[\"⛹️‍♀️\",{\"1\":{\"25\":2}}],[\"⛹️‍♂️\",{\"1\":{\"25\":2}}],[\"⛹️\",{\"1\":{\"25\":1}}],[\"⛷️\",{\"1\":{\"25\":1}}],[\"🇿🇼\",{\"1\":{\"25\":1}}],[\"🇿🇲\",{\"1\":{\"25\":1}}],[\"🇿🇦\",{\"1\":{\"25\":1}}],[\"🇾🇹\",{\"1\":{\"25\":1}}],[\"🇾🇪\",{\"1\":{\"25\":1}}],[\"🇽🇰\",{\"1\":{\"25\":1}}],[\"🇼🇸\",{\"1\":{\"25\":1}}],[\"🇼🇫\",{\"1\":{\"25\":1}}],[\"🇻🇺\",{\"1\":{\"25\":1}}],[\"🇻🇳\",{\"1\":{\"25\":1}}],[\"🇻🇮\",{\"1\":{\"25\":1}}],[\"🇻🇬\",{\"1\":{\"25\":1}}],[\"🇻🇪\",{\"1\":{\"25\":1}}],[\"🇻🇨\",{\"1\":{\"25\":1}}],[\"🇻🇦\",{\"1\":{\"25\":1}}],[\"🇺🇿\",{\"1\":{\"25\":1}}],[\"🇺🇾\",{\"1\":{\"25\":1}}],[\"🇺🇸\",{\"1\":{\"25\":1}}],[\"🇺🇳\",{\"1\":{\"25\":1}}],[\"🇺🇲\",{\"1\":{\"25\":1}}],[\"🇺🇬\",{\"1\":{\"25\":1}}],[\"🇺🇦\",{\"1\":{\"25\":1}}],[\"🇹🇿\",{\"1\":{\"25\":1}}],[\"🇹🇼\",{\"1\":{\"25\":1}}],[\"🇹🇻\",{\"1\":{\"25\":1}}],[\"🇹🇹\",{\"1\":{\"25\":1}}],[\"🇹🇷\",{\"1\":{\"25\":1}}],[\"🇹🇴\",{\"1\":{\"25\":1}}],[\"🇹🇳\",{\"1\":{\"25\":1}}],[\"🇹🇲\",{\"1\":{\"25\":1}}],[\"🇹🇱\",{\"1\":{\"25\":1}}],[\"🇹🇰\",{\"1\":{\"25\":1}}],[\"🇹🇯\",{\"1\":{\"25\":1}}],[\"🇹🇭\",{\"1\":{\"25\":1}}],[\"🇹🇬\",{\"1\":{\"25\":1}}],[\"🇹🇫\",{\"1\":{\"25\":1}}],[\"🇹🇩\",{\"1\":{\"25\":1}}],[\"🇹🇨\",{\"1\":{\"25\":1}}],[\"🇹🇦\",{\"1\":{\"25\":1}}],[\"🇸🇿\",{\"1\":{\"25\":1}}],[\"🇸🇾\",{\"1\":{\"25\":1}}],[\"🇸🇽\",{\"1\":{\"25\":1}}],[\"🇸🇻\",{\"1\":{\"25\":1}}],[\"🇸🇹\",{\"1\":{\"25\":1}}],[\"🇸🇸\",{\"1\":{\"25\":1}}],[\"🇸🇷\",{\"1\":{\"25\":1}}],[\"🇸🇴\",{\"1\":{\"25\":1}}],[\"🇸🇳\",{\"1\":{\"25\":1}}],[\"🇸🇲\",{\"1\":{\"25\":1}}],[\"🇸🇱\",{\"1\":{\"25\":1}}],[\"🇸🇰\",{\"1\":{\"25\":1}}],[\"🇸🇯\",{\"1\":{\"25\":1}}],[\"🇸🇮\",{\"1\":{\"25\":1}}],[\"🇸🇭\",{\"1\":{\"25\":1}}],[\"🇸🇬\",{\"1\":{\"25\":1}}],[\"🇸🇪\",{\"1\":{\"25\":1}}],[\"🇸🇩\",{\"1\":{\"25\":1}}],[\"🇸🇨\",{\"1\":{\"25\":1}}],[\"🇸🇧\",{\"1\":{\"25\":1}}],[\"🇸🇦\",{\"1\":{\"25\":1}}],[\"🇷🇼\",{\"1\":{\"25\":1}}],[\"🇷🇺\",{\"1\":{\"25\":1}}],[\"🇷🇸\",{\"1\":{\"25\":1}}],[\"🇷🇴\",{\"1\":{\"25\":1}}],[\"🇷🇪\",{\"1\":{\"25\":1}}],[\"🇶🇦\",{\"1\":{\"25\":1}}],[\"🇵🇾\",{\"1\":{\"25\":1}}],[\"🇵🇼\",{\"1\":{\"25\":1}}],[\"🇵🇹\",{\"1\":{\"25\":1}}],[\"🇵🇸\",{\"1\":{\"25\":1}}],[\"🇵🇷\",{\"1\":{\"25\":1}}],[\"🇵🇳\",{\"1\":{\"25\":1}}],[\"🇵🇲\",{\"1\":{\"25\":1}}],[\"🇵🇱\",{\"1\":{\"25\":1}}],[\"🇵🇰\",{\"1\":{\"25\":1}}],[\"🇵🇭\",{\"1\":{\"25\":1}}],[\"🇵🇬\",{\"1\":{\"25\":1}}],[\"🇵🇫\",{\"1\":{\"25\":1}}],[\"🇵🇪\",{\"1\":{\"25\":1}}],[\"🇵🇦\",{\"1\":{\"25\":1}}],[\"🇴🇲\",{\"1\":{\"25\":1}}],[\"🇳🇿\",{\"1\":{\"25\":1}}],[\"🇳🇺\",{\"1\":{\"25\":1}}],[\"🇳🇷\",{\"1\":{\"25\":1}}],[\"🇳🇵\",{\"1\":{\"25\":1}}],[\"🇳🇴\",{\"1\":{\"25\":1}}],[\"🇳🇱\",{\"1\":{\"25\":1}}],[\"🇳🇮\",{\"1\":{\"25\":1}}],[\"🇳🇬\",{\"1\":{\"25\":1}}],[\"🇳🇫\",{\"1\":{\"25\":1}}],[\"🇳🇪\",{\"1\":{\"25\":1}}],[\"🇳🇨\",{\"1\":{\"25\":1}}],[\"🇳🇦\",{\"1\":{\"25\":1}}],[\"🇲🇿\",{\"1\":{\"25\":1}}],[\"🇲🇾\",{\"1\":{\"25\":1}}],[\"🇲🇽\",{\"1\":{\"25\":1}}],[\"🇲🇼\",{\"1\":{\"25\":1}}],[\"🇲🇻\",{\"1\":{\"25\":1}}],[\"🇲🇺\",{\"1\":{\"25\":1}}],[\"🇲🇹\",{\"1\":{\"25\":1}}],[\"🇲🇸\",{\"1\":{\"25\":1}}],[\"🇲🇷\",{\"1\":{\"25\":1}}],[\"🇲🇶\",{\"1\":{\"25\":1}}],[\"🇲🇵\",{\"1\":{\"25\":1}}],[\"🇲🇴\",{\"1\":{\"25\":1}}],[\"🇲🇳\",{\"1\":{\"25\":1}}],[\"🇲🇲\",{\"1\":{\"25\":1}}],[\"🇲🇱\",{\"1\":{\"25\":1}}],[\"🇲🇰\",{\"1\":{\"25\":1}}],[\"🇲🇭\",{\"1\":{\"25\":1}}],[\"🇲🇬\",{\"1\":{\"25\":1}}],[\"🇲🇫\",{\"1\":{\"25\":1}}],[\"🇲🇪\",{\"1\":{\"25\":1}}],[\"🇲🇩\",{\"1\":{\"25\":1}}],[\"🇲🇨\",{\"1\":{\"25\":1}}],[\"🇲🇦\",{\"1\":{\"25\":1}}],[\"🇱🇾\",{\"1\":{\"25\":1}}],[\"🇱🇻\",{\"1\":{\"25\":1}}],[\"🇱🇺\",{\"1\":{\"25\":1}}],[\"🇱🇹\",{\"1\":{\"25\":1}}],[\"🇱🇸\",{\"1\":{\"25\":1}}],[\"🇱🇷\",{\"1\":{\"25\":1}}],[\"🇱🇰\",{\"1\":{\"25\":1}}],[\"🇱🇮\",{\"1\":{\"25\":1}}],[\"🇱🇨\",{\"1\":{\"25\":1}}],[\"🇱🇧\",{\"1\":{\"25\":1}}],[\"🇱🇦\",{\"1\":{\"25\":1}}],[\"🇰🇿\",{\"1\":{\"25\":1}}],[\"🇰🇾\",{\"1\":{\"25\":1}}],[\"🇰🇼\",{\"1\":{\"25\":1}}],[\"🇰🇷\",{\"1\":{\"25\":1}}],[\"🇰🇵\",{\"1\":{\"25\":1}}],[\"🇰🇳\",{\"1\":{\"25\":1}}],[\"🇰🇲\",{\"1\":{\"25\":1}}],[\"🇰🇮\",{\"1\":{\"25\":1}}],[\"🇰🇭\",{\"1\":{\"25\":1}}],[\"🇰🇬\",{\"1\":{\"25\":1}}],[\"🇰🇪\",{\"1\":{\"25\":1}}],[\"🇯🇵\",{\"1\":{\"25\":1}}],[\"🇯🇴\",{\"1\":{\"25\":1}}],[\"🇯🇲\",{\"1\":{\"25\":1}}],[\"🇯🇪\",{\"1\":{\"25\":1}}],[\"🇮🇹\",{\"1\":{\"25\":1}}],[\"🇮🇸\",{\"1\":{\"25\":1}}],[\"🇮🇷\",{\"1\":{\"25\":1}}],[\"🇮🇶\",{\"1\":{\"25\":1}}],[\"🇮🇴\",{\"1\":{\"25\":1}}],[\"🇮🇳\",{\"1\":{\"25\":1}}],[\"🇮🇲\",{\"1\":{\"25\":1}}],[\"🇮🇱\",{\"1\":{\"25\":1}}],[\"🇮🇪\",{\"1\":{\"25\":1}}],[\"🇮🇩\",{\"1\":{\"25\":1}}],[\"🇮🇨\",{\"1\":{\"25\":1}}],[\"🇭🇺\",{\"1\":{\"25\":1}}],[\"🇭🇹\",{\"1\":{\"25\":1}}],[\"🇭🇷\",{\"1\":{\"25\":1}}],[\"🇭🇳\",{\"1\":{\"25\":1}}],[\"🇭🇲\",{\"1\":{\"25\":1}}],[\"🇭🇰\",{\"1\":{\"25\":1}}],[\"🇬🇾\",{\"1\":{\"25\":1}}],[\"🇬🇼\",{\"1\":{\"25\":1}}],[\"🇬🇺\",{\"1\":{\"25\":1}}],[\"🇬🇹\",{\"1\":{\"25\":1}}],[\"🇬🇸\",{\"1\":{\"25\":1}}],[\"🇬🇷\",{\"1\":{\"25\":1}}],[\"🇬🇶\",{\"1\":{\"25\":1}}],[\"🇬🇵\",{\"1\":{\"25\":1}}],[\"🇬🇳\",{\"1\":{\"25\":1}}],[\"🇬🇲\",{\"1\":{\"25\":1}}],[\"🇬🇱\",{\"1\":{\"25\":1}}],[\"🇬🇮\",{\"1\":{\"25\":1}}],[\"🇬🇭\",{\"1\":{\"25\":1}}],[\"🇬🇬\",{\"1\":{\"25\":1}}],[\"🇬🇫\",{\"1\":{\"25\":1}}],[\"🇬🇪\",{\"1\":{\"25\":1}}],[\"🇬🇩\",{\"1\":{\"25\":1}}],[\"🇬🇧\",{\"1\":{\"25\":2}}],[\"🇬🇦\",{\"1\":{\"25\":1}}],[\"🇫🇷\",{\"1\":{\"25\":1}}],[\"🇫🇴\",{\"1\":{\"25\":1}}],[\"🇫🇲\",{\"1\":{\"25\":1}}],[\"🇫🇰\",{\"1\":{\"25\":1}}],[\"🇫🇯\",{\"1\":{\"25\":1}}],[\"🇫🇮\",{\"1\":{\"25\":1}}],[\"🇪🇺\",{\"1\":{\"25\":2}}],[\"🇪🇹\",{\"1\":{\"25\":1}}],[\"🇪🇸\",{\"1\":{\"25\":1}}],[\"🇪🇷\",{\"1\":{\"25\":1}}],[\"🇪🇭\",{\"1\":{\"25\":1}}],[\"🇪🇬\",{\"1\":{\"25\":1}}],[\"🇪🇪\",{\"1\":{\"25\":1}}],[\"🇪🇨\",{\"1\":{\"25\":1}}],[\"🇪🇦\",{\"1\":{\"25\":1}}],[\"🇩🇿\",{\"1\":{\"25\":1}}],[\"🇩🇴\",{\"1\":{\"25\":1}}],[\"🇩🇲\",{\"1\":{\"25\":1}}],[\"🇩🇰\",{\"1\":{\"25\":1}}],[\"🇩🇯\",{\"1\":{\"25\":1}}],[\"🇩🇬\",{\"1\":{\"25\":1}}],[\"🇩🇪\",{\"1\":{\"25\":1}}],[\"🇨🇿\",{\"1\":{\"25\":1}}],[\"🇨🇾\",{\"1\":{\"25\":1}}],[\"🇨🇽\",{\"1\":{\"25\":1}}],[\"🇨🇼\",{\"1\":{\"25\":1}}],[\"🇨🇻\",{\"1\":{\"25\":1}}],[\"🇨🇺\",{\"1\":{\"25\":1}}],[\"🇨🇷\",{\"1\":{\"25\":1}}],[\"🇨🇵\",{\"1\":{\"25\":1}}],[\"🇨🇴\",{\"1\":{\"25\":1}}],[\"🇨🇳\",{\"1\":{\"25\":1}}],[\"🇨🇲\",{\"1\":{\"25\":1}}],[\"🇨🇱\",{\"1\":{\"25\":1}}],[\"🇨🇰\",{\"1\":{\"25\":1}}],[\"🇨🇮\",{\"1\":{\"25\":1}}],[\"🇨🇭\",{\"1\":{\"25\":1}}],[\"🇨🇬\",{\"1\":{\"25\":1}}],[\"🇨🇫\",{\"1\":{\"25\":1}}],[\"🇨🇩\",{\"1\":{\"25\":1}}],[\"🇨🇨\",{\"1\":{\"25\":1}}],[\"🇨🇦\",{\"1\":{\"25\":1}}],[\"🇧🇿\",{\"1\":{\"25\":1}}],[\"🇧🇾\",{\"1\":{\"25\":1}}],[\"🇧🇼\",{\"1\":{\"25\":1}}],[\"🇧🇻\",{\"1\":{\"25\":1}}],[\"🇧🇹\",{\"1\":{\"25\":1}}],[\"🇧🇸\",{\"1\":{\"25\":1}}],[\"🇧🇷\",{\"1\":{\"25\":1}}],[\"🇧🇶\",{\"1\":{\"25\":1}}],[\"🇧🇴\",{\"1\":{\"25\":1}}],[\"🇧🇳\",{\"1\":{\"25\":1}}],[\"🇧🇲\",{\"1\":{\"25\":1}}],[\"🇧🇱\",{\"1\":{\"25\":1}}],[\"🇧🇯\",{\"1\":{\"25\":1}}],[\"🇧🇮\",{\"1\":{\"25\":1}}],[\"🇧🇭\",{\"1\":{\"25\":1}}],[\"🇧🇬\",{\"1\":{\"25\":1}}],[\"🇧🇫\",{\"1\":{\"25\":1}}],[\"🇧🇪\",{\"1\":{\"25\":1}}],[\"🇧🇩\",{\"1\":{\"25\":1}}],[\"🇧🇧\",{\"1\":{\"25\":1}}],[\"🇧🇦\",{\"1\":{\"25\":1}}],[\"🇦🇿\",{\"1\":{\"25\":1}}],[\"🇦🇽\",{\"1\":{\"25\":1}}],[\"🇦🇼\",{\"1\":{\"25\":1}}],[\"🇦🇺\",{\"1\":{\"25\":1}}],[\"🇦🇹\",{\"1\":{\"25\":1}}],[\"🇦🇸\",{\"1\":{\"25\":1}}],[\"🇦🇷\",{\"1\":{\"25\":1}}],[\"🇦🇶\",{\"1\":{\"25\":1}}],[\"🇦🇴\",{\"1\":{\"25\":1}}],[\"🇦🇲\",{\"1\":{\"25\":1}}],[\"🇦🇱\",{\"1\":{\"25\":1}}],[\"🇦🇮\",{\"1\":{\"25\":1}}],[\"🇦🇬\",{\"1\":{\"25\":1}}],[\"🇦🇫\",{\"1\":{\"25\":1}}],[\"🇦🇪\",{\"1\":{\"25\":1}}],[\"🇦🇩\",{\"1\":{\"25\":1}}],[\"🇦🇨\",{\"1\":{\"25\":1}}],[\"🏳️‍⚧️\",{\"1\":{\"25\":1}}],[\"🏳️‍🌈\",{\"1\":{\"25\":1}}],[\"🏳️\",{\"1\":{\"25\":1}}],[\"🏴󠁧󠁢󠁷󠁬󠁳󠁿\",{\"1\":{\"25\":1}}],[\"🏴󠁧󠁢󠁳󠁣󠁴󠁿\",{\"1\":{\"25\":1}}],[\"🏴󠁧󠁢󠁥󠁮󠁧󠁿\",{\"1\":{\"25\":1}}],[\"🏴‍☠️\",{\"1\":{\"25\":1}}],[\"🏴\",{\"1\":{\"25\":1}}],[\"🎌\",{\"1\":{\"25\":1}}],[\"🏁\",{\"1\":{\"25\":1}}],[\"🈵\",{\"1\":{\"25\":1}}],[\"🉑\",{\"1\":{\"25\":1}}],[\"🉐\",{\"1\":{\"25\":1}}],[\"🈂️\",{\"1\":{\"25\":1}}],[\"🈁\",{\"1\":{\"25\":1}}],[\"🆚\",{\"1\":{\"25\":1}}],[\"🆙\",{\"1\":{\"25\":1}}],[\"🆘\",{\"1\":{\"25\":1}}],[\"🅿️\",{\"1\":{\"25\":1}}],[\"🆗\",{\"1\":{\"25\":1}}],[\"🅾️\",{\"1\":{\"25\":1}}],[\"🆖\",{\"1\":{\"25\":1}}],[\"🆕\",{\"1\":{\"25\":1}}],[\"🆔\",{\"1\":{\"25\":1}}],[\"🆓\",{\"1\":{\"25\":1}}],[\"🆒\",{\"1\":{\"25\":1}}],[\"🆑\",{\"1\":{\"25\":1}}],[\"🅱️\",{\"1\":{\"25\":1}}],[\"🆎\",{\"1\":{\"25\":1}}],[\"🅰️\",{\"1\":{\"25\":1}}],[\"🎦\",{\"1\":{\"25\":1}}],[\"🏧\",{\"1\":{\"25\":1}}],[\"🏹\",{\"1\":{\"25\":1}}],[\"🏷️\",{\"1\":{\"25\":1}}],[\"🏮\",{\"1\":{\"25\":2}}],[\"🎬\",{\"1\":{\"25\":1}}],[\"🎞️\",{\"1\":{\"25\":1}}],[\"🎥\",{\"1\":{\"25\":1}}],[\"🎻\",{\"1\":{\"25\":1}}],[\"🎺\",{\"1\":{\"25\":1}}],[\"🎹\",{\"1\":{\"25\":1}}],[\"🎸\",{\"1\":{\"25\":1}}],[\"🎷\",{\"1\":{\"25\":1}}],[\"🎧\",{\"1\":{\"25\":1}}],[\"🎤\",{\"1\":{\"25\":1}}],[\"🎛️\",{\"1\":{\"25\":1}}],[\"🎚️\",{\"1\":{\"25\":1}}],[\"🎙️\",{\"1\":{\"25\":1}}],[\"🎶\",{\"1\":{\"25\":1}}],[\"🎵\",{\"1\":{\"25\":1}}],[\"🎼\",{\"1\":{\"25\":1}}],[\"🎓\",{\"1\":{\"25\":1}}],[\"🎩\",{\"1\":{\"25\":1}}],[\"🎒\",{\"1\":{\"25\":1}}],[\"🎨\",{\"1\":{\"25\":1}}],[\"🎭\",{\"1\":{\"25\":1}}],[\"🎴\",{\"1\":{\"25\":1}}],[\"🀄\",{\"1\":{\"25\":1}}],[\"🃏\",{\"1\":{\"25\":1}}],[\"🎲\",{\"1\":{\"25\":1}}],[\"🎰\",{\"1\":{\"25\":1}}],[\"🎮\",{\"1\":{\"25\":1}}],[\"🎱\",{\"1\":{\"25\":1}}],[\"🎯\",{\"1\":{\"25\":1}}],[\"🎿\",{\"1\":{\"25\":1}}],[\"🎽\",{\"1\":{\"25\":1}}],[\"🎣\",{\"1\":{\"25\":1}}],[\"🏸\",{\"1\":{\"25\":1}}],[\"🏓\",{\"1\":{\"25\":1}}],[\"🏒\",{\"1\":{\"25\":1}}],[\"🏑\",{\"1\":{\"25\":1}}],[\"🏏\",{\"1\":{\"25\":1}}],[\"🎳\",{\"1\":{\"25\":1}}],[\"🎾\",{\"1\":{\"25\":1}}],[\"🏉\",{\"1\":{\"25\":1}}],[\"🏈\",{\"1\":{\"25\":1}}],[\"🏐\",{\"1\":{\"25\":1}}],[\"🏀\",{\"1\":{\"25\":1}}],[\"🏅\",{\"1\":{\"25\":1}}],[\"🏆\",{\"1\":{\"25\":1}}],[\"🎖️\",{\"1\":{\"25\":1}}],[\"🎫\",{\"1\":{\"25\":1}}],[\"🎟️\",{\"1\":{\"25\":1}}],[\"🎗️\",{\"1\":{\"25\":1}}],[\"🎁\",{\"1\":{\"25\":1}}],[\"🎀\",{\"1\":{\"25\":1}}],[\"🎑\",{\"1\":{\"25\":1}}],[\"🎐\",{\"1\":{\"25\":1}}],[\"🎏\",{\"1\":{\"25\":1}}],[\"🎎\",{\"1\":{\"25\":1}}],[\"🎍\",{\"1\":{\"25\":1}}],[\"🎋\",{\"1\":{\"25\":1}}],[\"🎊\",{\"1\":{\"25\":1}}],[\"🎉\",{\"1\":{\"25\":1}}],[\"🎈\",{\"1\":{\"25\":1}}],[\"🎇\",{\"1\":{\"25\":1}}],[\"🎆\",{\"1\":{\"25\":1}}],[\"🎄\",{\"1\":{\"25\":1}}],[\"🎃\",{\"1\":{\"25\":1}}],[\"🌊\",{\"1\":{\"25\":1}}],[\"🌂\",{\"1\":{\"25\":1}}],[\"🌈\",{\"1\":{\"25\":1}}],[\"🌀\",{\"1\":{\"25\":1}}],[\"🌬️\",{\"1\":{\"25\":1}}],[\"🌫️\",{\"1\":{\"25\":1}}],[\"🌪️\",{\"1\":{\"25\":1}}],[\"🌩️\",{\"1\":{\"25\":1}}],[\"🌨️\",{\"1\":{\"25\":1}}],[\"🌧️\",{\"1\":{\"25\":1}}],[\"🌦️\",{\"1\":{\"25\":1}}],[\"🌥️\",{\"1\":{\"25\":1}}],[\"🌤️\",{\"1\":{\"25\":1}}],[\"🌌\",{\"1\":{\"25\":1}}],[\"🌠\",{\"1\":{\"25\":1}}],[\"🌟\",{\"1\":{\"25\":1}}],[\"🌞\",{\"1\":{\"25\":1}}],[\"🌝\",{\"1\":{\"25\":1}}],[\"🌡️\",{\"1\":{\"25\":1}}],[\"🌜\",{\"1\":{\"25\":1}}],[\"🌛\",{\"1\":{\"25\":1}}],[\"🌚\",{\"1\":{\"25\":1}}],[\"🌙\",{\"1\":{\"25\":1}}],[\"🌘\",{\"1\":{\"25\":1}}],[\"🌗\",{\"1\":{\"25\":1}}],[\"🌖\",{\"1\":{\"25\":1}}],[\"🌕\",{\"1\":{\"25\":1}}],[\"🌔\",{\"1\":{\"25\":2}}],[\"🌓\",{\"1\":{\"25\":1}}],[\"🌒\",{\"1\":{\"25\":1}}],[\"🌑\",{\"1\":{\"25\":1}}],[\"🏍️\",{\"1\":{\"25\":1}}],[\"🏎️\",{\"1\":{\"25\":1}}],[\"🎪\",{\"1\":{\"25\":1}}],[\"🎢\",{\"1\":{\"25\":1}}],[\"🎡\",{\"1\":{\"25\":1}}],[\"🎠\",{\"1\":{\"25\":1}}],[\"🌉\",{\"1\":{\"25\":1}}],[\"🌇\",{\"1\":{\"25\":1}}],[\"🌆\",{\"1\":{\"25\":1}}],[\"🌅\",{\"1\":{\"25\":1}}],[\"🌄\",{\"1\":{\"25\":1}}],[\"🏙️\",{\"1\":{\"25\":1}}],[\"🌃\",{\"1\":{\"25\":1}}],[\"🌁\",{\"1\":{\"25\":1}}],[\"🏰\",{\"1\":{\"25\":1}}],[\"🏯\",{\"1\":{\"25\":1}}],[\"🏭\",{\"1\":{\"25\":1}}],[\"🏬\",{\"1\":{\"25\":1}}],[\"🏫\",{\"1\":{\"25\":1}}],[\"🏪\",{\"1\":{\"25\":1}}],[\"🏩\",{\"1\":{\"25\":1}}],[\"🏨\",{\"1\":{\"25\":1}}],[\"🏦\",{\"1\":{\"25\":1}}],[\"🏥\",{\"1\":{\"25\":1}}],[\"🏤\",{\"1\":{\"25\":1}}],[\"🏣\",{\"1\":{\"25\":1}}],[\"🏢\",{\"1\":{\"25\":1}}],[\"🏡\",{\"1\":{\"25\":1}}],[\"🏠\",{\"1\":{\"25\":1}}],[\"🏚️\",{\"1\":{\"25\":1}}],[\"🏘️\",{\"1\":{\"25\":1}}],[\"🏗️\",{\"1\":{\"25\":1}}],[\"🏛️\",{\"1\":{\"25\":1}}],[\"🏟️\",{\"1\":{\"25\":1}}],[\"🏞️\",{\"1\":{\"25\":1}}],[\"🏝️\",{\"1\":{\"25\":1}}],[\"🏜️\",{\"1\":{\"25\":1}}],[\"🏖️\",{\"1\":{\"25\":1}}],[\"🏕️\",{\"1\":{\"25\":1}}],[\"🌋\",{\"1\":{\"25\":1}}],[\"🏔️\",{\"1\":{\"25\":1}}],[\"🌐\",{\"1\":{\"25\":1}}],[\"🌏\",{\"1\":{\"25\":1}}],[\"🌎\",{\"1\":{\"25\":1}}],[\"🌍\",{\"1\":{\"25\":1}}],[\"🏺\",{\"1\":{\"25\":1}}],[\"🍴\",{\"1\":{\"25\":1}}],[\"🍽️\",{\"1\":{\"25\":1}}],[\"🍻\",{\"1\":{\"25\":1}}],[\"🍺\",{\"1\":{\"25\":1}}],[\"🍹\",{\"1\":{\"25\":1}}],[\"🍸\",{\"1\":{\"25\":1}}],[\"🍷\",{\"1\":{\"25\":1}}],[\"🍾\",{\"1\":{\"25\":1}}],[\"🍶\",{\"1\":{\"25\":1}}],[\"🍵\",{\"1\":{\"25\":1}}],[\"🍼\",{\"1\":{\"25\":1}}],[\"🍯\",{\"1\":{\"25\":1}}],[\"🍮\",{\"1\":{\"25\":1}}],[\"🍭\",{\"1\":{\"25\":1}}],[\"🍬\",{\"1\":{\"25\":1}}],[\"🍫\",{\"1\":{\"25\":1}}],[\"🍰\",{\"1\":{\"25\":1}}],[\"🎂\",{\"1\":{\"25\":1}}],[\"🍪\",{\"1\":{\"25\":1}}],[\"🍩\",{\"1\":{\"25\":1}}],[\"🍨\",{\"1\":{\"25\":1}}],[\"🍧\",{\"1\":{\"25\":1}}],[\"🍦\",{\"1\":{\"25\":1}}],[\"🍡\",{\"1\":{\"25\":1}}],[\"🍥\",{\"1\":{\"25\":1}}],[\"🍤\",{\"1\":{\"25\":1}}],[\"🍣\",{\"1\":{\"25\":1}}],[\"🍢\",{\"1\":{\"25\":1}}],[\"🍠\",{\"1\":{\"25\":1}}],[\"🍝\",{\"1\":{\"25\":1}}],[\"🍜\",{\"1\":{\"25\":1}}],[\"🍛\",{\"1\":{\"25\":1}}],[\"🍚\",{\"1\":{\"25\":1}}],[\"🍙\",{\"1\":{\"25\":1}}],[\"🍘\",{\"1\":{\"25\":1}}],[\"🍱\",{\"1\":{\"25\":1}}],[\"🍿\",{\"1\":{\"25\":1}}],[\"🍲\",{\"1\":{\"25\":1}}],[\"🍳\",{\"1\":{\"25\":1}}],[\"🌯\",{\"1\":{\"25\":1}}],[\"🌮\",{\"1\":{\"25\":1}}],[\"🌭\",{\"1\":{\"25\":1}}],[\"🍕\",{\"1\":{\"25\":1}}],[\"🍟\",{\"1\":{\"25\":1}}],[\"🍔\",{\"1\":{\"25\":1}}],[\"🍗\",{\"1\":{\"25\":1}}],[\"🍖\",{\"1\":{\"25\":1}}],[\"🍞\",{\"1\":{\"25\":1}}],[\"🌰\",{\"1\":{\"25\":1}}],[\"🍄\",{\"1\":{\"25\":1}}],[\"🌶️\",{\"1\":{\"25\":1}}],[\"🌽\",{\"1\":{\"25\":1}}],[\"🍆\",{\"1\":{\"25\":1}}],[\"🍅\",{\"1\":{\"25\":1}}],[\"🍓\",{\"1\":{\"25\":1}}],[\"🍒\",{\"1\":{\"25\":1}}],[\"🍑\",{\"1\":{\"25\":1}}],[\"🍐\",{\"1\":{\"25\":1}}],[\"🍏\",{\"1\":{\"25\":1}}],[\"🍎\",{\"1\":{\"25\":1}}],[\"🍍\",{\"1\":{\"25\":1}}],[\"🍌\",{\"1\":{\"25\":1}}],[\"🍋\",{\"1\":{\"25\":1}}],[\"🍊\",{\"1\":{\"25\":3}}],[\"🍉\",{\"1\":{\"25\":1}}],[\"🍈\",{\"1\":{\"25\":1}}],[\"🍇\",{\"1\":{\"25\":1}}],[\"🍃\",{\"1\":{\"25\":1}}],[\"🍂\",{\"1\":{\"25\":1}}],[\"🍁\",{\"1\":{\"25\":1}}],[\"🍀\",{\"1\":{\"25\":1}}],[\"🌿\",{\"1\":{\"25\":1}}],[\"🌾\",{\"1\":{\"25\":1}}],[\"🌵\",{\"1\":{\"25\":1}}],[\"🌴\",{\"1\":{\"25\":1}}],[\"🌳\",{\"1\":{\"25\":1}}],[\"🌲\",{\"1\":{\"25\":1}}],[\"🌱\",{\"1\":{\"25\":1}}],[\"🌷\",{\"1\":{\"25\":1}}],[\"🌼\",{\"1\":{\"25\":1}}],[\"🌻\",{\"1\":{\"25\":1}}],[\"🌺\",{\"1\":{\"25\":1}}],[\"🌹\",{\"1\":{\"25\":1}}],[\"🏵️\",{\"1\":{\"25\":1}}],[\"🌸\",{\"1\":{\"25\":1}}],[\"🏋️‍♀️\",{\"1\":{\"25\":1}}],[\"🏋️‍♂️\",{\"1\":{\"25\":1}}],[\"🏋️\",{\"1\":{\"25\":1}}],[\"🏊‍♀️\",{\"1\":{\"25\":1}}],[\"🏊‍♂️\",{\"1\":{\"25\":1}}],[\"🏊\",{\"1\":{\"25\":1}}],[\"🏄‍♀️\",{\"1\":{\"25\":1}}],[\"🏄‍♂️\",{\"1\":{\"25\":1}}],[\"🏄\",{\"1\":{\"25\":1}}],[\"🏌️‍♀️\",{\"1\":{\"25\":1}}],[\"🏌️‍♂️\",{\"1\":{\"25\":1}}],[\"🏌️\",{\"1\":{\"25\":1}}],[\"🏂\",{\"1\":{\"25\":1}}],[\"🏇\",{\"1\":{\"25\":1}}],[\"🏃‍♀️\",{\"1\":{\"25\":1}}],[\"🏃‍♂️\",{\"1\":{\"25\":1}}],[\"🏃\",{\"1\":{\"25\":2}}],[\"🎅\",{\"1\":{\"25\":1}}],[\"✍️\",{\"1\":{\"25\":1}}],[\"✊\",{\"1\":{\"25\":2}}],[\"☝️\",{\"1\":{\"25\":1}}],[\"2vmin\",{\"1\":{\"474\":1}}],[\"2一直增加到到a\",{\"1\":{\"399\":1}}],[\"282c34\",{\"1\":{\"474\":1}}],[\"28\",{\"1\":{\"348\":1}}],[\"27\",{\"1\":{\"348\":2}}],[\"27810\",{\"1\":{\"60\":1}}],[\"2n\",{\"1\":{\"348\":3}}],[\"2nd\",{\"1\":{\"25\":1}}],[\"2打印\",{\"1\":{\"306\":2}}],[\"29665317\",{\"1\":{\"484\":1}}],[\"29\",{\"1\":{\"154\":1}}],[\"26\",{\"1\":{\"154\":2}}],[\"2版本\",{\"1\":{\"83\":1}}],[\"256\",{\"1\":{\"348\":1}}],[\"255\",{\"1\":{\"348\":2}}],[\"25\",{\"1\":{\"60\":1}}],[\"24\",{\"1\":{\"60\":1}}],[\"23\",{\"1\":{\"60\":1,\"154\":2}}],[\"22\",{\"1\":{\"60\":1}}],[\"21\",{\"1\":{\"60\":1,\"279\":2}}],[\"20s\",{\"1\":{\"474\":1}}],[\"2022\",{\"1\":{\"218\":1}}],[\"2021\",{\"1\":{\"59\":1}}],[\"2019\",{\"1\":{\"154\":1}}],[\"2001\",{\"1\":{\"154\":2}}],[\"200401\",{\"1\":{\"70\":6}}],[\"2004\",{\"1\":{\"70\":6}}],[\"20\",{\"1\":{\"60\":1,\"76\":1}}],[\"2048\",{\"1\":{\"51\":1}}],[\"2️⃣\",{\"1\":{\"25\":1}}],[\"2\",{\"0\":{\"135\":1},\"1\":{\"25\":1,\"30\":1,\"60\":5,\"99\":1,\"154\":1,\"240\":2,\"243\":2,\"279\":4,\"328\":1,\"344\":3,\"346\":1,\"349\":11,\"389\":1,\"399\":2,\"412\":1,\"434\":2,\"472\":1}}],[\"✌️\",{\"1\":{\"25\":1}}],[\"✋\",{\"1\":{\"25\":2}}],[\"❤️\",{\"1\":{\"25\":1}}],[\"❣️\",{\"1\":{\"25\":1}}],[\"☠️\",{\"1\":{\"25\":1}}],[\"☹️\",{\"1\":{\"25\":1}}],[\"o<t>\",{\"1\":{\"334\":2}}],[\"o1\",{\"1\":{\"309\":5}}],[\"o操作的并不是bufferedinputstream\",{\"1\":{\"298\":1}}],[\"o设备的速度一般都达不到内存的读取速度\",{\"1\":{\"298\":1}}],[\"o设备去获取数据\",{\"1\":{\"298\":1}}],[\"obj\",{\"1\":{\"270\":1,\"334\":3}}],[\"object类还有三个方法我们从来没有使用过\",{\"1\":{\"309\":1}}],[\"objectoutputstream\",{\"1\":{\"302\":1}}],[\"objectoutputstream不仅支持基本数据类型\",{\"1\":{\"302\":1}}],[\"objectinputstream\",{\"1\":{\"302\":1}}],[\"objects\",{\"1\":{\"281\":6}}],[\"object\",{\"1\":{\"70\":1,\"76\":2,\"270\":2,\"281\":4,\"309\":2,\"334\":6}}],[\"other\",{\"1\":{\"94\":1,\"281\":6,\"420\":3,\"472\":1}}],[\"otter\",{\"1\":{\"25\":1}}],[\"oasis\",{\"1\":{\"70\":12}}],[\"o2\",{\"1\":{\"25\":1}}],[\"option<\",{\"1\":{\"434\":1,\"441\":1}}],[\"option<t>\",{\"1\":{\"416\":1}}],[\"option\",{\"0\":{\"415\":1}}],[\"optional\",{\"1\":{\"154\":2}}],[\"options\",{\"1\":{\"54\":1,\"325\":1}}],[\"opt\",{\"1\":{\"43\":18,\"60\":5,\"134\":2}}],[\"opts\",{\"1\":{\"43\":2}}],[\"opts=\",{\"1\":{\"43\":1}}],[\"ophiuchus\",{\"1\":{\"25\":1}}],[\"opendevtools\",{\"1\":{\"472\":1}}],[\"openjdk\",{\"1\":{\"134\":2}}],[\"openmetrics\",{\"1\":{\"98\":1,\"325\":1}}],[\"openfeign\",{\"1\":{\"28\":1}}],[\"open\",{\"1\":{\"25\":5,\"70\":6,\"472\":4,\"474\":2}}],[\"orderservice\",{\"1\":{\"244\":1}}],[\"orderid\",{\"1\":{\"244\":3}}],[\"orelse\",{\"1\":{\"154\":2}}],[\"org\",{\"1\":{\"70\":6,\"466\":1}}],[\"or\",{\"1\":{\"25\":1,\"281\":1,\"325\":1,\"366\":2}}],[\"orthodox\",{\"1\":{\"25\":1}}],[\"orangutan\",{\"1\":{\"25\":1}}],[\"orange\",{\"1\":{\"25\":7}}],[\"oman\",{\"1\":{\"25\":1}}],[\"om\",{\"1\":{\"25\":1}}],[\"o\",{\"1\":{\"25\":2,\"51\":2,\"60\":2,\"334\":8}}],[\"occurs\",{\"1\":{\"472\":1}}],[\"ocean\",{\"1\":{\"25\":2}}],[\"octopus\",{\"1\":{\"25\":1}}],[\"oil\",{\"1\":{\"25\":1}}],[\"oyster\",{\"1\":{\"25\":1}}],[\"oden\",{\"1\":{\"25\":1}}],[\"onclick=\",{\"1\":{\"474\":1}}],[\"oncoming\",{\"1\":{\"25\":5}}],[\"only\",{\"1\":{\"472\":1}}],[\"oneclick\",{\"1\":{\"476\":2}}],[\"one\",{\"1\":{\"25\":3,\"389\":1,\"399\":2}}],[\"on\",{\"1\":{\"25\":4,\"54\":2,\"83\":1,\"104\":1,\"328\":1,\"472\":6,\"474\":1}}],[\"onion\",{\"1\":{\"25\":1}}],[\"old\",{\"1\":{\"25\":1,\"54\":1}}],[\"older\",{\"1\":{\"25\":3}}],[\"olive\",{\"1\":{\"25\":1}}],[\"owl\",{\"1\":{\"25\":1}}],[\"ox\",{\"1\":{\"25\":1}}],[\"ok\",{\"1\":{\"25\":5,\"334\":1}}],[\"ofnullable\",{\"1\":{\"154\":2}}],[\"off\",{\"1\":{\"25\":1}}],[\"officer\",{\"1\":{\"25\":1}}],[\"office\",{\"1\":{\"25\":6}}],[\"of\",{\"1\":{\"25\":11,\"154\":2,\"325\":1,\"346\":2,\"361\":1,\"365\":2,\"366\":1,\"384\":1,\"389\":2,\"455\":1,\"472\":2}}],[\"ogre\",{\"1\":{\"25\":1}}],[\"overflowing\",{\"1\":{\"348\":1}}],[\"overrides\",{\"0\":{\"470\":1}}],[\"override\",{\"1\":{\"73\":2,\"76\":1,\"98\":1,\"243\":1,\"319\":1,\"325\":1}}],[\"over\",{\"1\":{\"25\":2}}],[\"output\",{\"1\":{\"476\":1}}],[\"outputstreamwriter\",{\"1\":{\"299\":3}}],[\"outdir\",{\"1\":{\"472\":1}}],[\"outbound\",{\"1\":{\"70\":2}}],[\"outboundproperty\",{\"1\":{\"70\":3}}],[\"outbox\",{\"1\":{\"25\":1}}],[\"outofmemory\",{\"1\":{\"70\":4}}],[\"outlying\",{\"1\":{\"25\":1}}],[\"out\",{\"1\":{\"25\":3,\"70\":8,\"235\":4,\"240\":1,\"243\":2,\"279\":1,\"281\":13,\"298\":1,\"299\":1,\"305\":1,\"306\":12,\"309\":4,\"312\":1}}],[\"yrm\",{\"1\":{\"466\":1}}],[\"yml\",{\"1\":{\"328\":2}}],[\"yield\",{\"1\":{\"306\":1}}],[\"yin\",{\"1\":{\"25\":1}}],[\"yyyy\",{\"1\":{\"98\":1,\"325\":1}}],[\"yy复制\",{\"1\":{\"60\":1}}],[\"y\",{\"1\":{\"49\":1,\"361\":3,\"365\":3,\"375\":2,\"389\":3,\"418\":4}}],[\"yes\",{\"1\":{\"104\":1}}],[\"yet\",{\"1\":{\"70\":3}}],[\"yemen\",{\"1\":{\"25\":1}}],[\"yen\",{\"1\":{\"25\":1}}],[\"yellow\",{\"1\":{\"25\":3}}],[\"yang\",{\"1\":{\"25\":1}}],[\"yarn\",{\"1\":{\"25\":1,\"54\":3,\"466\":1,\"468\":1,\"469\":1,\"471\":1,\"475\":2,\"476\":1,\"477\":3}}],[\"yawning\",{\"1\":{\"25\":1}}],[\"yo\",{\"1\":{\"25\":2}}],[\"your\",{\"1\":{\"66\":2,\"472\":1}}],[\"you\",{\"0\":{\"0\":1},\"1\":{\"25\":1,\"472\":2}}],[\"yum\",{\"1\":{\"25\":1,\"60\":1}}],[\"☺️\",{\"1\":{\"25\":1}}],[\"🪧\",{\"1\":{\"25\":1}}],[\"🪦\",{\"1\":{\"25\":1}}],[\"🧯\",{\"1\":{\"25\":1}}],[\"🧽\",{\"1\":{\"25\":1}}],[\"🪥\",{\"1\":{\"25\":1}}],[\"🧼\",{\"1\":{\"25\":1}}],[\"🪣\",{\"1\":{\"25\":1}}],[\"🧻\",{\"1\":{\"25\":1}}],[\"🧺\",{\"1\":{\"25\":1}}],[\"🧹\",{\"1\":{\"25\":1}}],[\"🧷\",{\"1\":{\"25\":1}}],[\"🧴\",{\"1\":{\"25\":1}}],[\"🪒\",{\"1\":{\"25\":1}}],[\"🪤\",{\"1\":{\"25\":1}}],[\"🪠\",{\"1\":{\"25\":1}}],[\"🪑\",{\"1\":{\"25\":1}}],[\"🪟\",{\"1\":{\"25\":1}}],[\"🪞\",{\"1\":{\"25\":1}}],[\"🩺\",{\"1\":{\"25\":1}}],[\"🩹\",{\"1\":{\"25\":1}}],[\"🩸\",{\"1\":{\"25\":1}}],[\"🧬\",{\"1\":{\"25\":1}}],[\"🧫\",{\"1\":{\"25\":1}}],[\"🧪\",{\"1\":{\"25\":1}}],[\"🪜\",{\"1\":{\"25\":1}}],[\"🧲\",{\"1\":{\"25\":1}}],[\"🧰\",{\"1\":{\"25\":1}}],[\"🪝\",{\"1\":{\"25\":1}}],[\"🦯\",{\"1\":{\"25\":1}}],[\"🪛\",{\"1\":{\"25\":1}}],[\"🪚\",{\"1\":{\"25\":1}}],[\"🪃\",{\"1\":{\"25\":1}}],[\"🪓\",{\"1\":{\"25\":1}}],[\"🧾\",{\"1\":{\"25\":1}}],[\"🪙\",{\"1\":{\"25\":1}}],[\"🪔\",{\"1\":{\"25\":1}}],[\"🧮\",{\"1\":{\"25\":1}}],[\"🪘\",{\"1\":{\"25\":1}}],[\"🥁\",{\"1\":{\"25\":1}}],[\"🪕\",{\"1\":{\"25\":1}}],[\"🪗\",{\"1\":{\"25\":1}}],[\"🪖\",{\"1\":{\"25\":1}}],[\"🧢\",{\"1\":{\"25\":1}}],[\"🩰\",{\"1\":{\"25\":1}}],[\"🥿\",{\"1\":{\"25\":1}}],[\"🥾\",{\"1\":{\"25\":1}}],[\"🩴\",{\"1\":{\"25\":1}}],[\"🩳\",{\"1\":{\"25\":1}}],[\"🩲\",{\"1\":{\"25\":1}}],[\"🩱\",{\"1\":{\"25\":1}}],[\"🥻\",{\"1\":{\"25\":1}}],[\"🧦\",{\"1\":{\"25\":1}}],[\"🧥\",{\"1\":{\"25\":1}}],[\"🧤\",{\"1\":{\"25\":1}}],[\"🧣\",{\"1\":{\"25\":1}}],[\"🦺\",{\"1\":{\"25\":1}}],[\"🥼\",{\"1\":{\"25\":1}}],[\"🥽\",{\"1\":{\"25\":1}}],[\"🪢\",{\"1\":{\"25\":1}}],[\"🧶\",{\"1\":{\"25\":1}}],[\"🪡\",{\"1\":{\"25\":1}}],[\"🧵\",{\"1\":{\"25\":1}}],[\"🪆\",{\"1\":{\"25\":1}}],[\"🪅\",{\"1\":{\"25\":1}}],[\"🧸\",{\"1\":{\"25\":1}}],[\"🧩\",{\"1\":{\"25\":1}}],[\"🧿\",{\"1\":{\"25\":1}}],[\"🪄\",{\"1\":{\"25\":1}}],[\"🪁\",{\"1\":{\"25\":1}}],[\"🪀\",{\"1\":{\"25\":1}}],[\"🥌\",{\"1\":{\"25\":1}}],[\"🤿\",{\"1\":{\"25\":1}}],[\"🥅\",{\"1\":{\"25\":1}}],[\"🥋\",{\"1\":{\"25\":1}}],[\"🥊\",{\"1\":{\"25\":1}}],[\"🥍\",{\"1\":{\"25\":1}}],[\"🥏\",{\"1\":{\"25\":1}}],[\"🥎\",{\"1\":{\"25\":1}}],[\"🥉\",{\"1\":{\"25\":1}}],[\"🥈\",{\"1\":{\"25\":1}}],[\"🥇\",{\"1\":{\"25\":1}}],[\"🧧\",{\"1\":{\"25\":1}}],[\"🧨\",{\"1\":{\"25\":1}}],[\"🪐\",{\"1\":{\"25\":1}}],[\"🧳\",{\"1\":{\"25\":1}}],[\"🪂\",{\"1\":{\"25\":1}}],[\"🦼\",{\"1\":{\"25\":1}}],[\"🦽\",{\"1\":{\"25\":1}}],[\"🪵\",{\"1\":{\"25\":1}}],[\"🪨\",{\"1\":{\"25\":1}}],[\"🧱\",{\"1\":{\"25\":1}}],[\"🧭\",{\"1\":{\"25\":1}}],[\"🥄\",{\"1\":{\"25\":1}}],[\"🥢\",{\"1\":{\"25\":1}}],[\"🧊\",{\"1\":{\"25\":1}}],[\"🧉\",{\"1\":{\"25\":1}}],[\"🧃\",{\"1\":{\"25\":1}}],[\"🧋\",{\"1\":{\"25\":1}}],[\"🥤\",{\"1\":{\"25\":1}}],[\"🥃\",{\"1\":{\"25\":1}}],[\"🥂\",{\"1\":{\"25\":1}}],[\"🫖\",{\"1\":{\"25\":1}}],[\"🥛\",{\"1\":{\"25\":1}}],[\"🥧\",{\"1\":{\"25\":1}}],[\"🧁\",{\"1\":{\"25\":1}}],[\"🦪\",{\"1\":{\"25\":1}}],[\"🦑\",{\"1\":{\"25\":1}}],[\"🦐\",{\"1\":{\"25\":1}}],[\"🦞\",{\"1\":{\"25\":1}}],[\"🦀\",{\"1\":{\"25\":1}}],[\"🥡\",{\"1\":{\"25\":1}}],[\"🥠\",{\"1\":{\"25\":1}}],[\"🥟\",{\"1\":{\"25\":1}}],[\"🥮\",{\"1\":{\"25\":1}}],[\"🥫\",{\"1\":{\"25\":1}}],[\"🧂\",{\"1\":{\"25\":1}}],[\"🧈\",{\"1\":{\"25\":1}}],[\"🥗\",{\"1\":{\"25\":1}}],[\"🥣\",{\"1\":{\"25\":1}}],[\"🫕\",{\"1\":{\"25\":1}}],[\"🥘\",{\"1\":{\"25\":1}}],[\"🥚\",{\"1\":{\"25\":1}}],[\"🧆\",{\"1\":{\"25\":1}}],[\"🥙\",{\"1\":{\"25\":1}}],[\"🫔\",{\"1\":{\"25\":1}}],[\"🥪\",{\"1\":{\"25\":1}}],[\"🥓\",{\"1\":{\"25\":1}}],[\"🥩\",{\"1\":{\"25\":1}}],[\"🧀\",{\"1\":{\"25\":1}}],[\"🧇\",{\"1\":{\"25\":1}}],[\"🥞\",{\"1\":{\"25\":1}}],[\"🥯\",{\"1\":{\"25\":1}}],[\"🥨\",{\"1\":{\"25\":1}}],[\"🫓\",{\"1\":{\"25\":1}}],[\"🥖\",{\"1\":{\"25\":1}}],[\"🥐\",{\"1\":{\"25\":1}}],[\"🥜\",{\"1\":{\"25\":1}}],[\"🧅\",{\"1\":{\"25\":1}}],[\"🧄\",{\"1\":{\"25\":1}}],[\"🥦\",{\"1\":{\"25\":1}}],[\"🥬\",{\"1\":{\"25\":1}}],[\"🥒\",{\"1\":{\"25\":1}}],[\"🫑\",{\"1\":{\"25\":1}}],[\"🥕\",{\"1\":{\"25\":1}}],[\"🥔\",{\"1\":{\"25\":1}}],[\"🥑\",{\"1\":{\"25\":1}}],[\"🥥\",{\"1\":{\"25\":1}}],[\"🫒\",{\"1\":{\"25\":1}}],[\"🥝\",{\"1\":{\"25\":1}}],[\"🫐\",{\"1\":{\"25\":1}}],[\"🥭\",{\"1\":{\"25\":1}}],[\"🪴\",{\"1\":{\"25\":1}}],[\"🥀\",{\"1\":{\"25\":1}}],[\"🦠\",{\"1\":{\"25\":1}}],[\"🪱\",{\"1\":{\"25\":1}}],[\"🪰\",{\"1\":{\"25\":1}}],[\"🦟\",{\"1\":{\"25\":1}}],[\"🦂\",{\"1\":{\"25\":1}}],[\"🪳\",{\"1\":{\"25\":1}}],[\"🦗\",{\"1\":{\"25\":1}}],[\"🪲\",{\"1\":{\"25\":1}}],[\"🦋\",{\"1\":{\"25\":1}}],[\"🦈\",{\"1\":{\"25\":1}}],[\"🦭\",{\"1\":{\"25\":1}}],[\"🦖\",{\"1\":{\"25\":1}}],[\"🦕\",{\"1\":{\"25\":1}}],[\"🦎\",{\"1\":{\"25\":1}}],[\"🦜\",{\"1\":{\"25\":1}}],[\"🦚\",{\"1\":{\"25\":1}}],[\"🦩\",{\"1\":{\"25\":1}}],[\"🪶\",{\"1\":{\"25\":1}}],[\"🦤\",{\"1\":{\"25\":1}}],[\"🦉\",{\"1\":{\"25\":1}}],[\"🦢\",{\"1\":{\"25\":1}}],[\"🦆\",{\"1\":{\"25\":1}}],[\"🦅\",{\"1\":{\"25\":1}}],[\"🦃\",{\"1\":{\"25\":1}}],[\"🦡\",{\"1\":{\"25\":1}}],[\"🦘\",{\"1\":{\"25\":1}}],[\"🦨\",{\"1\":{\"25\":1}}],[\"🦦\",{\"1\":{\"25\":1}}],[\"🦥\",{\"1\":{\"25\":1}}],[\"🦇\",{\"1\":{\"25\":1}}],[\"🦔\",{\"1\":{\"25\":1}}],[\"🦫\",{\"1\":{\"25\":1}}],[\"🦛\",{\"1\":{\"25\":1}}],[\"🦏\",{\"1\":{\"25\":1}}],[\"🦣\",{\"1\":{\"25\":1}}],[\"🦒\",{\"1\":{\"25\":1}}],[\"🦙\",{\"1\":{\"25\":1}}],[\"🦬\",{\"1\":{\"25\":1}}],[\"🦌\",{\"1\":{\"25\":1}}],[\"🦓\",{\"1\":{\"25\":1}}],[\"🦄\",{\"1\":{\"25\":1}}],[\"🦁\",{\"1\":{\"25\":1}}],[\"🦝\",{\"1\":{\"25\":1}}],[\"🦊\",{\"1\":{\"25\":1}}],[\"🦮\",{\"1\":{\"25\":1}}],[\"🦧\",{\"1\":{\"25\":1}}],[\"🦍\",{\"1\":{\"25\":1}}],[\"🫂\",{\"1\":{\"25\":1}}],[\"🧘‍♀️\",{\"1\":{\"25\":1}}],[\"🧘‍♂️\",{\"1\":{\"25\":1}}],[\"🧘\",{\"1\":{\"25\":1}}],[\"🤹‍♀️\",{\"1\":{\"25\":1}}],[\"🤹‍♂️\",{\"1\":{\"25\":1}}],[\"🤹\",{\"1\":{\"25\":1}}],[\"🤾‍♀️\",{\"1\":{\"25\":1}}],[\"🤾‍♂️\",{\"1\":{\"25\":1}}],[\"🤾\",{\"1\":{\"25\":1}}],[\"🤽‍♀️\",{\"1\":{\"25\":1}}],[\"🤽‍♂️\",{\"1\":{\"25\":1}}],[\"🤽\",{\"1\":{\"25\":1}}],[\"🤼‍♀️\",{\"1\":{\"25\":1}}],[\"🤼‍♂️\",{\"1\":{\"25\":1}}],[\"🤼\",{\"1\":{\"25\":1}}],[\"🤸‍♀️\",{\"1\":{\"25\":1}}],[\"🤸‍♂️\",{\"1\":{\"25\":1}}],[\"🤸\",{\"1\":{\"25\":1}}],[\"🤺\",{\"1\":{\"25\":1}}],[\"🧗‍♀️\",{\"1\":{\"25\":1}}],[\"🧗‍♂️\",{\"1\":{\"25\":1}}],[\"🧗\",{\"1\":{\"25\":1}}],[\"🧖‍♀️\",{\"1\":{\"25\":1}}],[\"🧖‍♂️\",{\"1\":{\"25\":1}}],[\"🧖\",{\"1\":{\"25\":1}}],[\"🧎‍♀️\",{\"1\":{\"25\":1}}],[\"🧎‍♂️\",{\"1\":{\"25\":1}}],[\"🧎\",{\"1\":{\"25\":1}}],[\"🧍‍♀️\",{\"1\":{\"25\":1}}],[\"🧍‍♂️\",{\"1\":{\"25\":1}}],[\"🧍\",{\"1\":{\"25\":1}}],[\"🧟‍♀️\",{\"1\":{\"25\":1}}],[\"🧟‍♂️\",{\"1\":{\"25\":1}}],[\"🧟\",{\"1\":{\"25\":1}}],[\"🧞‍♀️\",{\"1\":{\"25\":1}}],[\"🧞‍♂️\",{\"1\":{\"25\":1}}],[\"🧞\",{\"1\":{\"25\":1}}],[\"🧝‍♀️\",{\"1\":{\"25\":1}}],[\"🧝‍♂️\",{\"1\":{\"25\":1}}],[\"🧝\",{\"1\":{\"25\":1}}],[\"🧜‍♀️\",{\"1\":{\"25\":1}}],[\"🧜‍♂️\",{\"1\":{\"25\":1}}],[\"🧜\",{\"1\":{\"25\":1}}],[\"🧛‍♀️\",{\"1\":{\"25\":1}}],[\"🧛‍♂️\",{\"1\":{\"25\":1}}],[\"🧛\",{\"1\":{\"25\":1}}],[\"🧚‍♀️\",{\"1\":{\"25\":1}}],[\"🧚‍♂️\",{\"1\":{\"25\":1}}],[\"🧚\",{\"1\":{\"25\":1}}],[\"🧙‍♀️\",{\"1\":{\"25\":1}}],[\"🧙‍♂️\",{\"1\":{\"25\":1}}],[\"🧙\",{\"1\":{\"25\":1}}],[\"🦹‍♀️\",{\"1\":{\"25\":1}}],[\"🦹‍♂️\",{\"1\":{\"25\":1}}],[\"🦹\",{\"1\":{\"25\":1}}],[\"🦸‍♀️\",{\"1\":{\"25\":1}}],[\"🦸‍♂️\",{\"1\":{\"25\":1}}],[\"🦸\",{\"1\":{\"25\":1}}],[\"🤶\",{\"1\":{\"25\":1}}],[\"🤱\",{\"1\":{\"25\":1}}],[\"🤰\",{\"1\":{\"25\":1}}],[\"🤵‍♀️\",{\"1\":{\"25\":1}}],[\"🤵‍♂️\",{\"1\":{\"25\":1}}],[\"🤵\",{\"1\":{\"25\":1}}],[\"🧕\",{\"1\":{\"25\":1}}],[\"🤴\",{\"1\":{\"25\":1}}],[\"🥷\",{\"1\":{\"25\":1}}],[\"🤷‍♀️\",{\"1\":{\"25\":1}}],[\"🤷‍♂️\",{\"1\":{\"25\":1}}],[\"🤷\",{\"1\":{\"25\":1}}],[\"🤦‍♀️\",{\"1\":{\"25\":1}}],[\"🤦‍♂️\",{\"1\":{\"25\":1}}],[\"🤦\",{\"1\":{\"25\":1}}],[\"🧏‍♀️\",{\"1\":{\"25\":1}}],[\"🧏‍♂️\",{\"1\":{\"25\":1}}],[\"🧏\",{\"1\":{\"25\":1}}],[\"🧓\",{\"1\":{\"25\":1}}],[\"🧔\",{\"1\":{\"25\":1}}],[\"🧑‍✈️\",{\"1\":{\"25\":1}}],[\"🧑‍🚒\",{\"1\":{\"25\":1}}],[\"🧑‍🚀\",{\"1\":{\"25\":1}}],[\"🧑‍💻\",{\"1\":{\"25\":1}}],[\"🧑‍🔬\",{\"1\":{\"25\":1}}],[\"🧑‍💼\",{\"1\":{\"25\":1}}],[\"🧑‍🔧\",{\"1\":{\"25\":1}}],[\"🧑‍⚖️\",{\"1\":{\"25\":1}}],[\"🧑‍🎄\",{\"1\":{\"25\":1}}],[\"🧑‍🍼\",{\"1\":{\"25\":1}}],[\"🧑‍🎨\",{\"1\":{\"25\":1}}],[\"🧑‍🎤\",{\"1\":{\"25\":1}}],[\"🧑‍🏭\",{\"1\":{\"25\":1}}],[\"🧑‍🍳\",{\"1\":{\"25\":1}}],[\"🧑‍🌾\",{\"1\":{\"25\":1}}],[\"🧑‍🏫\",{\"1\":{\"25\":1}}],[\"🧑‍🎓\",{\"1\":{\"25\":1}}],[\"🧑‍⚕️\",{\"1\":{\"25\":1}}],[\"🧑‍🤝‍🧑\",{\"1\":{\"25\":1}}],[\"🧑‍🦽\",{\"1\":{\"25\":1}}],[\"🧑‍🦼\",{\"1\":{\"25\":1}}],[\"🧑‍🦯\",{\"1\":{\"25\":1}}],[\"🧑‍🦲\",{\"1\":{\"25\":1}}],[\"🧑‍🦳\",{\"1\":{\"25\":1}}],[\"🧑‍🦱\",{\"1\":{\"25\":1}}],[\"🧑‍🦰\",{\"1\":{\"25\":1}}],[\"🧑\",{\"1\":{\"25\":1}}],[\"🧒\",{\"1\":{\"25\":1}}],[\"🦴\",{\"1\":{\"25\":1}}],[\"🦷\",{\"1\":{\"25\":1}}],[\"🫁\",{\"1\":{\"25\":1}}],[\"🫀\",{\"1\":{\"25\":1}}],[\"🧠\",{\"1\":{\"25\":1}}],[\"🦻\",{\"1\":{\"25\":1}}],[\"🦶\",{\"1\":{\"25\":1}}],[\"🦵\",{\"1\":{\"25\":1}}],[\"🦿\",{\"1\":{\"25\":1}}],[\"🦾\",{\"1\":{\"25\":1}}],[\"🤳\",{\"1\":{\"25\":1}}],[\"🤝\",{\"1\":{\"25\":1}}],[\"🤲\",{\"1\":{\"25\":1}}],[\"🤜\",{\"1\":{\"25\":1}}],[\"🤛\",{\"1\":{\"25\":1}}],[\"🤙\",{\"1\":{\"25\":1}}],[\"🤘\",{\"1\":{\"25\":1}}],[\"🤟\",{\"1\":{\"25\":1}}],[\"🤞\",{\"1\":{\"25\":1}}],[\"🤏\",{\"1\":{\"25\":1}}],[\"🤌\",{\"1\":{\"25\":1}}],[\"🤚\",{\"1\":{\"25\":1}}],[\"🤍\",{\"1\":{\"25\":1}}],[\"🤎\",{\"1\":{\"25\":1}}],[\"🧡\",{\"1\":{\"25\":1}}],[\"🤖\",{\"1\":{\"25\":1}}],[\"🤡\",{\"1\":{\"25\":1}}],[\"🤬\",{\"1\":{\"25\":1}}],[\"🥱\",{\"1\":{\"25\":1}}],[\"🥺\",{\"1\":{\"25\":1}}],[\"🧐\",{\"1\":{\"25\":1}}],[\"🤓\",{\"1\":{\"25\":1}}],[\"🥸\",{\"1\":{\"25\":1}}],[\"🥳\",{\"1\":{\"25\":1}}],[\"🤠\",{\"1\":{\"25\":1}}],[\"🤯\",{\"1\":{\"25\":1}}],[\"🥴\",{\"1\":{\"25\":1}}],[\"🥶\",{\"1\":{\"25\":1}}],[\"🥵\",{\"1\":{\"25\":1}}],[\"🤧\",{\"1\":{\"25\":1}}],[\"🤮\",{\"1\":{\"25\":1}}],[\"🤢\",{\"1\":{\"25\":1}}],[\"🤕\",{\"1\":{\"25\":1}}],[\"🤒\",{\"1\":{\"25\":1}}],[\"🤤\",{\"1\":{\"25\":1}}],[\"🤥\",{\"1\":{\"25\":1}}],[\"🤨\",{\"1\":{\"25\":1}}],[\"🤐\",{\"1\":{\"25\":1}}],[\"🤔\",{\"1\":{\"25\":1}}],[\"🤫\",{\"1\":{\"25\":1}}],[\"🤭\",{\"1\":{\"25\":1}}],[\"🤗\",{\"1\":{\"25\":1}}],[\"🤑\",{\"1\":{\"25\":1}}],[\"🤪\",{\"1\":{\"25\":1}}],[\"🥲\",{\"1\":{\"25\":1}}],[\"🤩\",{\"1\":{\"25\":1}}],[\"🥰\",{\"1\":{\"25\":1}}],[\"🤣\",{\"1\":{\"25\":1}}],[\"ico\",{\"1\":{\"476\":1}}],[\"icon\",{\"1\":{\"472\":1,\"476\":2}}],[\"iceland\",{\"1\":{\"25\":1}}],[\"ice\",{\"1\":{\"25\":5}}],[\"icecream\",{\"1\":{\"25\":1}}],[\"i8\",{\"1\":{\"348\":1}}],[\"i32>\",{\"1\":{\"441\":1}}],[\"i32\",{\"1\":{\"344\":1,\"365\":1,\"366\":2,\"389\":1,\"427\":1,\"441\":2}}],[\"i<s>\",{\"1\":{\"334\":1}}],[\"ipcrenderer\",{\"1\":{\"474\":3}}],[\"ipcmain\",{\"1\":{\"472\":2}}],[\"ip\",{\"1\":{\"325\":4,\"327\":1}}],[\"ipwhitelist\",{\"1\":{\"325\":3}}],[\"iphone\",{\"1\":{\"25\":1}}],[\"i++\",{\"1\":{\"243\":1,\"279\":1,\"306\":4,\"309\":1,\"312\":1}}],[\"illegalargumentexception\",{\"1\":{\"242\":1,\"334\":1}}],[\"if\",{\"0\":{\"409\":1},\"1\":{\"70\":1,\"83\":9,\"94\":5,\"157\":2,\"242\":2,\"243\":1,\"244\":2,\"281\":2,\"298\":2,\"306\":2,\"325\":2,\"334\":7,\"366\":1,\"411\":1,\"412\":1,\"456\":3,\"472\":3,\"474\":2}}],[\"ifconfig\",{\"1\":{\"60\":2}}],[\"image\",{\"1\":{\"328\":2}}],[\"img\",{\"1\":{\"60\":1}}],[\"impl\",{\"1\":{\"418\":1,\"419\":3,\"420\":2,\"426\":3,\"427\":1}}],[\"implements\",{\"1\":{\"70\":2,\"98\":1,\"293\":1,\"325\":1,\"334\":1,\"456\":1}}],[\"import的方式来加载\",{\"1\":{\"456\":1}}],[\"importingclassmetadata\",{\"1\":{\"456\":2}}],[\"importbeandefinitionregistrar类只能通过其他类\",{\"1\":{\"456\":1}}],[\"importbeandefinitionregistrar\",{\"1\":{\"456\":1}}],[\"import\",{\"1\":{\"66\":2,\"70\":14,\"456\":3,\"472\":2,\"474\":5}}],[\"imp\",{\"1\":{\"25\":2}}],[\"i\",{\"1\":{\"60\":1,\"134\":2,\"243\":3,\"279\":2,\"287\":1,\"306\":10,\"309\":3,\"312\":2,\"351\":4,\"384\":4,\"399\":2}}],[\"ioc\",{\"0\":{\"455\":1}}],[\"ioexception\",{\"1\":{\"76\":1,\"298\":2,\"299\":2}}],[\"ioengine=psync\",{\"1\":{\"50\":5,\"51\":1}}],[\"iotop安装\",{\"1\":{\"60\":1}}],[\"iotop\",{\"1\":{\"60\":2}}],[\"io引擎使用pync方式\",{\"1\":{\"51\":1}}],[\"ioscheduler=noop\",{\"1\":{\"50\":1}}],[\"iodepth\",{\"1\":{\"50\":5}}],[\"io\",{\"0\":{\"47\":1,\"291\":1},\"1\":{\"293\":1,\"334\":1,\"484\":3},\"2\":{\"53\":1}}],[\"items\",{\"1\":{\"474\":1}}],[\"item\",{\"1\":{\"426\":2,\"427\":2,\"484\":1}}],[\"iter\",{\"1\":{\"399\":1,\"412\":1,\"440\":1}}],[\"ithirdbll\",{\"1\":{\"79\":1}}],[\"it\",{\"1\":{\"25\":1,\"472\":2}}],[\"its\",{\"1\":{\"25\":1}}],[\"iran\",{\"1\":{\"25\":1}}],[\"iraq\",{\"1\":{\"25\":1}}],[\"ireland\",{\"1\":{\"25\":1}}],[\"isnotempty\",{\"1\":{\"334\":1}}],[\"isnull\",{\"1\":{\"281\":1}}],[\"isarray\",{\"1\":{\"334\":2}}],[\"isequal\",{\"1\":{\"281\":2}}],[\"isempty\",{\"1\":{\"281\":1}}],[\"issynchronizationactive\",{\"1\":{\"83\":1}}],[\"issynchronizedwithtransaction\",{\"1\":{\"83\":1}}],[\"is\",{\"0\":{\"82\":1},\"1\":{\"70\":1,\"83\":2,\"104\":1,\"325\":1,\"346\":2,\"361\":1,\"365\":2,\"366\":1,\"384\":2,\"389\":2,\"470\":1,\"472\":2}}],[\"isle\",{\"1\":{\"25\":1}}],[\"islands\",{\"1\":{\"25\":17}}],[\"island\",{\"1\":{\"25\":6}}],[\"israel\",{\"1\":{\"25\":1}}],[\"identity\",{\"1\":{\"281\":2}}],[\"ideograph\",{\"1\":{\"25\":1}}],[\"idea懂得都懂\",{\"1\":{\"21\":1}}],[\"idea\",{\"1\":{\"21\":1,\"218\":1,\"254\":1}}],[\"id\",{\"1\":{\"25\":1,\"87\":1,\"327\":1}}],[\"izakaya\",{\"1\":{\"25\":1}}],[\"include\",{\"1\":{\"472\":1}}],[\"incoming\",{\"1\":{\"25\":1}}],[\"initialization\",{\"1\":{\"472\":1}}],[\"inversion\",{\"1\":{\"455\":1}}],[\"invalid\",{\"1\":{\"325\":1}}],[\"invader\",{\"1\":{\"25\":1}}],[\"innertext\",{\"1\":{\"472\":1}}],[\"inner\",{\"1\":{\"346\":1}}],[\"innodb\",{\"1\":{\"113\":2}}],[\"innocent\",{\"1\":{\"25\":1}}],[\"inheritablethreadlocal\",{\"1\":{\"310\":1}}],[\"inherited\",{\"1\":{\"79\":1,\"320\":1}}],[\"input\",{\"1\":{\"298\":3}}],[\"inputstreamreader\",{\"1\":{\"299\":3}}],[\"inputstream\",{\"1\":{\"298\":1}}],[\"introduce\",{\"1\":{\"484\":1}}],[\"introduction\",{\"1\":{\"458\":1}}],[\"intro\",{\"1\":{\"484\":1}}],[\"into\",{\"1\":{\"440\":1}}],[\"int\",{\"1\":{\"154\":7,\"242\":2,\"243\":6,\"279\":3,\"281\":1,\"306\":4,\"309\":1,\"312\":1}}],[\"integer>\",{\"1\":{\"334\":1}}],[\"integer\",{\"1\":{\"243\":1,\"281\":4,\"334\":1}}],[\"integration\",{\"1\":{\"70\":1}}],[\"interval\",{\"1\":{\"327\":2}}],[\"interruptedexception\",{\"1\":{\"235\":1,\"240\":1,\"243\":1,\"306\":1,\"309\":2,\"312\":2}}],[\"interrobang\",{\"1\":{\"25\":1}}],[\"interface\",{\"1\":{\"79\":1,\"154\":3,\"237\":1,\"281\":4,\"334\":2,\"456\":1,\"474\":2}}],[\"insert\",{\"1\":{\"384\":5,\"440\":1}}],[\"instance\",{\"1\":{\"154\":6,\"157\":7,\"327\":2}}],[\"instanceof\",{\"1\":{\"83\":1,\"334\":6}}],[\"instantiator\",{\"1\":{\"154\":7}}],[\"install\",{\"1\":{\"49\":1,\"54\":1,\"60\":1,\"66\":2}}],[\"inside\",{\"1\":{\"25\":1}}],[\"indian\",{\"1\":{\"25\":1}}],[\"india\",{\"1\":{\"25\":1}}],[\"indonesia\",{\"1\":{\"25\":1}}],[\"index\",{\"1\":{\"25\":2,\"111\":1,\"472\":2}}],[\"infinite\",{\"1\":{\"474\":1}}],[\"infinity\",{\"1\":{\"25\":1}}],[\"info\",{\"1\":{\"92\":2}}],[\"information\",{\"1\":{\"25\":2,\"104\":2}}],[\"ink\",{\"1\":{\"25\":1}}],[\"inbox\",{\"1\":{\"25\":1}}],[\"in\",{\"1\":{\"25\":12,\"298\":4,\"346\":1,\"351\":2,\"386\":2,\"399\":4,\"472\":3}}],[\"u>\",{\"1\":{\"427\":1}}],[\"u8\",{\"1\":{\"348\":2,\"389\":1,\"399\":6}}],[\"u32\",{\"1\":{\"345\":1,\"419\":2,\"420\":1}}],[\"utf\",{\"1\":{\"98\":3,\"325\":3,\"381\":2,\"383\":1,\"474\":1}}],[\"util\",{\"1\":{\"70\":3}}],[\"utility\",{\"1\":{\"70\":2}}],[\"utools\",{\"1\":{\"21\":1}}],[\"uddi利用soap消息机制\",{\"1\":{\"70\":1}}],[\"uddi是一种根据描述文档来引导系统查找相应服务的机制\",{\"1\":{\"70\":1}}],[\"uddi\",{\"1\":{\"70\":1}}],[\"u\",{\"1\":{\"60\":2,\"427\":3}}],[\"u+x\",{\"1\":{\"60\":2}}],[\"ubuntu\",{\"1\":{\"49\":1,\"54\":1}}],[\"uzbekistan\",{\"1\":{\"25\":1}}],[\"url\",{\"1\":{\"92\":1}}],[\"urlbasedcorsconfigurationsource\",{\"1\":{\"73\":5}}],[\"uri\",{\"1\":{\"92\":1,\"93\":2}}],[\"urandom\",{\"1\":{\"43\":1}}],[\"uruguay\",{\"1\":{\"25\":1}}],[\"urn\",{\"1\":{\"25\":1}}],[\"usize\",{\"1\":{\"389\":1}}],[\"used\",{\"1\":{\"472\":1}}],[\"use\",{\"1\":{\"440\":1}}],[\"username\",{\"1\":{\"70\":5,\"327\":1,\"426\":2}}],[\"username>\",{\"1\":{\"70\":1}}],[\"username>testuser<\",{\"1\":{\"70\":1}}],[\"usernametoken>\",{\"1\":{\"70\":1}}],[\"usernametoken\",{\"1\":{\"70\":6}}],[\"user\",{\"1\":{\"54\":1,\"328\":2,\"472\":1}}],[\"uses\",{\"1\":{\"54\":3,\"325\":1}}],[\"usr\",{\"1\":{\"50\":5}}],[\"us\",{\"1\":{\"25\":3}}],[\"uganda\",{\"1\":{\"25\":1}}],[\"ukraine\",{\"1\":{\"25\":1}}],[\"uk\",{\"1\":{\"25\":1}}],[\"u6e80\",{\"1\":{\"25\":1}}],[\"umbrella\",{\"1\":{\"25\":4}}],[\"until\",{\"1\":{\"472\":1}}],[\"uncaught\",{\"1\":{\"470\":1}}],[\"unmodified\",{\"1\":{\"94\":1}}],[\"unexpected\",{\"1\":{\"83\":1}}],[\"unsupportedoperationexception\",{\"1\":{\"70\":3}}],[\"unregister\",{\"1\":{\"66\":2}}],[\"unzip\",{\"1\":{\"43\":1}}],[\"underage\",{\"1\":{\"25\":1}}],[\"unlock\",{\"1\":{\"25\":1,\"235\":2}}],[\"unicode\",{\"1\":{\"356\":1,\"381\":1}}],[\"unicorn\",{\"1\":{\"25\":1}}],[\"unit\",{\"1\":{\"242\":3}}],[\"united\",{\"1\":{\"25\":2}}],[\"unique\",{\"1\":{\"109\":1}}],[\"universal\",{\"1\":{\"70\":1}}],[\"union\",{\"1\":{\"25\":1}}],[\"uniform\",{\"1\":{\"25\":1}}],[\"unamused\",{\"1\":{\"25\":1}}],[\"uptime\",{\"1\":{\"60\":1}}],[\"update\",{\"1\":{\"49\":1}}],[\"upper\",{\"1\":{\"25\":2}}],[\"upwards\",{\"1\":{\"25\":1}}],[\"up\",{\"1\":{\"25\":10}}],[\"upside\",{\"1\":{\"25\":1}}],[\"1置为0\",{\"1\":{\"350\":1}}],[\"1打印\",{\"1\":{\"306\":2}}],[\"1+\",{\"1\":{\"277\":1,\"278\":1}}],[\"1最新版\",{\"1\":{\"218\":1}}],[\"1963\",{\"1\":{\"279\":1}}],[\"1912女王时代\",{\"1\":{\"154\":2}}],[\"19\",{\"1\":{\"60\":1}}],[\"18688888888\",{\"1\":{\"154\":2}}],[\"18\",{\"1\":{\"60\":1,\"154\":2}}],[\"17\",{\"1\":{\"60\":1}}],[\"15\",{\"1\":{\"60\":1}}],[\"14\",{\"1\":{\"60\":1,\"349\":1}}],[\"13\",{\"1\":{\"60\":1,\"279\":2}}],[\"128\",{\"1\":{\"348\":1}}],[\"123\",{\"1\":{\"327\":1}}],[\"1234\",{\"1\":{\"25\":1}}],[\"127\",{\"1\":{\"327\":1,\"348\":1}}],[\"125\",{\"1\":{\"243\":1}}],[\"12\",{\"1\":{\"60\":1}}],[\"1111代表的不再是\",{\"1\":{\"278\":1}}],[\"1111\",{\"1\":{\"277\":1,\"278\":1}}],[\"1110\",{\"1\":{\"277\":1}}],[\"1190000010348077\",{\"1\":{\"73\":1}}],[\"11\",{\"1\":{\"60\":1,\"361\":1}}],[\"16143\",{\"1\":{\"329\":1}}],[\"16\",{\"1\":{\"54\":1,\"60\":1}}],[\"10px\",{\"1\":{\"474\":1}}],[\"10s\",{\"1\":{\"327\":2}}],[\"10\",{\"1\":{\"29\":1,\"60\":1,\"154\":2,\"281\":2,\"306\":1,\"399\":1,\"440\":1}}],[\"100vh\",{\"1\":{\"474\":1}}],[\"1000拿去表示\",{\"1\":{\"278\":1}}],[\"1000\",{\"1\":{\"243\":1,\"309\":1,\"312\":2}}],[\"100\",{\"1\":{\"25\":1,\"60\":1,\"345\":1,\"440\":1}}],[\"1️⃣\",{\"1\":{\"25\":1}}],[\"1st\",{\"1\":{\"25\":1}}],[\"1\",{\"1\":{\"25\":1,\"30\":1,\"43\":1,\"50\":5,\"60\":5,\"70\":6,\"83\":2,\"134\":1,\"154\":1,\"235\":1,\"240\":1,\"243\":2,\"258\":1,\"277\":1,\"278\":3,\"279\":6,\"296\":1,\"327\":1,\"328\":1,\"344\":4,\"346\":1,\"348\":6,\"349\":11,\"351\":1,\"361\":1,\"365\":1,\"381\":1,\"384\":2,\"389\":3,\"399\":4,\"433\":1,\"472\":1}}],[\"懂得都懂\",{\"1\":{\"22\":1}}],[\"🚩\",{\"1\":{\"25\":1}}],[\"🔲\",{\"1\":{\"25\":1}}],[\"🔳\",{\"1\":{\"25\":1}}],[\"🔘\",{\"1\":{\"25\":1}}],[\"💠\",{\"1\":{\"25\":1}}],[\"🔻\",{\"1\":{\"25\":1}}],[\"🔺\",{\"1\":{\"25\":1}}],[\"🔹\",{\"1\":{\"25\":1}}],[\"🔸\",{\"1\":{\"25\":1}}],[\"🔷\",{\"1\":{\"25\":1}}],[\"🔶\",{\"1\":{\"25\":1}}],[\"🟫\",{\"1\":{\"25\":1}}],[\"🟪\",{\"1\":{\"25\":1}}],[\"🟦\",{\"1\":{\"25\":1}}],[\"🟩\",{\"1\":{\"25\":1}}],[\"🟨\",{\"1\":{\"25\":1}}],[\"🟧\",{\"1\":{\"25\":1}}],[\"🟥\",{\"1\":{\"25\":1}}],[\"🟤\",{\"1\":{\"25\":1}}],[\"🟣\",{\"1\":{\"25\":1}}],[\"🔵\",{\"1\":{\"25\":1}}],[\"🟢\",{\"1\":{\"25\":1}}],[\"🟡\",{\"1\":{\"25\":1}}],[\"🟠\",{\"1\":{\"25\":1}}],[\"🔴\",{\"1\":{\"25\":1}}],[\"🔤\",{\"1\":{\"25\":1}}],[\"🔣\",{\"1\":{\"25\":1}}],[\"🔡\",{\"1\":{\"25\":1}}],[\"🔠\",{\"1\":{\"25\":1}}],[\"🔟\",{\"1\":{\"25\":1}}],[\"🔰\",{\"1\":{\"25\":1}}],[\"📛\",{\"1\":{\"25\":1}}],[\"🔱\",{\"1\":{\"25\":1}}],[\"💲\",{\"1\":{\"25\":1}}],[\"💱\",{\"1\":{\"25\":1}}],[\"📴\",{\"1\":{\"25\":1}}],[\"📳\",{\"1\":{\"25\":1}}],[\"📶\",{\"1\":{\"25\":1}}],[\"🔆\",{\"1\":{\"25\":1}}],[\"🔅\",{\"1\":{\"25\":1}}],[\"🔽\",{\"1\":{\"25\":1}}],[\"🔼\",{\"1\":{\"25\":1}}],[\"🔂\",{\"1\":{\"25\":1}}],[\"🔁\",{\"1\":{\"25\":1}}],[\"🔀\",{\"1\":{\"25\":1}}],[\"🔯\",{\"1\":{\"25\":1}}],[\"🕎\",{\"1\":{\"25\":1}}],[\"🕉️\",{\"1\":{\"25\":1}}],[\"🛐\",{\"1\":{\"25\":1}}],[\"🔝\",{\"1\":{\"25\":1}}],[\"🔜\",{\"1\":{\"25\":1}}],[\"🔛\",{\"1\":{\"25\":1}}],[\"🔚\",{\"1\":{\"25\":1}}],[\"🔙\",{\"1\":{\"25\":1}}],[\"🔄\",{\"1\":{\"25\":1}}],[\"🔃\",{\"1\":{\"25\":1}}],[\"🔞\",{\"1\":{\"25\":1}}],[\"📵\",{\"1\":{\"25\":1}}],[\"🚷\",{\"1\":{\"25\":1}}],[\"🚱\",{\"1\":{\"25\":1}}],[\"🚯\",{\"1\":{\"25\":1}}],[\"🚭\",{\"1\":{\"25\":1}}],[\"🚳\",{\"1\":{\"25\":1}}],[\"🚫\",{\"1\":{\"25\":1}}],[\"🚸\",{\"1\":{\"25\":1}}],[\"🛅\",{\"1\":{\"25\":1}}],[\"🛄\",{\"1\":{\"25\":1}}],[\"🛃\",{\"1\":{\"25\":1}}],[\"🛂\",{\"1\":{\"25\":1}}],[\"🚾\",{\"1\":{\"25\":1}}],[\"🚼\",{\"1\":{\"25\":1}}],[\"🚻\",{\"1\":{\"25\":1}}],[\"🚺\",{\"1\":{\"25\":1}}],[\"🚹\",{\"1\":{\"25\":1}}],[\"🚰\",{\"1\":{\"25\":1}}],[\"🚮\",{\"1\":{\"25\":1}}],[\"🗿\",{\"1\":{\"25\":1}}],[\"🚬\",{\"1\":{\"25\":1}}],[\"🛒\",{\"1\":{\"25\":1}}],[\"🛁\",{\"1\":{\"25\":1}}],[\"🚿\",{\"1\":{\"25\":1}}],[\"🚽\",{\"1\":{\"25\":1}}],[\"🛋️\",{\"1\":{\"25\":1}}],[\"🛏️\",{\"1\":{\"25\":1}}],[\"🛗\",{\"1\":{\"25\":1}}],[\"🚪\",{\"1\":{\"25\":1}}],[\"💊\",{\"1\":{\"25\":1}}],[\"💉\",{\"1\":{\"25\":1}}],[\"📡\",{\"1\":{\"25\":1}}],[\"🔭\",{\"1\":{\"25\":1}}],[\"🔬\",{\"1\":{\"25\":1}}],[\"🔗\",{\"1\":{\"25\":1}}],[\"🗜️\",{\"1\":{\"25\":1}}],[\"🔩\",{\"1\":{\"25\":1}}],[\"🔧\",{\"1\":{\"25\":1}}],[\"🛡️\",{\"1\":{\"25\":1}}],[\"🔫\",{\"1\":{\"25\":1}}],[\"🗡️\",{\"1\":{\"25\":1}}],[\"🛠️\",{\"1\":{\"25\":1}}],[\"🔨\",{\"1\":{\"25\":1}}],[\"🗝️\",{\"1\":{\"25\":1}}],[\"🔑\",{\"1\":{\"25\":1}}],[\"🔐\",{\"1\":{\"25\":1}}],[\"🔏\",{\"1\":{\"25\":1}}],[\"🔓\",{\"1\":{\"25\":1}}],[\"🔒\",{\"1\":{\"25\":1}}],[\"🗑️\",{\"1\":{\"25\":1}}],[\"🗄️\",{\"1\":{\"25\":1}}],[\"🗃️\",{\"1\":{\"25\":1}}],[\"📐\",{\"1\":{\"25\":1}}],[\"📏\",{\"1\":{\"25\":1}}],[\"🖇️\",{\"1\":{\"25\":1}}],[\"📎\",{\"1\":{\"25\":1}}],[\"📍\",{\"1\":{\"25\":1}}],[\"📌\",{\"1\":{\"25\":1}}],[\"📋\",{\"1\":{\"25\":1}}],[\"📊\",{\"1\":{\"25\":1}}],[\"📉\",{\"1\":{\"25\":1}}],[\"📈\",{\"1\":{\"25\":1}}],[\"📇\",{\"1\":{\"25\":1}}],[\"🗓️\",{\"1\":{\"25\":1}}],[\"🗒️\",{\"1\":{\"25\":1}}],[\"📆\",{\"1\":{\"25\":1}}],[\"📅\",{\"1\":{\"25\":1}}],[\"🗂️\",{\"1\":{\"25\":1}}],[\"📂\",{\"1\":{\"25\":1}}],[\"📁\",{\"1\":{\"25\":1}}],[\"💼\",{\"1\":{\"25\":1}}],[\"📝\",{\"1\":{\"25\":2}}],[\"🖍️\",{\"1\":{\"25\":1}}],[\"🖌️\",{\"1\":{\"25\":1}}],[\"🖊️\",{\"1\":{\"25\":1}}],[\"🖋️\",{\"1\":{\"25\":1}}],[\"🗳️\",{\"1\":{\"25\":1}}],[\"📮\",{\"1\":{\"25\":1}}],[\"📭\",{\"1\":{\"25\":1}}],[\"📬\",{\"1\":{\"25\":1}}],[\"📪\",{\"1\":{\"25\":1}}],[\"📫\",{\"1\":{\"25\":1}}],[\"📦\",{\"1\":{\"25\":1}}],[\"📥\",{\"1\":{\"25\":1}}],[\"📤\",{\"1\":{\"25\":1}}],[\"📩\",{\"1\":{\"25\":1}}],[\"📨\",{\"1\":{\"25\":1}}],[\"📧\",{\"1\":{\"25\":2}}],[\"💹\",{\"1\":{\"25\":1}}],[\"💳\",{\"1\":{\"25\":1}}],[\"💸\",{\"1\":{\"25\":1}}],[\"💷\",{\"1\":{\"25\":1}}],[\"💶\",{\"1\":{\"25\":1}}],[\"💵\",{\"1\":{\"25\":1}}],[\"💴\",{\"1\":{\"25\":1}}],[\"💰\",{\"1\":{\"25\":1}}],[\"🔖\",{\"1\":{\"25\":1}}],[\"📑\",{\"1\":{\"25\":1}}],[\"🗞️\",{\"1\":{\"25\":1}}],[\"📰\",{\"1\":{\"25\":1}}],[\"📄\",{\"1\":{\"25\":1}}],[\"📜\",{\"1\":{\"25\":1}}],[\"📃\",{\"1\":{\"25\":1}}],[\"📒\",{\"1\":{\"25\":1}}],[\"📓\",{\"1\":{\"25\":1}}],[\"📚\",{\"1\":{\"25\":1}}],[\"📙\",{\"1\":{\"25\":1}}],[\"📘\",{\"1\":{\"25\":1}}],[\"📗\",{\"1\":{\"25\":1}}],[\"📖\",{\"1\":{\"25\":2}}],[\"📕\",{\"1\":{\"25\":1}}],[\"📔\",{\"1\":{\"25\":1}}],[\"🔦\",{\"1\":{\"25\":1}}],[\"💡\",{\"1\":{\"25\":1}}],[\"🕯️\",{\"1\":{\"25\":1}}],[\"🔎\",{\"1\":{\"25\":1}}],[\"🔍\",{\"1\":{\"25\":1}}],[\"📼\",{\"1\":{\"25\":1}}],[\"📹\",{\"1\":{\"25\":1}}],[\"📸\",{\"1\":{\"25\":1}}],[\"📷\",{\"1\":{\"25\":1}}],[\"📺\",{\"1\":{\"25\":1}}],[\"📺赛事直播\",{\"1\":{\"22\":1}}],[\"📽️\",{\"1\":{\"25\":1}}],[\"📀\",{\"1\":{\"25\":1}}],[\"💿\",{\"1\":{\"25\":1}}],[\"💾\",{\"1\":{\"25\":1}}],[\"💽\",{\"1\":{\"25\":1}}],[\"🖲️\",{\"1\":{\"25\":1}}],[\"🖱️\",{\"1\":{\"25\":1}}],[\"🖨️\",{\"1\":{\"25\":1}}],[\"🖥️\",{\"1\":{\"25\":1}}],[\"💻\",{\"1\":{\"25\":1}}],[\"💻desktop48\",{\"1\":{\"22\":1}}],[\"🔌\",{\"1\":{\"25\":1}}],[\"🔋\",{\"1\":{\"25\":1}}],[\"📠\",{\"1\":{\"25\":1}}],[\"📟\",{\"1\":{\"25\":1}}],[\"📞\",{\"1\":{\"25\":1}}],[\"📲\",{\"1\":{\"25\":1}}],[\"📱\",{\"1\":{\"25\":1}}],[\"🔕\",{\"1\":{\"25\":1}}],[\"🔔\",{\"1\":{\"25\":1}}],[\"📯\",{\"1\":{\"25\":1}}],[\"📣\",{\"1\":{\"25\":1}}],[\"📢\",{\"1\":{\"25\":1}}],[\"🔊\",{\"1\":{\"25\":1}}],[\"🔉\",{\"1\":{\"25\":1}}],[\"🔈\",{\"1\":{\"25\":1}}],[\"🔇\",{\"1\":{\"25\":1}}],[\"💎\",{\"1\":{\"25\":1}}],[\"💍\",{\"1\":{\"25\":1}}],[\"💄\",{\"1\":{\"25\":1}}],[\"📿\",{\"1\":{\"25\":1}}],[\"👒\",{\"1\":{\"25\":1}}],[\"👑\",{\"1\":{\"25\":1}}],[\"👢\",{\"1\":{\"25\":1}}],[\"👡\",{\"1\":{\"25\":1}}],[\"👠\",{\"1\":{\"25\":1}}],[\"👟\",{\"1\":{\"25\":1}}],[\"👞\",{\"1\":{\"25\":2}}],[\"🛍️\",{\"1\":{\"25\":1}}],[\"👝\",{\"1\":{\"25\":1}}],[\"👜\",{\"1\":{\"25\":1}}],[\"👛\",{\"1\":{\"25\":1}}],[\"👚\",{\"1\":{\"25\":1}}],[\"👙\",{\"1\":{\"25\":1}}],[\"👘\",{\"1\":{\"25\":1}}],[\"👗\",{\"1\":{\"25\":1}}],[\"👖\",{\"1\":{\"25\":1}}],[\"👕\",{\"1\":{\"25\":2}}],[\"👔\",{\"1\":{\"25\":1}}],[\"🕶️\",{\"1\":{\"25\":1}}],[\"👓\",{\"1\":{\"25\":1}}],[\"🖼️\",{\"1\":{\"25\":1}}],[\"🕹️\",{\"1\":{\"25\":1}}],[\"🔮\",{\"1\":{\"25\":1}}],[\"🛷\",{\"1\":{\"25\":1}}],[\"💧\",{\"1\":{\"25\":1}}],[\"🔥\",{\"1\":{\"25\":1}}],[\"🕦\",{\"1\":{\"25\":1}}],[\"🕚\",{\"1\":{\"25\":1}}],[\"🕥\",{\"1\":{\"25\":1}}],[\"🕙\",{\"1\":{\"25\":1}}],[\"🕤\",{\"1\":{\"25\":1}}],[\"🕘\",{\"1\":{\"25\":1}}],[\"🕣\",{\"1\":{\"25\":1}}],[\"🕗\",{\"1\":{\"25\":1}}],[\"🕢\",{\"1\":{\"25\":1}}],[\"🕖\",{\"1\":{\"25\":1}}],[\"🕡\",{\"1\":{\"25\":1}}],[\"🕕\",{\"1\":{\"25\":1}}],[\"🕠\",{\"1\":{\"25\":1}}],[\"🕔\",{\"1\":{\"25\":1}}],[\"🕟\",{\"1\":{\"25\":1}}],[\"🕓\",{\"1\":{\"25\":1}}],[\"🕞\",{\"1\":{\"25\":1}}],[\"🕒\",{\"1\":{\"25\":1}}],[\"🕝\",{\"1\":{\"25\":1}}],[\"🕑\",{\"1\":{\"25\":1}}],[\"🕜\",{\"1\":{\"25\":1}}],[\"🕐\",{\"1\":{\"25\":1}}],[\"🕧\",{\"1\":{\"25\":1}}],[\"🕛\",{\"1\":{\"25\":1}}],[\"🕰️\",{\"1\":{\"25\":1}}],[\"🛎️\",{\"1\":{\"25\":1}}],[\"🛸\",{\"1\":{\"25\":1}}],[\"🚀\",{\"1\":{\"25\":1}}],[\"🛰️\",{\"1\":{\"25\":1}}],[\"🚡\",{\"1\":{\"25\":1}}],[\"🚠\",{\"1\":{\"25\":1}}],[\"🚟\",{\"1\":{\"25\":1}}],[\"🚁\",{\"1\":{\"25\":1}}],[\"💺\",{\"1\":{\"25\":1}}],[\"🛬\",{\"1\":{\"25\":1}}],[\"🛫\",{\"1\":{\"25\":1}}],[\"🛩️\",{\"1\":{\"25\":1}}],[\"🚢\",{\"1\":{\"25\":1}}],[\"🛥️\",{\"1\":{\"25\":1}}],[\"🛳️\",{\"1\":{\"25\":1}}],[\"🚤\",{\"1\":{\"25\":1}}],[\"🛶\",{\"1\":{\"25\":1}}],[\"🚧\",{\"1\":{\"25\":1}}],[\"🛑\",{\"1\":{\"25\":1}}],[\"🚦\",{\"1\":{\"25\":1}}],[\"🚥\",{\"1\":{\"25\":1}}],[\"🚨\",{\"1\":{\"25\":1}}],[\"🛢️\",{\"1\":{\"25\":1}}],[\"🛤️\",{\"1\":{\"25\":1}}],[\"🛣️\",{\"1\":{\"25\":1}}],[\"🚏\",{\"1\":{\"25\":1}}],[\"🛼\",{\"1\":{\"25\":1}}],[\"🛹\",{\"1\":{\"25\":1}}],[\"🛴\",{\"1\":{\"25\":1}}],[\"🚲\",{\"1\":{\"25\":1}}],[\"🛺\",{\"1\":{\"25\":1}}],[\"🛵\",{\"1\":{\"25\":1}}],[\"🚜\",{\"1\":{\"25\":1}}],[\"🚛\",{\"1\":{\"25\":1}}],[\"🚚\",{\"1\":{\"25\":1}}],[\"🛻\",{\"1\":{\"25\":1}}],[\"🚙\",{\"1\":{\"25\":1}}],[\"🚘\",{\"1\":{\"25\":1}}],[\"🚗\",{\"1\":{\"25\":2}}],[\"🚖\",{\"1\":{\"25\":1}}],[\"🚕\",{\"1\":{\"25\":1}}],[\"🚔\",{\"1\":{\"25\":1}}],[\"🚓\",{\"1\":{\"25\":1}}],[\"🚒\",{\"1\":{\"25\":1}}],[\"🚑\",{\"1\":{\"25\":1}}],[\"🚐\",{\"1\":{\"25\":1}}],[\"🚎\",{\"1\":{\"25\":1}}],[\"🚍\",{\"1\":{\"25\":1}}],[\"🚌\",{\"1\":{\"25\":1}}],[\"🚋\",{\"1\":{\"25\":1}}],[\"🚞\",{\"1\":{\"25\":1}}],[\"🚝\",{\"1\":{\"25\":1}}],[\"🚊\",{\"1\":{\"25\":1}}],[\"🚉\",{\"1\":{\"25\":1}}],[\"🚈\",{\"1\":{\"25\":1}}],[\"🚇\",{\"1\":{\"25\":1}}],[\"🚆\",{\"1\":{\"25\":1}}],[\"🚅\",{\"1\":{\"25\":1}}],[\"🚄\",{\"1\":{\"25\":1}}],[\"🚃\",{\"1\":{\"25\":1}}],[\"🚂\",{\"1\":{\"25\":1}}],[\"💈\",{\"1\":{\"25\":1}}],[\"🕋\",{\"1\":{\"25\":1}}],[\"🕍\",{\"1\":{\"25\":1}}],[\"🛕\",{\"1\":{\"25\":1}}],[\"🕌\",{\"1\":{\"25\":1}}],[\"🗽\",{\"1\":{\"25\":1}}],[\"🗼\",{\"1\":{\"25\":1}}],[\"💒\",{\"1\":{\"25\":1}}],[\"🛖\",{\"1\":{\"25\":1}}],[\"🗻\",{\"1\":{\"25\":1}}],[\"🗾\",{\"1\":{\"25\":1}}],[\"🗺️\",{\"1\":{\"25\":1}}],[\"🔪\",{\"1\":{\"25\":2}}],[\"💮\",{\"1\":{\"25\":1}}],[\"💐\",{\"1\":{\"25\":1}}],[\"🕸️\",{\"1\":{\"25\":1}}],[\"🕷️\",{\"1\":{\"25\":1}}],[\"🐞\",{\"1\":{\"25\":1}}],[\"🐝\",{\"1\":{\"25\":2}}],[\"🐜\",{\"1\":{\"25\":1}}],[\"🐛\",{\"1\":{\"25\":1}}],[\"🐌\",{\"1\":{\"25\":1}}],[\"🐚\",{\"1\":{\"25\":1}}],[\"🐙\",{\"1\":{\"25\":1}}],[\"🐡\",{\"1\":{\"25\":1}}],[\"🐠\",{\"1\":{\"25\":1}}],[\"🐟\",{\"1\":{\"25\":1}}],[\"🐬\",{\"1\":{\"25\":2}}],[\"🐋\",{\"1\":{\"25\":1}}],[\"🐳\",{\"1\":{\"25\":1}}],[\"🐉\",{\"1\":{\"25\":1}}],[\"🐲\",{\"1\":{\"25\":1}}],[\"🐍\",{\"1\":{\"25\":1}}],[\"🐢\",{\"1\":{\"25\":1}}],[\"🐊\",{\"1\":{\"25\":1}}],[\"🐸\",{\"1\":{\"25\":1}}],[\"🕊️\",{\"1\":{\"25\":1}}],[\"🐧\",{\"1\":{\"25\":1}}],[\"🐦\",{\"1\":{\"25\":1}}],[\"🐥\",{\"1\":{\"25\":1}}],[\"🐤\",{\"1\":{\"25\":1}}],[\"🐣\",{\"1\":{\"25\":1}}],[\"🐓\",{\"1\":{\"25\":1}}],[\"🐔\",{\"1\":{\"25\":1}}],[\"🐾\",{\"1\":{\"25\":2}}],[\"🐼\",{\"1\":{\"25\":1}}],[\"🐨\",{\"1\":{\"25\":1}}],[\"🐻‍❄️\",{\"1\":{\"25\":1}}],[\"🐻\",{\"1\":{\"25\":1}}],[\"🐿️\",{\"1\":{\"25\":1}}],[\"🐇\",{\"1\":{\"25\":1}}],[\"🐰\",{\"1\":{\"25\":1}}],[\"🐹\",{\"1\":{\"25\":1}}],[\"🐀\",{\"1\":{\"25\":1}}],[\"🐁\",{\"1\":{\"25\":1}}],[\"🐭\",{\"1\":{\"25\":1}}],[\"🐘\",{\"1\":{\"25\":1}}],[\"🐫\",{\"1\":{\"25\":1}}],[\"🐪\",{\"1\":{\"25\":1}}],[\"🐐\",{\"1\":{\"25\":1}}],[\"🐑\",{\"1\":{\"25\":1}}],[\"🐏\",{\"1\":{\"25\":1}}],[\"🐽\",{\"1\":{\"25\":1}}],[\"🐗\",{\"1\":{\"25\":1}}],[\"🐖\",{\"1\":{\"25\":1}}],[\"🐷\",{\"1\":{\"25\":1}}],[\"🐄\",{\"1\":{\"25\":1}}],[\"🐃\",{\"1\":{\"25\":1}}],[\"🐂\",{\"1\":{\"25\":1}}],[\"🐮\",{\"1\":{\"25\":1}}],[\"🐎\",{\"1\":{\"25\":1}}],[\"🐴\",{\"1\":{\"25\":1}}],[\"🐆\",{\"1\":{\"25\":1}}],[\"🐅\",{\"1\":{\"25\":1}}],[\"🐯\",{\"1\":{\"25\":1}}],[\"🐈‍⬛\",{\"1\":{\"25\":1}}],[\"🐈\",{\"1\":{\"25\":1}}],[\"🐱\",{\"1\":{\"25\":1}}],[\"🐺\",{\"1\":{\"25\":1}}],[\"🐩\",{\"1\":{\"25\":1}}],[\"🐕‍🦺\",{\"1\":{\"25\":1}}],[\"🐕\",{\"1\":{\"25\":1}}],[\"🐶\",{\"1\":{\"25\":1}}],[\"🐒\",{\"1\":{\"25\":1}}],[\"🐵\",{\"1\":{\"25\":1}}],[\"👣\",{\"1\":{\"25\":1}}],[\"👥\",{\"1\":{\"25\":1}}],[\"👤\",{\"1\":{\"25\":1}}],[\"🗣️\",{\"1\":{\"25\":1}}],[\"👪\",{\"1\":{\"25\":1}}],[\"💑\",{\"1\":{\"25\":1}}],[\"💏\",{\"1\":{\"25\":1}}],[\"👬\",{\"1\":{\"25\":1}}],[\"👫\",{\"1\":{\"25\":1}}],[\"👭\",{\"1\":{\"25\":1}}],[\"🛌\",{\"1\":{\"25\":1}}],[\"🛀\",{\"1\":{\"25\":1}}],[\"🚵‍♀️\",{\"1\":{\"25\":1}}],[\"🚵‍♂️\",{\"1\":{\"25\":1}}],[\"🚵\",{\"1\":{\"25\":1}}],[\"🚴‍♀️\",{\"1\":{\"25\":1}}],[\"🚴‍♂️\",{\"1\":{\"25\":1}}],[\"🚴\",{\"1\":{\"25\":1}}],[\"🚣‍♀️\",{\"1\":{\"25\":1}}],[\"🚣‍♂️\",{\"1\":{\"25\":1}}],[\"🚣\",{\"1\":{\"25\":1}}],[\"👯‍♀️\",{\"1\":{\"25\":1}}],[\"👯‍♂️\",{\"1\":{\"25\":1}}],[\"👯\",{\"1\":{\"25\":1}}],[\"🕴️\",{\"1\":{\"25\":1}}],[\"🕺\",{\"1\":{\"25\":1}}],[\"💃\",{\"1\":{\"25\":2}}],[\"🚶‍♀️\",{\"1\":{\"25\":1}}],[\"🚶‍♂️\",{\"1\":{\"25\":1}}],[\"🚶\",{\"1\":{\"25\":1}}],[\"💇‍♀️\",{\"1\":{\"25\":1}}],[\"💇‍♂️\",{\"1\":{\"25\":1}}],[\"💇\",{\"1\":{\"25\":1}}],[\"💆‍♀️\",{\"1\":{\"25\":1}}],[\"💆‍♂️\",{\"1\":{\"25\":1}}],[\"💆\",{\"1\":{\"25\":1}}],[\"👼\",{\"1\":{\"25\":1}}],[\"👰‍♀️\",{\"1\":{\"25\":2}}],[\"👰‍♂️\",{\"1\":{\"25\":1}}],[\"👰\",{\"1\":{\"25\":1}}],[\"👲\",{\"1\":{\"25\":1}}],[\"👳‍♀️\",{\"1\":{\"25\":1}}],[\"👳‍♂️\",{\"1\":{\"25\":1}}],[\"👳\",{\"1\":{\"25\":1}}],[\"👸\",{\"1\":{\"25\":1}}],[\"👷‍♀️\",{\"1\":{\"25\":1}}],[\"👷‍♂️\",{\"1\":{\"25\":1}}],[\"👷\",{\"1\":{\"25\":1}}],[\"💂‍♀️\",{\"1\":{\"25\":1}}],[\"💂‍♂️\",{\"1\":{\"25\":1}}],[\"💂\",{\"1\":{\"25\":1}}],[\"🕵️‍♀️\",{\"1\":{\"25\":1}}],[\"🕵️‍♂️\",{\"1\":{\"25\":1}}],[\"🕵️\",{\"1\":{\"25\":1}}],[\"👮‍♀️\",{\"1\":{\"25\":1}}],[\"👮‍♂️\",{\"1\":{\"25\":1}}],[\"👮\",{\"1\":{\"25\":2}}],[\"🙇‍♀️\",{\"1\":{\"25\":1}}],[\"🙇‍♂️\",{\"1\":{\"25\":1}}],[\"🙇\",{\"1\":{\"25\":1}}],[\"🙋‍♀️\",{\"1\":{\"25\":1}}],[\"🙋‍♂️\",{\"1\":{\"25\":1}}],[\"🙋\",{\"1\":{\"25\":1}}],[\"💁‍♀️\",{\"1\":{\"25\":2}}],[\"💁‍♂️\",{\"1\":{\"25\":2}}],[\"💁\",{\"1\":{\"25\":2}}],[\"🙆‍♀️\",{\"1\":{\"25\":1}}],[\"🙆‍♂️\",{\"1\":{\"25\":1}}],[\"🙆\",{\"1\":{\"25\":1}}],[\"🙅‍♀️\",{\"1\":{\"25\":2}}],[\"🙅‍♂️\",{\"1\":{\"25\":2}}],[\"🙅\",{\"1\":{\"25\":1}}],[\"🙎‍♀️\",{\"1\":{\"25\":1}}],[\"🙎‍♂️\",{\"1\":{\"25\":1}}],[\"🙎\",{\"1\":{\"25\":1}}],[\"🙍‍♀️\",{\"1\":{\"25\":1}}],[\"🙍‍♂️\",{\"1\":{\"25\":1}}],[\"🙍\",{\"1\":{\"25\":1}}],[\"👵\",{\"1\":{\"25\":1}}],[\"👴\",{\"1\":{\"25\":1}}],[\"👩‍❤️‍👩\",{\"1\":{\"25\":1}}],[\"👩‍❤️‍👨\",{\"1\":{\"25\":1}}],[\"👩‍❤️‍💋‍👩\",{\"1\":{\"25\":1}}],[\"👩‍❤️‍💋‍👨\",{\"1\":{\"25\":1}}],[\"👩‍✈️\",{\"1\":{\"25\":1}}],[\"👩‍👧‍👧\",{\"1\":{\"25\":1}}],[\"👩‍👧‍👦\",{\"1\":{\"25\":1}}],[\"👩‍👧\",{\"1\":{\"25\":1}}],[\"👩‍👦‍👦\",{\"1\":{\"25\":1}}],[\"👩‍👦\",{\"1\":{\"25\":1}}],[\"👩‍👩‍👧‍👧\",{\"1\":{\"25\":1}}],[\"👩‍👩‍👧‍👦\",{\"1\":{\"25\":1}}],[\"👩‍👩‍👧\",{\"1\":{\"25\":1}}],[\"👩‍👩‍👦‍👦\",{\"1\":{\"25\":1}}],[\"👩‍👩‍👦\",{\"1\":{\"25\":1}}],[\"👩‍🚒\",{\"1\":{\"25\":1}}],[\"👩‍🚀\",{\"1\":{\"25\":1}}],[\"👩‍💻\",{\"1\":{\"25\":1}}],[\"👩‍🔬\",{\"1\":{\"25\":1}}],[\"👩‍💼\",{\"1\":{\"25\":1}}],[\"👩‍🔧\",{\"1\":{\"25\":1}}],[\"👩‍⚖️\",{\"1\":{\"25\":1}}],[\"👩‍🍼\",{\"1\":{\"25\":1}}],[\"👩‍🎨\",{\"1\":{\"25\":1}}],[\"👩‍🎤\",{\"1\":{\"25\":1}}],[\"👩‍🏭\",{\"1\":{\"25\":1}}],[\"👩‍🍳\",{\"1\":{\"25\":1}}],[\"👩‍🌾\",{\"1\":{\"25\":1}}],[\"👩‍🏫\",{\"1\":{\"25\":1}}],[\"👩‍🎓\",{\"1\":{\"25\":1}}],[\"👩‍⚕️\",{\"1\":{\"25\":1}}],[\"👩‍🦽\",{\"1\":{\"25\":1}}],[\"👩‍🦼\",{\"1\":{\"25\":1}}],[\"👩‍🦯\",{\"1\":{\"25\":1}}],[\"👩‍🦲\",{\"1\":{\"25\":1}}],[\"👩‍🦳\",{\"1\":{\"25\":1}}],[\"👩‍🦱\",{\"1\":{\"25\":1}}],[\"👩‍🦰\",{\"1\":{\"25\":1}}],[\"👩\",{\"1\":{\"25\":1}}],[\"👨‍❤️‍👨\",{\"1\":{\"25\":1}}],[\"👨‍❤️‍💋‍👨\",{\"1\":{\"25\":1}}],[\"👨‍✈️\",{\"1\":{\"25\":1}}],[\"👨‍👧‍👧\",{\"1\":{\"25\":1}}],[\"👨‍👧‍👦\",{\"1\":{\"25\":1}}],[\"👨‍👧\",{\"1\":{\"25\":1}}],[\"👨‍👦‍👦\",{\"1\":{\"25\":1}}],[\"👨‍👦\",{\"1\":{\"25\":1}}],[\"👨‍👨‍👧‍👧\",{\"1\":{\"25\":1}}],[\"👨‍👨‍👧‍👦\",{\"1\":{\"25\":1}}],[\"👨‍👨‍👧\",{\"1\":{\"25\":1}}],[\"👨‍👨‍👦‍👦\",{\"1\":{\"25\":1}}],[\"👨‍👨‍👦\",{\"1\":{\"25\":1}}],[\"👨‍👩‍👧‍👧\",{\"1\":{\"25\":1}}],[\"👨‍👩‍👧‍👦\",{\"1\":{\"25\":1}}],[\"👨‍👩‍👧\",{\"1\":{\"25\":1}}],[\"👨‍👩‍👦‍👦\",{\"1\":{\"25\":1}}],[\"👨‍👩‍👦\",{\"1\":{\"25\":1}}],[\"👨‍🚒\",{\"1\":{\"25\":1}}],[\"👨‍🚀\",{\"1\":{\"25\":1}}],[\"👨‍💻\",{\"1\":{\"25\":1}}],[\"👨‍🔬\",{\"1\":{\"25\":1}}],[\"👨‍💼\",{\"1\":{\"25\":1}}],[\"👨‍🔧\",{\"1\":{\"25\":1}}],[\"👨‍⚖️\",{\"1\":{\"25\":1}}],[\"👨‍🍼\",{\"1\":{\"25\":1}}],[\"👨‍🎨\",{\"1\":{\"25\":1}}],[\"👨‍🎤\",{\"1\":{\"25\":1}}],[\"👨‍🏭\",{\"1\":{\"25\":1}}],[\"👨‍🍳\",{\"1\":{\"25\":1}}],[\"👨‍🌾\",{\"1\":{\"25\":1}}],[\"👨‍🏫\",{\"1\":{\"25\":1}}],[\"👨‍🎓\",{\"1\":{\"25\":1}}],[\"👨‍⚕️\",{\"1\":{\"25\":1}}],[\"👨‍🦽\",{\"1\":{\"25\":1}}],[\"👨‍🦼\",{\"1\":{\"25\":1}}],[\"👨‍🦯\",{\"1\":{\"25\":1}}],[\"👨‍🦲\",{\"1\":{\"25\":1}}],[\"👨‍🦳\",{\"1\":{\"25\":1}}],[\"👨‍🦱\",{\"1\":{\"25\":1}}],[\"👨‍🦰\",{\"1\":{\"25\":1}}],[\"👨\",{\"1\":{\"25\":1}}],[\"👱‍♂️\",{\"1\":{\"25\":1}}],[\"👱‍♀️\",{\"1\":{\"25\":2}}],[\"👱\",{\"1\":{\"25\":1}}],[\"👧\",{\"1\":{\"25\":1}}],[\"👦\",{\"1\":{\"25\":1}}],[\"👶\",{\"1\":{\"25\":1}}],[\"👄\",{\"1\":{\"25\":1}}],[\"👅\",{\"1\":{\"25\":1}}],[\"👁️\",{\"1\":{\"25\":1}}],[\"👁️‍🗨️\",{\"1\":{\"25\":1}}],[\"👀\",{\"1\":{\"25\":1}}],[\"👃\",{\"1\":{\"25\":1}}],[\"👂\",{\"1\":{\"25\":1}}],[\"💪\",{\"1\":{\"25\":1}}],[\"💅\",{\"1\":{\"25\":1}}],[\"🙏\",{\"1\":{\"25\":1}}],[\"👐\",{\"1\":{\"25\":1}}],[\"🙌\",{\"1\":{\"25\":1}}],[\"👏\",{\"1\":{\"25\":1}}],[\"👊\",{\"1\":{\"25\":3}}],[\"👎\",{\"1\":{\"25\":2}}],[\"👍\",{\"1\":{\"25\":2}}],[\"👇\",{\"1\":{\"25\":1}}],[\"🖕\",{\"1\":{\"25\":2}}],[\"👆\",{\"1\":{\"25\":1}}],[\"👉\",{\"1\":{\"25\":1}}],[\"👈\",{\"1\":{\"25\":1}}],[\"👌\",{\"1\":{\"25\":1}}],[\"🖖\",{\"1\":{\"25\":1}}],[\"🖐️\",{\"1\":{\"25\":1}}],[\"👋\",{\"1\":{\"25\":1}}],[\"💤\",{\"1\":{\"25\":1}}],[\"💭\",{\"1\":{\"25\":1}}],[\"🗯️\",{\"1\":{\"25\":1}}],[\"🗨️\",{\"1\":{\"25\":1}}],[\"💬\",{\"1\":{\"25\":1}}],[\"💣\",{\"1\":{\"25\":1}}],[\"🕳️\",{\"1\":{\"25\":1}}],[\"💨\",{\"1\":{\"25\":1}}],[\"💦\",{\"1\":{\"25\":1}}],[\"💫\",{\"1\":{\"25\":1}}],[\"💥\",{\"1\":{\"25\":2}}],[\"💢\",{\"1\":{\"25\":1}}],[\"🖤\",{\"1\":{\"25\":1}}],[\"💜\",{\"1\":{\"25\":1}}],[\"💙\",{\"1\":{\"25\":1}}],[\"💚\",{\"1\":{\"25\":1}}],[\"💛\",{\"1\":{\"25\":1}}],[\"💔\",{\"1\":{\"25\":1}}],[\"💟\",{\"1\":{\"25\":1}}],[\"💕\",{\"1\":{\"25\":1}}],[\"💞\",{\"1\":{\"25\":1}}],[\"💓\",{\"1\":{\"25\":1}}],[\"💗\",{\"1\":{\"25\":1}}],[\"💖\",{\"1\":{\"25\":1}}],[\"💝\",{\"1\":{\"25\":1}}],[\"💘\",{\"1\":{\"25\":1}}],[\"💌\",{\"1\":{\"25\":1}}],[\"💋\",{\"1\":{\"25\":1}}],[\"🙊\",{\"1\":{\"25\":1}}],[\"🙉\",{\"1\":{\"25\":1}}],[\"🙈\",{\"1\":{\"25\":1}}],[\"😾\",{\"1\":{\"25\":1}}],[\"😿\",{\"1\":{\"25\":1}}],[\"🙀\",{\"1\":{\"25\":1}}],[\"😽\",{\"1\":{\"25\":1}}],[\"😼\",{\"1\":{\"25\":1}}],[\"😻\",{\"1\":{\"25\":1,\"356\":1}}],[\"😹\",{\"1\":{\"25\":1}}],[\"😸\",{\"1\":{\"25\":1}}],[\"😺\",{\"1\":{\"25\":1}}],[\"👾\",{\"1\":{\"25\":1}}],[\"👽\",{\"1\":{\"25\":1}}],[\"👻\",{\"1\":{\"25\":1}}],[\"👺\",{\"1\":{\"25\":1}}],[\"👹\",{\"1\":{\"25\":1}}],[\"💩\",{\"1\":{\"25\":3}}],[\"💀\",{\"1\":{\"25\":1}}],[\"👿\",{\"1\":{\"25\":1}}],[\"😈\",{\"1\":{\"25\":1}}],[\"😠\",{\"1\":{\"25\":1}}],[\"😡\",{\"1\":{\"25\":2}}],[\"😤\",{\"1\":{\"25\":1}}],[\"😫\",{\"1\":{\"25\":1}}],[\"😩\",{\"1\":{\"25\":1}}],[\"😓\",{\"1\":{\"25\":1}}],[\"😞\",{\"1\":{\"25\":1}}],[\"😣\",{\"1\":{\"25\":1}}],[\"😖\",{\"1\":{\"25\":1}}],[\"😱\",{\"1\":{\"25\":1}}],[\"😭\",{\"1\":{\"25\":1}}],[\"😢\",{\"1\":{\"25\":1}}],[\"😥\",{\"1\":{\"25\":1}}],[\"😰\",{\"1\":{\"25\":1}}],[\"😨\",{\"1\":{\"25\":1}}],[\"😧\",{\"1\":{\"25\":1}}],[\"😦\",{\"1\":{\"25\":1}}],[\"😳\",{\"1\":{\"25\":1}}],[\"😲\",{\"1\":{\"25\":1}}],[\"😯\",{\"1\":{\"25\":1}}],[\"😮\",{\"1\":{\"25\":1}}],[\"🙁\",{\"1\":{\"25\":1}}],[\"😟\",{\"1\":{\"25\":1}}],[\"😕\",{\"1\":{\"25\":1}}],[\"😎\",{\"1\":{\"25\":1}}],[\"😵\",{\"1\":{\"25\":1}}],[\"😷\",{\"1\":{\"25\":1}}],[\"😴\",{\"1\":{\"25\":1}}],[\"😪\",{\"1\":{\"25\":1}}],[\"😔\",{\"1\":{\"25\":1}}],[\"😌\",{\"1\":{\"25\":1}}],[\"😬\",{\"1\":{\"25\":1}}],[\"🙄\",{\"1\":{\"25\":1}}],[\"😒\",{\"1\":{\"25\":1}}],[\"😏\",{\"1\":{\"25\":1}}],[\"😶\",{\"1\":{\"25\":1}}],[\"😑\",{\"1\":{\"25\":1}}],[\"😐\",{\"1\":{\"25\":1}}],[\"😝\",{\"1\":{\"25\":1}}],[\"😜\",{\"1\":{\"25\":1}}],[\"😛\",{\"1\":{\"25\":1}}],[\"😋\",{\"1\":{\"25\":1}}],[\"😙\",{\"1\":{\"25\":1}}],[\"😚\",{\"1\":{\"25\":1}}],[\"😗\",{\"1\":{\"25\":1}}],[\"😘\",{\"1\":{\"25\":1}}],[\"😍\",{\"1\":{\"25\":1}}],[\"😇\",{\"1\":{\"25\":1}}],[\"😊\",{\"1\":{\"25\":1}}],[\"😉\",{\"1\":{\"25\":1}}],[\"🙃\",{\"1\":{\"25\":1}}],[\"🙂\",{\"1\":{\"25\":1}}],[\"😂\",{\"1\":{\"25\":1}}],[\"😅\",{\"1\":{\"25\":1}}],[\"😆\",{\"1\":{\"25\":2}}],[\"😁\",{\"1\":{\"25\":1}}],[\"😄\",{\"1\":{\"25\":1}}],[\"😄emoji\",{\"1\":{\"22\":1}}],[\"😃\",{\"1\":{\"25\":1}}],[\"😀\",{\"1\":{\"25\":1}}],[\"🔢\",{\"1\":{\"25\":1}}],[\"💯\",{\"1\":{\"25\":1}}],[\"📻\",{\"1\":{\"25\":1}}],[\"📻音乐下载\",{\"1\":{\"22\":1}}],[\"📻unblockneteasemusic\",{\"1\":{\"22\":1}}],[\"口袋48桌面版\",{\"1\":{\"22\":1}}],[\"娱乐\",{\"0\":{\"22\":1}}],[\"kv\",{\"0\":{\"439\":1}}],[\"k\",{\"1\":{\"60\":1}}],[\"k8s\",{\"1\":{\"38\":1}}],[\"k8s集成\",{\"1\":{\"27\":1}}],[\"kuwait\",{\"1\":{\"25\":1}}],[\"kubernetes\",{\"1\":{\"16\":1,\"44\":1}}],[\"kr\",{\"1\":{\"25\":1}}],[\"kyrgyzstan\",{\"1\":{\"25\":1}}],[\"kosovo\",{\"1\":{\"25\":1}}],[\"korea\",{\"1\":{\"25\":1}}],[\"kong\",{\"1\":{\"25\":1}}],[\"koko\",{\"1\":{\"25\":1}}],[\"koala\",{\"1\":{\"25\":1}}],[\"kerberos\",{\"1\":{\"116\":1}}],[\"keepalivetime\",{\"1\":{\"242\":5}}],[\"keepassxc\",{\"1\":{\"21\":1}}],[\"keep\",{\"1\":{\"27\":1}}],[\"kenya\",{\"1\":{\"25\":1}}],[\"keyframes\",{\"1\":{\"474\":1}}],[\"keys\",{\"1\":{\"111\":1}}],[\"keycap\",{\"1\":{\"25\":1}}],[\"key\",{\"1\":{\"25\":3,\"54\":2,\"111\":2,\"115\":1,\"244\":1,\"334\":2,\"357\":1}}],[\"keyboard\",{\"1\":{\"25\":2}}],[\"kazakhstan\",{\"1\":{\"25\":1}}],[\"kaaba\",{\"1\":{\"25\":1}}],[\"kangaroo\",{\"1\":{\"25\":1}}],[\"knobs\",{\"1\":{\"25\":1}}],[\"knot\",{\"1\":{\"25\":1}}],[\"knife\",{\"1\":{\"25\":2}}],[\"kneeling\",{\"1\":{\"25\":3}}],[\"kill\",{\"1\":{\"60\":2}}],[\"kitts\",{\"1\":{\"25\":1}}],[\"kite\",{\"1\":{\"25\":1}}],[\"kiribati\",{\"1\":{\"25\":1}}],[\"kinshasa\",{\"1\":{\"25\":1}}],[\"kimono\",{\"1\":{\"25\":1}}],[\"kick\",{\"1\":{\"25\":1}}],[\"kiwi\",{\"1\":{\"25\":1}}],[\"kiss\",{\"1\":{\"25\":1}}],[\"kissing\",{\"1\":{\"25\":5}}],[\"历史流量统计等功能\",{\"1\":{\"21\":1}}],[\"支持网络\",{\"1\":{\"483\":1}}],[\"支持丰富的数据类型\",{\"1\":{\"483\":1}}],[\"支持代码在线编辑和运行\",{\"1\":{\"347\":1,\"354\":1,\"358\":1,\"362\":1,\"368\":1,\"372\":1,\"379\":1,\"387\":1,\"393\":1,\"395\":1,\"400\":1,\"408\":1,\"414\":1,\"421\":1,\"424\":1,\"428\":1,\"430\":1,\"438\":1,\"443\":1}}],[\"支持注册中心之间的节点复制\",{\"1\":{\"31\":1}}],[\"支持预热模式\",{\"1\":{\"29\":1}}],[\"支持基于调用关系的限流\",{\"1\":{\"29\":1}}],[\"支持多种数据源\",{\"1\":{\"29\":2}}],[\"支持\",{\"1\":{\"27\":25,\"29\":4}}],[\"支持更换皮肤\",{\"1\":{\"21\":1}}],[\"支持嵌入到任务栏显示\",{\"1\":{\"21\":1}}],[\"用户提到字符串时\",{\"1\":{\"381\":1}}],[\"用户组为nginx\",{\"1\":{\"60\":2}}],[\"用花括号包裹最终返回一个值的语句块也是表达式\",{\"1\":{\"361\":1}}],[\"用来设置栈容量\",{\"1\":{\"254\":1}}],[\"用于测试是否集成完毕\",{\"0\":{\"474\":1}}],[\"用于扩展\",{\"0\":{\"470\":1}}],[\"用于保存实例化完成的\",{\"1\":{\"460\":1}}],[\"用于保存实例化\",{\"1\":{\"460\":1}}],[\"用于创建一个动态字符串\",{\"1\":{\"419\":1}}],[\"用于循环\",{\"1\":{\"399\":1}}],[\"用于我们编写自定义的注解\",{\"1\":{\"320\":1}}],[\"用于判断两个对象是否相等\",{\"1\":{\"281\":1}}],[\"用于专门刊载这方面的研究成果\",{\"1\":{\"279\":1}}],[\"用于描述那些非必须的对象\",{\"1\":{\"270\":1}}],[\"用于描述一些还有用\",{\"1\":{\"270\":1}}],[\"用于处理并发标记阶段漏标的那部分对象\",{\"1\":{\"268\":1}}],[\"用于存放引用计数\",{\"1\":{\"258\":1}}],[\"用于生成\",{\"1\":{\"244\":1}}],[\"用于spring注入\",{\"1\":{\"76\":2}}],[\"用于说明一组\",{\"1\":{\"70\":1}}],[\"用于windows平台的网速监控悬浮窗软件\",{\"1\":{\"21\":1}}],[\"用英语解释英语单词便于培养英语思维并记忆\",{\"1\":{\"18\":1}}],[\"寻找相似软件替代品\",{\"1\":{\"21\":1}}],[\"火绒高级防护规则\",{\"1\":{\"21\":1}}],[\"等待结束\",{\"1\":{\"309\":1}}],[\"等待下一次获得cpu资源\",{\"1\":{\"304\":1}}],[\"等等等等\",{\"1\":{\"154\":3}}],[\"等\",{\"1\":{\"133\":1}}],[\"等静态文件\",{\"1\":{\"43\":1}}],[\"等常用框架提供适配模块\",{\"1\":{\"29\":1}}],[\"等格式阅读器\",{\"1\":{\"21\":1}}],[\"等前端框架语法差异\",{\"1\":{\"14\":1}}],[\"是否允许修改安装路径\",{\"1\":{\"476\":1}}],[\"是否启用一键安装\",{\"1\":{\"476\":1}}],[\"是否包括父类的字段列表\",{\"1\":{\"334\":1}}],[\"是为了只添加到\",{\"1\":{\"471\":1}}],[\"是对\",{\"1\":{\"441\":1}}],[\"是不同的类型\",{\"1\":{\"399\":1}}],[\"是不可变的\",{\"1\":{\"384\":1}}],[\"是固定长度的\",{\"1\":{\"397\":1}}],[\"是返回一个新的字符串\",{\"1\":{\"384\":1}}],[\"是强类型语言\",{\"1\":{\"365\":1}}],[\"是该定义形式的位长度\",{\"1\":{\"348\":1}}],[\"是只在代码中\",{\"1\":{\"320\":1}}],[\"是必须暂停用户线程\",{\"1\":{\"268\":1}}],[\"是在jvm内存模型之上的抽象模型\",{\"1\":{\"228\":1}}],[\"是一种无锁算法\",{\"1\":{\"225\":1}}],[\"是一个表达式\",{\"1\":{\"407\":1}}],[\"是一个有序的集合\",{\"1\":{\"292\":1}}],[\"是一个主要针对web服务供应商和使用者的新项目\",{\"1\":{\"70\":1}}],[\"是一个强大的多功能压缩文件管理工具\",{\"1\":{\"21\":1}}],[\"是一个高效启动器\",{\"1\":{\"21\":1}}],[\"是一个简单但强大的截图工具\",{\"1\":{\"21\":1}}],[\"是一个简单的\",{\"1\":{\"9\":1}}],[\"是一个\",{\"1\":{\"9\":1,\"10\":1,\"399\":1}}],[\"是个通配符\",{\"1\":{\"92\":1}}],[\"是xml\",{\"1\":{\"70\":1}}],[\"是soap的基础\",{\"1\":{\"70\":1}}],[\"是\",{\"1\":{\"70\":1,\"333\":1,\"334\":1}}],[\"是存放镜像的\",{\"1\":{\"66\":1}}],[\"是存放程序的\",{\"1\":{\"66\":1}}],[\"是从git仓库拉取配置信息\",{\"1\":{\"31\":1}}],[\"是比较轻量的库\",{\"1\":{\"29\":1}}],[\"是免费支持\",{\"1\":{\"21\":1}}],[\"最近打算\",{\"1\":{\"466\":1}}],[\"最近用过的命令\",{\"1\":{\"60\":1}}],[\"最高优先级\",{\"1\":{\"305\":1}}],[\"最低优先级\",{\"1\":{\"305\":1}}],[\"最大的不同是它支持基本数据类型的直接读取\",{\"1\":{\"301\":1}}],[\"最大线程池大小\",{\"1\":{\"242\":1}}],[\"最弱的引用关系\",{\"1\":{\"270\":1}}],[\"最传统的引用\",{\"1\":{\"270\":1}}],[\"最好的情况是将该模式引入创建者类的现有层次结构中\",{\"1\":{\"150\":1}}],[\"最左优先原则\",{\"0\":{\"112\":1}}],[\"最终得到的bean加载完成的实例\",{\"1\":{\"460\":1}}],[\"最终会获得该元素的引用\",{\"1\":{\"434\":1}}],[\"最终会生成修改表字段的多条语句\",{\"1\":{\"104\":1}}],[\"最终的解决方案是补码\",{\"1\":{\"278\":1}}],[\"最终标记\",{\"1\":{\"268\":1}}],[\"最终判定\",{\"0\":{\"260\":1}}],[\"最终是触发basetask的execute方法\",{\"1\":{\"79\":1}}],[\"最后使用哪个注解\",{\"1\":{\"455\":1}}],[\"最后得到的结果就是最终的结果了\",{\"1\":{\"281\":1}}],[\"最后+1\",{\"1\":{\"278\":1}}],[\"最后发现这篇博文\",{\"1\":{\"83\":1}}],[\"最后我们需要给webservice的客户端添加handlerresolver类实例\",{\"1\":{\"70\":1}}],[\"最新版开始收费\",{\"1\":{\"21\":1}}],[\"最佳实践指南\",{\"1\":{\"12\":1}}],[\"可持久化\",{\"1\":{\"483\":1}}],[\"可用于缓存\",{\"1\":{\"483\":1}}],[\"可用性\",{\"1\":{\"27\":1}}],[\"可通过事件监听显现效果\",{\"1\":{\"466\":1}}],[\"可能会发生所有权的转移\",{\"1\":{\"441\":1}}],[\"可变引用与不可变引用不能同时存在\",{\"1\":{\"377\":1}}],[\"可变引用同时只能存在一个\",{\"1\":{\"377\":1}}],[\"可变引用\",{\"0\":{\"377\":1}}],[\"可存储数字范围是\",{\"1\":{\"348\":1}}],[\"可运行\",{\"1\":{\"304\":1}}],[\"可达性分析法\",{\"0\":{\"259\":1}}],[\"可达到同样效果\",{\"1\":{\"59\":1}}],[\"可重入锁\",{\"0\":{\"235\":1}}],[\"可重复读\",{\"1\":{\"115\":1}}],[\"可见性\",{\"1\":{\"231\":1}}],[\"可将同一行为的不同版本移到同一个类中\",{\"1\":{\"215\":1}}],[\"可扩展性\",{\"1\":{\"116\":1}}],[\"可灵活调整\",{\"1\":{\"43\":1}}],[\"可限制依赖服务a被调用频率\",{\"1\":{\"29\":1}}],[\"可对接其它监控系统\",{\"1\":{\"29\":1}}],[\"可配置规则\",{\"1\":{\"29\":1}}],[\"可配支持\",{\"1\":{\"27\":1}}],[\"可以运行\",{\"1\":{\"477\":1}}],[\"可以是方法执行之前也可以方法执行之后\",{\"1\":{\"458\":1}}],[\"可以插入增强处理的连接点\",{\"1\":{\"458\":1}}],[\"可以添加在构造方法\",{\"1\":{\"455\":1}}],[\"可以添加到set方法\",{\"1\":{\"455\":1}}],[\"可以有默认实现\",{\"1\":{\"426\":1}}],[\"可以有多个方法\",{\"1\":{\"280\":1}}],[\"可以单独使用\",{\"1\":{\"407\":1}}],[\"可以作为一个值用来占位\",{\"1\":{\"357\":1}}],[\"可以使用\",{\"1\":{\"440\":1}}],[\"可以使用标准库针对原始数字类型提供的这些方法\",{\"1\":{\"348\":1}}],[\"可以使用命令行wsimport构建webservice客户端\",{\"1\":{\"70\":1}}],[\"可以导入\",{\"1\":{\"329\":1}}],[\"可以监测\",{\"1\":{\"308\":1}}],[\"可以看到它不仅仅实现了list接口\",{\"1\":{\"293\":1}}],[\"可以获取斐波那契数列上任意一位的数字\",{\"1\":{\"279\":1}}],[\"可以自由选择任意多个region构成回收集\",{\"1\":{\"268\":1}}],[\"可以自定义个注解例如\",{\"1\":{\"79\":1}}],[\"可以通过\",{\"1\":{\"254\":1}}],[\"可以中途对版本号进行修改\",{\"1\":{\"240\":1}}],[\"可以很好地处理结构化数据\",{\"1\":{\"116\":1}}],[\"可以做注册中心\",{\"1\":{\"31\":1}}],[\"可以显示当前网速\",{\"1\":{\"21\":1}}],[\"可以提供一个便捷的多版本\",{\"1\":{\"10\":1}}],[\"可提供很快的解压缩速度和其他各种实用功能\",{\"1\":{\"21\":1}}],[\"功能丰富但略显花哨\",{\"1\":{\"21\":1}}],[\"相当于调用了\",{\"1\":{\"384\":1}}],[\"相当与clear\",{\"1\":{\"60\":1}}],[\"相同则为0\",{\"1\":{\"350\":1}}],[\"相同位置不相同则为1\",{\"1\":{\"350\":1}}],[\"相同位置只要有1时则为1\",{\"1\":{\"350\":1}}],[\"相同位置均为1时则为1\",{\"1\":{\"350\":1}}],[\"相反的\",{\"1\":{\"281\":1,\"287\":1}}],[\"相应的\",{\"1\":{\"278\":1}}],[\"相似的\",{\"1\":{\"197\":1}}],[\"相对\",{\"1\":{\"21\":1}}],[\"相关代码\",{\"0\":{\"474\":1}}],[\"相关的\",{\"1\":{\"470\":3}}],[\"相关文本信息\",{\"1\":{\"456\":1}}],[\"相关基础知识\",{\"1\":{\"11\":1}}],[\"相关\",{\"0\":{\"11\":1,\"12\":1,\"13\":1,\"17\":1},\"1\":{\"21\":1}}],[\"兼容\",{\"1\":{\"21\":1}}],[\"lbwnb\",{\"1\":{\"299\":1}}],[\"lbr\",{\"1\":{\"154\":2}}],[\"ldap\",{\"1\":{\"116\":1}}],[\"l\",{\"1\":{\"60\":1,\"287\":1}}],[\"ls\",{\"1\":{\"60\":3}}],[\"lsof\",{\"1\":{\"60\":1}}],[\"luxembourg\",{\"1\":{\"25\":1}}],[\"lucia\",{\"1\":{\"25\":1}}],[\"luggage\",{\"1\":{\"25\":2}}],[\"lungs\",{\"1\":{\"25\":1}}],[\"lambda仅支持接口\",{\"1\":{\"280\":1}}],[\"lambda\",{\"0\":{\"280\":1},\"1\":{\"280\":1}}],[\"lamp\",{\"1\":{\"25\":2}}],[\"la\",{\"1\":{\"60\":1}}],[\"latest\",{\"1\":{\"54\":1}}],[\"latvia\",{\"1\":{\"25\":1}}],[\"latin\",{\"1\":{\"25\":1}}],[\"lang\",{\"1\":{\"334\":1}}],[\"language\",{\"1\":{\"70\":2}}],[\"lanka\",{\"1\":{\"25\":1}}],[\"lantern\",{\"1\":{\"25\":3}}],[\"laos\",{\"1\":{\"25\":1}}],[\"ladder\",{\"1\":{\"25\":1}}],[\"lady\",{\"1\":{\"25\":1}}],[\"labels\",{\"1\":{\"327\":2}}],[\"label\",{\"1\":{\"25\":1}}],[\"lab\",{\"1\":{\"25\":1}}],[\"lacrosse\",{\"1\":{\"25\":1}}],[\"large\",{\"1\":{\"25\":6}}],[\"last\",{\"1\":{\"25\":2}}],[\"laughing\",{\"1\":{\"25\":1}}],[\"launcher\",{\"1\":{\"21\":1}}],[\"llama\",{\"1\":{\"25\":1}}],[\"loadurl\",{\"1\":{\"472\":2}}],[\"loadbalancer\",{\"1\":{\"28\":1}}],[\"logo\",{\"1\":{\"474\":4}}],[\"log\",{\"1\":{\"472\":1}}],[\"logger\",{\"1\":{\"83\":6}}],[\"logback\",{\"1\":{\"37\":1}}],[\"loop\",{\"1\":{\"25\":2,\"407\":1}}],[\"low\",{\"1\":{\"25\":1}}],[\"lower\",{\"1\":{\"25\":2}}],[\"lotion\",{\"1\":{\"25\":1}}],[\"lotus\",{\"1\":{\"25\":3}}],[\"localhost\",{\"1\":{\"472\":1}}],[\"localtime\",{\"1\":{\"42\":4}}],[\"lock和condition接口\",{\"0\":{\"234\":1}}],[\"lock\",{\"1\":{\"25\":3,\"235\":9,\"237\":2,\"244\":6}}],[\"locomotive\",{\"1\":{\"25\":1}}],[\"long\",{\"1\":{\"25\":1,\"242\":1}}],[\"loudspeaker\",{\"1\":{\"25\":1}}],[\"loud\",{\"1\":{\"25\":1}}],[\"lorry\",{\"1\":{\"25\":1}}],[\"lollipop\",{\"1\":{\"25\":1}}],[\"lobster\",{\"1\":{\"25\":1}}],[\"love\",{\"1\":{\"25\":3}}],[\"let\",{\"0\":{\"409\":1},\"1\":{\"343\":2,\"344\":1,\"345\":1,\"346\":3,\"349\":2,\"356\":4,\"360\":3,\"361\":2,\"366\":1,\"375\":2,\"384\":16,\"389\":9,\"399\":6,\"411\":1,\"412\":3,\"440\":2}}],[\"letter\",{\"1\":{\"25\":1}}],[\"length\",{\"1\":{\"281\":1,\"325\":2,\"389\":5,\"472\":1}}],[\"len\",{\"1\":{\"111\":1,\"389\":4,\"399\":3}}],[\"leste\",{\"1\":{\"25\":1}}],[\"lesotho\",{\"1\":{\"25\":1}}],[\"lebanon\",{\"1\":{\"25\":1}}],[\"leonardo\",{\"1\":{\"279\":1}}],[\"leone\",{\"1\":{\"25\":1}}],[\"leo\",{\"1\":{\"25\":1}}],[\"leopard\",{\"1\":{\"25\":1}}],[\"ledger\",{\"1\":{\"25\":1}}],[\"level\",{\"1\":{\"25\":1,\"287\":1}}],[\"levitating\",{\"1\":{\"25\":1}}],[\"lemon\",{\"1\":{\"25\":1}}],[\"learning\",{\"1\":{\"384\":2}}],[\"leaparray\",{\"1\":{\"29\":1}}],[\"leaves\",{\"1\":{\"25\":1}}],[\"leafy\",{\"1\":{\"25\":1}}],[\"leaf\",{\"1\":{\"25\":3}}],[\"leg\",{\"1\":{\"25\":3}}],[\"leftwards\",{\"1\":{\"25\":1}}],[\"left\",{\"1\":{\"25\":8,\"104\":1}}],[\"lying\",{\"1\":{\"25\":1}}],[\"like\",{\"1\":{\"384\":4}}],[\"limitset\",{\"1\":{\"334\":11}}],[\"limiter\",{\"1\":{\"29\":2}}],[\"lithuania\",{\"1\":{\"25\":1}}],[\"litter\",{\"1\":{\"25\":2}}],[\"liechtenstein\",{\"1\":{\"25\":1}}],[\"listen\",{\"1\":{\"92\":1}}],[\"list<t>\",{\"1\":{\"334\":1}}],[\"list<\",{\"1\":{\"334\":3}}],[\"list<e>\",{\"1\":{\"293\":1}}],[\"list<consumer<t>>\",{\"1\":{\"154\":1}}],[\"list<string>\",{\"1\":{\"154\":2}}],[\"list<mediatype>\",{\"1\":{\"98\":1,\"325\":1}}],[\"list<httpmessageconverter<\",{\"1\":{\"98\":1,\"325\":1}}],[\"list<handler>\",{\"1\":{\"70\":2}}],[\"list<itest>\",{\"1\":{\"79\":1}}],[\"list\",{\"0\":{\"292\":1},\"1\":{\"70\":1,\"334\":2,\"440\":2,\"483\":1}}],[\"lis\",{\"1\":{\"25\":1}}],[\"linear\",{\"1\":{\"474\":1}}],[\"linkedlist<e>\",{\"1\":{\"293\":1}}],[\"link\",{\"1\":{\"25\":1,\"474\":1}}],[\"linux经验汇总\",{\"0\":{\"57\":1}}],[\"linux\",{\"1\":{\"10\":1,\"16\":1,\"61\":1},\"2\":{\"63\":1}}],[\"lightning\",{\"1\":{\"25\":2}}],[\"light\",{\"1\":{\"25\":4}}],[\"lib\",{\"1\":{\"43\":1,\"133\":1,\"134\":2,\"328\":1}}],[\"libya\",{\"1\":{\"25\":1}}],[\"liberia\",{\"1\":{\"25\":1}}],[\"liberty\",{\"1\":{\"25\":1}}],[\"libra\",{\"1\":{\"25\":1}}],[\"library\",{\"1\":{\"19\":2}}],[\"lizard\",{\"1\":{\"25\":1}}],[\"lion\",{\"1\":{\"25\":1}}],[\"lifting\",{\"1\":{\"25\":3}}],[\"lipstick\",{\"1\":{\"25\":1}}],[\"lips\",{\"1\":{\"25\":1}}],[\"fs\",{\"1\":{\"474\":3}}],[\"f64\",{\"1\":{\"349\":8,\"389\":1,\"418\":8}}],[\"f32\",{\"1\":{\"349\":7,\"365\":1}}],[\"fn\",{\"1\":{\"343\":1,\"344\":1,\"346\":1,\"349\":1,\"356\":1,\"357\":1,\"361\":1,\"364\":1,\"365\":2,\"366\":2,\"375\":1,\"384\":9,\"389\":4,\"399\":1,\"412\":1,\"418\":2,\"419\":1,\"420\":2,\"426\":4,\"427\":3,\"440\":1}}],[\"f\",{\"1\":{\"279\":3,\"287\":1,\"412\":1,\"419\":1}}],[\"f强制删除\",{\"1\":{\"60\":1}}],[\"fr=aladdin\",{\"1\":{\"484\":1}}],[\"french\",{\"1\":{\"25\":3}}],[\"free\",{\"1\":{\"25\":1}}],[\"fr\",{\"1\":{\"25\":1}}],[\"framed\",{\"1\":{\"25\":1}}],[\"fried\",{\"1\":{\"25\":2}}],[\"fries\",{\"1\":{\"25\":1}}],[\"fruit>\",{\"1\":{\"148\":1}}],[\"fruitfactory<t\",{\"1\":{\"148\":1}}],[\"fruit\",{\"1\":{\"25\":1}}],[\"from\",{\"1\":{\"43\":2,\"70\":1,\"83\":2,\"104\":3,\"382\":1,\"384\":9,\"389\":1,\"419\":1,\"472\":2,\"474\":4}}],[\"front\",{\"1\":{\"25\":1}}],[\"frog\",{\"1\":{\"25\":1}}],[\"frowning\",{\"1\":{\"25\":6}}],[\"fetching\",{\"1\":{\"83\":2}}],[\"fetch\",{\"1\":{\"54\":1}}],[\"feign\",{\"1\":{\"28\":1}}],[\"ferry\",{\"1\":{\"25\":1}}],[\"ferris\",{\"1\":{\"25\":1}}],[\"feather\",{\"1\":{\"25\":1}}],[\"fearful\",{\"1\":{\"25\":1}}],[\"feet\",{\"1\":{\"25\":1}}],[\"feeding\",{\"1\":{\"25\":4}}],[\"fencing\",{\"1\":{\"25\":1}}],[\"female\",{\"1\":{\"25\":2}}],[\"favorite\",{\"1\":{\"384\":2}}],[\"fairsync\",{\"1\":{\"236\":1}}],[\"fair\",{\"1\":{\"236\":2}}],[\"fairy\",{\"1\":{\"25\":3}}],[\"failed\",{\"1\":{\"87\":1,\"349\":1}}],[\"fabio\",{\"1\":{\"27\":1}}],[\"faroe\",{\"1\":{\"25\":1}}],[\"farmer\",{\"1\":{\"25\":3}}],[\"faso\",{\"1\":{\"25\":1}}],[\"fastjsonconfig\",{\"1\":{\"98\":8,\"325\":8}}],[\"fastjsonhttpmessageconverters\",{\"1\":{\"98\":2,\"325\":2}}],[\"fastjsonhttpmessageconverter\",{\"1\":{\"98\":4,\"325\":3}}],[\"fastjson\",{\"0\":{\"97\":1},\"1\":{\"325\":1},\"2\":{\"101\":1}}],[\"fast\",{\"1\":{\"25\":1}}],[\"fax\",{\"1\":{\"25\":1}}],[\"false\",{\"1\":{\"360\":1,\"456\":2,\"472\":1,\"476\":1}}],[\"falkland\",{\"1\":{\"25\":1}}],[\"falafel\",{\"1\":{\"25\":1}}],[\"fallen\",{\"1\":{\"25\":1}}],[\"family\",{\"1\":{\"25\":26}}],[\"facing\",{\"1\":{\"25\":1}}],[\"factory\",{\"1\":{\"25\":4,\"76\":2}}],[\"facepalming\",{\"1\":{\"25\":2}}],[\"facepalm\",{\"1\":{\"25\":1}}],[\"facepunch\",{\"1\":{\"25\":1}}],[\"face\",{\"1\":{\"25\":44}}],[\"fibonacci\",{\"1\":{\"279\":2}}],[\"fio\",{\"1\":{\"48\":1,\"49\":1,\"50\":5},\"2\":{\"53\":1}}],[\"fiji\",{\"1\":{\"25\":1}}],[\"finished\",{\"1\":{\"472\":1}}],[\"finalize\",{\"1\":{\"260\":2}}],[\"final\",{\"1\":{\"73\":2,\"154\":1,\"157\":1,\"243\":2,\"244\":1,\"281\":5,\"334\":1}}],[\"find\",{\"1\":{\"59\":1,\"60\":2}}],[\"finland\",{\"1\":{\"25\":1}}],[\"finger\",{\"1\":{\"25\":1}}],[\"fingers\",{\"1\":{\"25\":3}}],[\"five\",{\"1\":{\"25\":1,\"389\":1}}],[\"filters\",{\"1\":{\"472\":1}}],[\"filter\",{\"1\":{\"412\":1}}],[\"filterchain\",{\"1\":{\"325\":1}}],[\"fill\",{\"1\":{\"298\":1}}],[\"filepaths\",{\"1\":{\"472\":1}}],[\"files\",{\"1\":{\"472\":1,\"476\":1}}],[\"filewriter\",{\"1\":{\"297\":1}}],[\"filereader\",{\"1\":{\"297\":1}}],[\"fileoutputstream\",{\"1\":{\"296\":1,\"299\":1}}],[\"fileinputstream\",{\"1\":{\"296\":1,\"298\":1,\"299\":1}}],[\"filename=\",{\"1\":{\"50\":5,\"51\":1}}],[\"file\",{\"1\":{\"25\":4,\"472\":3,\"474\":2}}],[\"film\",{\"1\":{\"25\":2}}],[\"fields\",{\"1\":{\"334\":2}}],[\"fieldset\",{\"1\":{\"334\":1}}],[\"field\",{\"1\":{\"25\":1,\"334\":8}}],[\"first\",{\"0\":{\"268\":1},\"1\":{\"25\":2}}],[\"firecracker\",{\"1\":{\"25\":1}}],[\"fireworks\",{\"1\":{\"25\":1}}],[\"fire\",{\"1\":{\"25\":3}}],[\"firefighter\",{\"1\":{\"25\":3}}],[\"fishing\",{\"1\":{\"25\":1}}],[\"fish\",{\"1\":{\"25\":4}}],[\"fist\",{\"1\":{\"25\":5}}],[\"function中还提供了一个将传入参数原样返回的实现\",{\"1\":{\"281\":1}}],[\"function\",{\"1\":{\"281\":7,\"357\":1,\"365\":2,\"367\":1,\"472\":2}}],[\"function<string\",{\"1\":{\"281\":1}}],[\"function<integer\",{\"1\":{\"281\":1}}],[\"function<\",{\"1\":{\"281\":2}}],[\"function<v\",{\"1\":{\"281\":1}}],[\"function<t\",{\"1\":{\"281\":3,\"427\":1}}],[\"function函数型函数式接口\",{\"1\":{\"281\":1}}],[\"functionalinterface\",{\"1\":{\"154\":3,\"281\":4,\"319\":1}}],[\"funeral\",{\"1\":{\"25\":1}}],[\"futuna\",{\"1\":{\"25\":1}}],[\"fulltext\",{\"1\":{\"109\":1}}],[\"full\",{\"1\":{\"25\":2}}],[\"fuelpump\",{\"1\":{\"25\":1}}],[\"fuji\",{\"1\":{\"25\":1}}],[\"fu\",{\"1\":{\"25\":1}}],[\"flex\",{\"1\":{\"474\":2}}],[\"fleur\",{\"1\":{\"25\":1}}],[\"flux\",{\"1\":{\"38\":1}}],[\"flushed\",{\"1\":{\"25\":1}}],[\"floats\",{\"1\":{\"349\":1}}],[\"floppy\",{\"1\":{\"25\":1}}],[\"flowing\",{\"1\":{\"25\":1}}],[\"flower\",{\"1\":{\"25\":3}}],[\"flow\",{\"1\":{\"21\":2}}],[\"flight\",{\"1\":{\"25\":2}}],[\"flipper\",{\"1\":{\"25\":1}}],[\"flag\",{\"1\":{\"25\":7}}],[\"flags\",{\"1\":{\"25\":2}}],[\"flashlight\",{\"1\":{\"25\":1}}],[\"flash\",{\"1\":{\"25\":1}}],[\"flat\",{\"1\":{\"25\":1}}],[\"flatbread\",{\"1\":{\"25\":2}}],[\"flamingo\",{\"1\":{\"25\":1}}],[\"flying\",{\"1\":{\"25\":2}}],[\"fly\",{\"1\":{\"25\":1}}],[\"font\",{\"1\":{\"474\":1}}],[\"fondue\",{\"1\":{\"25\":1}}],[\"fog\",{\"1\":{\"25\":1}}],[\"foggy\",{\"1\":{\"25\":1}}],[\"found\",{\"1\":{\"94\":1,\"487\":1}}],[\"fountain\",{\"1\":{\"25\":2}}],[\"four\",{\"1\":{\"25\":2,\"389\":1}}],[\"foo\",{\"1\":{\"412\":6}}],[\"food\",{\"1\":{\"25\":2}}],[\"football\",{\"1\":{\"25\":2}}],[\"footprints\",{\"1\":{\"25\":1}}],[\"foot\",{\"1\":{\"25\":1}}],[\"fox\",{\"1\":{\"25\":1}}],[\"forceautoproxycreatortoexposeproxy\",{\"1\":{\"456\":1}}],[\"forceautoproxycreatortouseclassproxying\",{\"1\":{\"456\":1}}],[\"formlogin\",{\"1\":{\"325\":1}}],[\"format\",{\"1\":{\"325\":2,\"426\":2}}],[\"foreach\",{\"1\":{\"154\":1,\"334\":3}}],[\"forname\",{\"1\":{\"98\":3,\"325\":3}}],[\"forward\",{\"1\":{\"25\":2}}],[\"forkjoinpool\",{\"1\":{\"243\":2}}],[\"fork\",{\"0\":{\"243\":1},\"1\":{\"25\":1,\"243\":2}}],[\"fortune\",{\"1\":{\"25\":1}}],[\"for\",{\"1\":{\"9\":1,\"83\":1,\"243\":1,\"279\":1,\"306\":4,\"309\":1,\"312\":1,\"325\":1,\"334\":2,\"351\":2,\"386\":2,\"399\":3,\"426\":2,\"472\":2}}],[\"folder\",{\"1\":{\"7\":4,\"25\":2,\"54\":1}}],[\"by\",{\"1\":{\"325\":2,\"347\":1,\"354\":1,\"358\":1,\"362\":1,\"368\":1,\"372\":1,\"379\":1,\"387\":1,\"393\":1,\"395\":1,\"400\":1,\"408\":1,\"414\":1,\"421\":1,\"424\":1,\"428\":1,\"430\":1,\"438\":1,\"443\":1}}],[\"bytes\",{\"1\":{\"386\":1}}],[\"byte\",{\"1\":{\"298\":1}}],[\"b=tmp\",{\"1\":{\"279\":1}}],[\"b=1\",{\"1\":{\"279\":1}}],[\"b+\",{\"1\":{\"113\":1}}],[\"bsrange=512\",{\"1\":{\"51\":1}}],[\"bs=16k\",{\"1\":{\"50\":5,\"51\":1}}],[\"bhutan\",{\"1\":{\"25\":1}}],[\"b\",{\"1\":{\"25\":1,\"103\":2,\"104\":1,\"240\":2,\"281\":2,\"287\":1,\"344\":3,\"360\":1,\"386\":2}}],[\"bill\",{\"1\":{\"43\":1}}],[\"billed\",{\"1\":{\"25\":1}}],[\"bindresource\",{\"1\":{\"83\":1}}],[\"bin\",{\"1\":{\"43\":1}}],[\"bits\",{\"1\":{\"349\":4}}],[\"bit\",{\"1\":{\"29\":1}}],[\"bissau\",{\"1\":{\"25\":1}}],[\"bison\",{\"1\":{\"25\":1}}],[\"biohazard\",{\"1\":{\"25\":1}}],[\"bicycles\",{\"1\":{\"25\":1}}],[\"bicyclist\",{\"1\":{\"25\":2}}],[\"bikini\",{\"1\":{\"25\":1}}],[\"biking\",{\"1\":{\"25\":4}}],[\"bike\",{\"1\":{\"25\":1}}],[\"birthday\",{\"1\":{\"25\":1,\"154\":1}}],[\"bird\",{\"1\":{\"25\":1}}],[\"bufupdater\",{\"1\":{\"298\":1}}],[\"buf\",{\"1\":{\"298\":2}}],[\"bufferedoutputstream\",{\"1\":{\"298\":1}}],[\"bufferedinputstream\",{\"1\":{\"298\":5}}],[\"buffer\",{\"1\":{\"29\":1,\"298\":3}}],[\"buffalo\",{\"1\":{\"25\":1}}],[\"bundle\",{\"1\":{\"76\":2}}],[\"builder<>\",{\"1\":{\"154\":1}}],[\"builder<t>\",{\"1\":{\"154\":5}}],[\"builder\",{\"1\":{\"154\":3,\"471\":1,\"473\":1,\"476\":2}}],[\"build\",{\"1\":{\"54\":2,\"154\":2,\"325\":1,\"472\":2,\"473\":3,\"476\":3,\"477\":3}}],[\"building\",{\"1\":{\"25\":2}}],[\"burundi\",{\"1\":{\"25\":1}}],[\"burkina\",{\"1\":{\"25\":1}}],[\"burrito\",{\"1\":{\"25\":1}}],[\"button>\",{\"1\":{\"474\":1}}],[\"button\",{\"1\":{\"25\":10,\"474\":1}}],[\"butter\",{\"1\":{\"25\":1}}],[\"butterfly\",{\"1\":{\"25\":1}}],[\"bucket\",{\"1\":{\"25\":1}}],[\"bulgaria\",{\"1\":{\"25\":1}}],[\"bulb\",{\"1\":{\"25\":1}}],[\"bullettrain\",{\"1\":{\"25\":2}}],[\"bug\",{\"1\":{\"25\":1}}],[\"busstop\",{\"1\":{\"25\":1}}],[\"bus\",{\"1\":{\"25\":2,\"32\":1}}],[\"busts\",{\"1\":{\"25\":1}}],[\"bust\",{\"1\":{\"25\":1,\"154\":4}}],[\"business\",{\"1\":{\"25\":1}}],[\"bubble\",{\"1\":{\"25\":4}}],[\"be\",{\"1\":{\"472\":2}}],[\"before\",{\"0\":{\"232\":1},\"1\":{\"281\":3}}],[\"bermuda\",{\"1\":{\"25\":1}}],[\"benin\",{\"1\":{\"25\":1}}],[\"bento\",{\"1\":{\"25\":1}}],[\"belize\",{\"1\":{\"25\":1}}],[\"belarus\",{\"1\":{\"25\":1}}],[\"belgium\",{\"1\":{\"25\":1}}],[\"bellhop\",{\"1\":{\"25\":1}}],[\"bell\",{\"1\":{\"25\":4}}],[\"beginner\",{\"1\":{\"25\":1}}],[\"behind\",{\"1\":{\"25\":3}}],[\"beverage\",{\"1\":{\"25\":1}}],[\"beers\",{\"1\":{\"25\":1}}],[\"beer\",{\"1\":{\"25\":1}}],[\"beetle\",{\"1\":{\"25\":2}}],[\"bee\",{\"1\":{\"25\":1}}],[\"beanpostprocessor的初始化之前后方法\",{\"1\":{\"460\":1}}],[\"beanpostprocessor的初始化之前方法\",{\"1\":{\"460\":1}}],[\"bean初始化方法\",{\"1\":{\"460\":1}}],[\"bean定义和bean工厂后置处理\",{\"1\":{\"460\":1}}],[\"bean定义\",{\"1\":{\"460\":2}}],[\"beandefinitionregistry\",{\"1\":{\"456\":1}}],[\"beanfactory\",{\"1\":{\"456\":1}}],[\"beanfactoryaware\",{\"1\":{\"456\":1}}],[\"beannameaware\",{\"1\":{\"456\":1}}],[\"bean之间也是具备继承关系的\",{\"1\":{\"455\":1}}],[\"beanclass\",{\"1\":{\"334\":9}}],[\"bean\",{\"0\":{\"460\":2,\"461\":1},\"1\":{\"73\":1,\"76\":1,\"98\":1,\"325\":3,\"455\":2,\"456\":2,\"460\":2}}],[\"beat\",{\"1\":{\"27\":2}}],[\"beads\",{\"1\":{\"25\":1}}],[\"beach\",{\"1\":{\"25\":1}}],[\"bear\",{\"1\":{\"25\":3}}],[\"bearded\",{\"1\":{\"25\":1}}],[\"beaver\",{\"1\":{\"25\":1}}],[\"bed\",{\"1\":{\"25\":2}}],[\"best\",{\"1\":{\"20\":1}}],[\"branch\",{\"1\":{\"54\":1}}],[\"branches\",{\"1\":{\"54\":1}}],[\"brazzaville\",{\"1\":{\"25\":1}}],[\"brazil\",{\"1\":{\"25\":1}}],[\"brain\",{\"1\":{\"25\":1}}],[\"brunei\",{\"1\":{\"25\":1}}],[\"british\",{\"1\":{\"25\":2}}],[\"brightness\",{\"1\":{\"25\":2}}],[\"briefcase\",{\"1\":{\"25\":1}}],[\"brief\",{\"1\":{\"25\":1}}],[\"bridge\",{\"1\":{\"25\":1,\"328\":2}}],[\"bride\",{\"1\":{\"25\":1}}],[\"bricks\",{\"1\":{\"25\":1}}],[\"breaking\",{\"1\":{\"426\":1}}],[\"break\",{\"1\":{\"407\":1}}],[\"bread\",{\"1\":{\"25\":2}}],[\"breast\",{\"1\":{\"25\":1}}],[\"browser=none\",{\"1\":{\"473\":1}}],[\"browser\",{\"1\":{\"472\":2}}],[\"browserwindow\",{\"1\":{\"472\":3}}],[\"brown\",{\"1\":{\"25\":3}}],[\"broom\",{\"1\":{\"25\":1}}],[\"broccoli\",{\"1\":{\"25\":1}}],[\"broken\",{\"1\":{\"25\":1}}],[\"baidu\",{\"1\":{\"484\":1}}],[\"baike\",{\"1\":{\"484\":1}}],[\"bahamas\",{\"1\":{\"25\":1}}],[\"bahrain\",{\"1\":{\"25\":1}}],[\"badge\",{\"1\":{\"25\":1}}],[\"badger\",{\"1\":{\"25\":1}}],[\"badminton\",{\"1\":{\"25\":1}}],[\"basic\",{\"1\":{\"327\":1}}],[\"basetask继承job\",{\"1\":{\"79\":1}}],[\"base=$dir\",{\"1\":{\"43\":1}}],[\"baseball\",{\"1\":{\"25\":1}}],[\"bash\",{\"1\":{\"43\":3}}],[\"basket\",{\"1\":{\"25\":1}}],[\"basketball\",{\"1\":{\"25\":3}}],[\"bamboo\",{\"1\":{\"25\":1}}],[\"barthelemy\",{\"1\":{\"25\":1}}],[\"barbados\",{\"1\":{\"25\":1}}],[\"barbuda\",{\"1\":{\"25\":1}}],[\"barber\",{\"1\":{\"25\":1}}],[\"bar\",{\"1\":{\"25\":2,\"412\":4,\"472\":1}}],[\"bacon\",{\"1\":{\"25\":1}}],[\"background\",{\"1\":{\"474\":1}}],[\"backtrace\",{\"1\":{\"349\":1}}],[\"backtrace=1`\",{\"1\":{\"349\":1}}],[\"backward\",{\"1\":{\"25\":1}}],[\"back\",{\"1\":{\"25\":2,\"59\":1}}],[\"baggage\",{\"1\":{\"25\":1}}],[\"bagel\",{\"1\":{\"25\":1}}],[\"baguette\",{\"1\":{\"25\":1}}],[\"bangladesh\",{\"1\":{\"25\":1}}],[\"bangbang\",{\"1\":{\"25\":1}}],[\"banjo\",{\"1\":{\"25\":1}}],[\"bank\",{\"1\":{\"25\":1}}],[\"banana\",{\"1\":{\"25\":1}}],[\"bandage\",{\"1\":{\"25\":2}}],[\"bandizip\",{\"1\":{\"21\":1}}],[\"battery\",{\"1\":{\"25\":1}}],[\"bat\",{\"1\":{\"25\":1}}],[\"bathtub\",{\"1\":{\"25\":1}}],[\"bath\",{\"1\":{\"25\":1}}],[\"balance\",{\"1\":{\"25\":1}}],[\"ballot\",{\"1\":{\"25\":2}}],[\"balloon\",{\"1\":{\"25\":3}}],[\"ballet\",{\"1\":{\"25\":1}}],[\"ball\",{\"1\":{\"25\":6}}],[\"bald\",{\"1\":{\"25\":3}}],[\"baby\",{\"1\":{\"25\":7}}],[\"botswana\",{\"1\":{\"25\":1}}],[\"bottle\",{\"1\":{\"25\":2}}],[\"bolivia\",{\"1\":{\"25\":1}}],[\"bolt\",{\"1\":{\"25\":1}}],[\"bosnia\",{\"1\":{\"25\":1}}],[\"bool\",{\"1\":{\"420\":1}}],[\"booleanvalue\",{\"1\":{\"70\":1}}],[\"boolean\",{\"1\":{\"70\":4,\"236\":1,\"281\":3,\"334\":2,\"456\":2}}],[\"bookmark\",{\"1\":{\"25\":2}}],[\"books\",{\"1\":{\"25\":1}}],[\"book\",{\"1\":{\"25\":6}}],[\"bootstarpclassloader用于加载jdk提供的类\",{\"1\":{\"317\":1}}],[\"boot整合druid链接池\",{\"1\":{\"83\":1}}],[\"boot一般都是通过\",{\"1\":{\"79\":1}}],[\"boot项目多个类implements于同一个接口类\",{\"0\":{\"79\":1}}],[\"boot项目quartz的job没法使用注解方式实例化对象\",{\"0\":{\"76\":1}}],[\"boot项目出现跨域问题\",{\"0\":{\"73\":1}}],[\"boot\",{\"0\":{\"43\":1,\"97\":1,\"324\":1,\"325\":1},\"1\":{\"25\":2},\"2\":{\"78\":1,\"81\":1,\"85\":1,\"331\":1}}],[\"boomerang\",{\"1\":{\"25\":1}}],[\"boom\",{\"1\":{\"25\":1}}],[\"boat\",{\"1\":{\"25\":2}}],[\"board\",{\"1\":{\"25\":1}}],[\"boar\",{\"1\":{\"25\":1}}],[\"boxsavelocks\",{\"1\":{\"244\":4}}],[\"boxing\",{\"1\":{\"25\":1}}],[\"box\",{\"1\":{\"25\":5}}],[\"bouvet\",{\"1\":{\"25\":1}}],[\"bouquet\",{\"1\":{\"25\":1}}],[\"bouncing\",{\"1\":{\"25\":3}}],[\"bowling\",{\"1\":{\"25\":1}}],[\"bowl\",{\"1\":{\"25\":1}}],[\"bowing\",{\"1\":{\"25\":2}}],[\"bow\",{\"1\":{\"25\":2}}],[\"boy\",{\"1\":{\"25\":21}}],[\"bone\",{\"1\":{\"25\":2}}],[\"bomb\",{\"1\":{\"25\":1}}],[\"blank2\",{\"1\":{\"399\":2}}],[\"blank1\",{\"1\":{\"399\":2}}],[\"black\",{\"1\":{\"25\":12}}],[\"blockingqueue<runnable>\",{\"1\":{\"242\":1}}],[\"blood\",{\"1\":{\"25\":1}}],[\"blossom\",{\"1\":{\"25\":2}}],[\"blowfish\",{\"1\":{\"25\":1}}],[\"blonde\",{\"1\":{\"25\":1}}],[\"blond\",{\"1\":{\"25\":3}}],[\"blog\",{\"1\":{\"20\":1}}],[\"blueberries\",{\"1\":{\"25\":1}}],[\"blue\",{\"1\":{\"25\":7}}],[\"blush\",{\"1\":{\"25\":1}}],[\"hh\",{\"1\":{\"70\":2,\"98\":1,\"325\":1}}],[\"h\",{\"1\":{\"60\":4,\"419\":2}}],[\"htmlredis下载\",{\"1\":{\"484\":1}}],[\"html\",{\"1\":{\"43\":1,\"472\":2,\"474\":1,\"484\":1}}],[\"httpbasic\",{\"1\":{\"325\":1}}],[\"httpmethod\",{\"1\":{\"325\":1}}],[\"httpmessageconverter<string>\",{\"1\":{\"98\":1,\"325\":1}}],[\"httpmessageconverter\",{\"1\":{\"98\":4,\"325\":4}}],[\"httpstatus\",{\"1\":{\"334\":1}}],[\"httpsecurity\",{\"1\":{\"325\":1}}],[\"https\",{\"0\":{\"91\":1},\"1\":{\"73\":1,\"92\":3,\"93\":2,\"466\":1,\"484\":4}}],[\"http\",{\"0\":{\"91\":1},\"1\":{\"27\":7,\"70\":7,\"92\":2,\"94\":2,\"325\":2,\"472\":1,\"484\":4}}],[\"hystrix\",{\"1\":{\"29\":3}}],[\"hi\",{\"1\":{\"360\":1}}],[\"hips\",{\"1\":{\"154\":4}}],[\"hippopotamus\",{\"1\":{\"25\":1}}],[\"high\",{\"1\":{\"25\":2}}],[\"hiking\",{\"1\":{\"25\":1}}],[\"hindu\",{\"1\":{\"25\":1}}],[\"hibiscus\",{\"1\":{\"25\":1}}],[\"height\",{\"1\":{\"419\":1,\"420\":3,\"472\":1,\"474\":2}}],[\"here\",{\"1\":{\"472\":1}}],[\"herzegovina\",{\"1\":{\"25\":1}}],[\"herb\",{\"1\":{\"25\":1}}],[\"hello\",{\"1\":{\"240\":1,\"281\":4,\"382\":2,\"384\":3,\"389\":1}}],[\"help\",{\"1\":{\"60\":1}}],[\"helena\",{\"1\":{\"25\":1}}],[\"helmet\",{\"1\":{\"25\":2}}],[\"helicopter\",{\"1\":{\"25\":1}}],[\"heel\",{\"1\":{\"25\":1}}],[\"hedgehog\",{\"1\":{\"25\":1}}],[\"health\",{\"1\":{\"25\":3}}],[\"heavy\",{\"1\":{\"25\":8}}],[\"heard\",{\"1\":{\"25\":1}}],[\"hearing\",{\"1\":{\"25\":1}}],[\"hear\",{\"1\":{\"25\":1}}],[\"heartbeat\",{\"1\":{\"25\":1}}],[\"heartpulse\",{\"1\":{\"25\":1}}],[\"heart\",{\"1\":{\"25\":22,\"356\":1}}],[\"hearts\",{\"1\":{\"25\":4}}],[\"header\",{\"1\":{\"70\":2,\"474\":1}}],[\"headerhandlerresolver\",{\"1\":{\"70\":3}}],[\"headerhandler\",{\"1\":{\"70\":3}}],[\"header>\",{\"1\":{\"70\":2}}],[\"heading\",{\"1\":{\"25\":2}}],[\"headstone\",{\"1\":{\"25\":1}}],[\"headscarf\",{\"1\":{\"25\":1}}],[\"headphones\",{\"1\":{\"25\":1}}],[\"head\",{\"1\":{\"25\":3}}],[\"hobby\",{\"1\":{\"154\":11}}],[\"home\",{\"1\":{\"60\":2}}],[\"honduras\",{\"1\":{\"25\":1}}],[\"hong\",{\"1\":{\"25\":1}}],[\"honey\",{\"1\":{\"25\":1}}],[\"honeybee\",{\"1\":{\"25\":1}}],[\"hook\",{\"1\":{\"25\":3}}],[\"horn\",{\"1\":{\"25\":1}}],[\"horse\",{\"1\":{\"25\":3}}],[\"hockey\",{\"1\":{\"25\":2}}],[\"hocho\",{\"1\":{\"25\":1}}],[\"hourglass\",{\"1\":{\"25\":2}}],[\"house\",{\"1\":{\"25\":3}}],[\"houses\",{\"1\":{\"25\":1}}],[\"hospital\",{\"1\":{\"25\":1}}],[\"hold\",{\"1\":{\"420\":1}}],[\"holdertouse\",{\"1\":{\"83\":7}}],[\"holder\",{\"0\":{\"82\":1},\"1\":{\"83\":2,\"157\":2}}],[\"holding\",{\"1\":{\"25\":3}}],[\"hole\",{\"1\":{\"25\":1}}],[\"hotsprings\",{\"1\":{\"25\":1}}],[\"hotel\",{\"1\":{\"25\":2}}],[\"hotdog\",{\"1\":{\"25\":1}}],[\"hot\",{\"1\":{\"25\":2}}],[\"happens\",{\"0\":{\"232\":1}}],[\"has\",{\"1\":{\"472\":1}}],[\"hasipaddress\",{\"1\":{\"325\":3}}],[\"hasconnection\",{\"1\":{\"83\":2}}],[\"hashset<>\",{\"1\":{\"334\":1}}],[\"hashmap<\",{\"1\":{\"440\":1}}],[\"hashmap<>\",{\"1\":{\"154\":2}}],[\"hashmap\",{\"0\":{\"439\":1},\"1\":{\"440\":2,\"441\":1}}],[\"hashmap并不是只使用简单的链地址法\",{\"1\":{\"295\":1}}],[\"hashmap支持自动扩容\",{\"1\":{\"295\":1}}],[\"hash\",{\"1\":{\"25\":1,\"483\":1}}],[\"haiti\",{\"1\":{\"25\":1}}],[\"haircolor\",{\"1\":{\"154\":1}}],[\"haircut\",{\"1\":{\"25\":3}}],[\"hair\",{\"1\":{\"25\":3}}],[\"haired\",{\"1\":{\"25\":9}}],[\"hammer\",{\"1\":{\"25\":3}}],[\"hamburger\",{\"1\":{\"25\":1}}],[\"hamster\",{\"1\":{\"25\":1}}],[\"hankey\",{\"1\":{\"25\":1}}],[\"handlefault\",{\"1\":{\"70\":1}}],[\"handlemessage\",{\"1\":{\"70\":1}}],[\"handlerchain\",{\"1\":{\"70\":3}}],[\"handlerresolver\",{\"1\":{\"70\":4}}],[\"handler\",{\"1\":{\"70\":8,\"242\":5,\"334\":3}}],[\"handler修改webservice客户端的soap头\",{\"1\":{\"70\":1}}],[\"handbag\",{\"1\":{\"25\":1}}],[\"handball\",{\"1\":{\"25\":3}}],[\"handshake\",{\"1\":{\"25\":1}}],[\"hands\",{\"1\":{\"25\":5}}],[\"hand\",{\"1\":{\"25\":15}}],[\"hatched\",{\"1\":{\"25\":1}}],[\"hatching\",{\"1\":{\"25\":1}}],[\"hat\",{\"1\":{\"25\":2}}],[\"hundred\",{\"1\":{\"389\":1}}],[\"hungary\",{\"1\":{\"25\":1}}],[\"hut\",{\"1\":{\"25\":1}}],[\"hutool\",{\"1\":{\"11\":1,\"334\":1,\"335\":1}}],[\"hugging\",{\"1\":{\"25\":1}}],[\"hugs\",{\"1\":{\"25\":1}}],[\"hushed\",{\"1\":{\"25\":1}}],[\"huorong\",{\"1\":{\"21\":1}}],[\"hsz\",{\"1\":{\"20\":1}}],[\"书栈网\",{\"1\":{\"19\":1}}],[\"免费电子书\",{\"1\":{\"19\":2}}],[\"zhihu\",{\"1\":{\"484\":1}}],[\"zhuanlan\",{\"1\":{\"484\":1}}],[\"zset\",{\"1\":{\"483\":1}}],[\"zxvf\",{\"1\":{\"60\":1}}],[\"z表示用gzip压缩\",{\"1\":{\"60\":1}}],[\"zcvf\",{\"1\":{\"60\":1}}],[\"zjiac\",{\"1\":{\"43\":1}}],[\"zuul处理的是http请求\",{\"1\":{\"30\":1}}],[\"zuul2\",{\"1\":{\"30\":1}}],[\"zuul\",{\"1\":{\"30\":2}}],[\"zookeeper\",{\"1\":{\"27\":3}}],[\"zombie\",{\"1\":{\"25\":3}}],[\"zip\",{\"1\":{\"43\":4}}],[\"zipper\",{\"1\":{\"25\":1}}],[\"zimbabwe\",{\"1\":{\"25\":1}}],[\"zealand\",{\"1\":{\"25\":1}}],[\"zero\",{\"1\":{\"25\":1}}],[\"zebra\",{\"1\":{\"25\":1}}],[\"zambia\",{\"1\":{\"25\":1}}],[\"zap\",{\"1\":{\"25\":1}}],[\"zany\",{\"1\":{\"25\":1}}],[\"zzz\",{\"1\":{\"25\":1}}],[\"z\",{\"1\":{\"19\":1,\"351\":1,\"356\":2,\"389\":1,\"412\":2}}],[\"周读\",{\"1\":{\"19\":1}}],[\"电子书\",{\"0\":{\"19\":1}}],[\"英配动漫网站\",{\"1\":{\"18\":1}}],[\"英配部落\",{\"1\":{\"18\":1}}],[\"英语\",{\"0\":{\"18\":1}}],[\"css\",{\"1\":{\"474\":3}}],[\"csrf\",{\"1\":{\"325\":1}}],[\"c++编写的程序以提升性能\",{\"1\":{\"249\":1}}],[\"c++的\",{\"1\":{\"249\":1}}],[\"ct\",{\"1\":{\"104\":6}}],[\"ctrl+shift+v\",{\"1\":{\"60\":1}}],[\"ctrl+shift+c\",{\"1\":{\"60\":1}}],[\"ctrl\",{\"1\":{\"60\":10}}],[\"c\",{\"1\":{\"27\":1,\"43\":1,\"60\":1,\"154\":6,\"287\":2,\"344\":3,\"356\":1,\"360\":1,\"386\":2}}],[\"cmd\",{\"1\":{\"27\":1,\"43\":2,\"472\":1}}],[\"cpu\",{\"1\":{\"349\":1}}],[\"cpu及内存利用率\",{\"1\":{\"21\":1}}],[\"cpio\",{\"1\":{\"59\":1}}],[\"cp=$base\",{\"1\":{\"43\":1}}],[\"cp\",{\"1\":{\"27\":5,\"43\":1,\"60\":3}}],[\"cp+ap\",{\"1\":{\"27\":1}}],[\"center\",{\"1\":{\"474\":3}}],[\"central\",{\"1\":{\"25\":1}}],[\"ceuta\",{\"1\":{\"25\":1}}],[\"czech\",{\"1\":{\"25\":1}}],[\"cyprus\",{\"1\":{\"25\":1}}],[\"cyclone\",{\"1\":{\"25\":1}}],[\"cn\",{\"1\":{\"25\":1,\"70\":4,\"484\":1}}],[\"cd\",{\"1\":{\"25\":1,\"43\":1,\"60\":4}}],[\"ciphercui\",{\"1\":{\"154\":1}}],[\"circle的方法\",{\"1\":{\"418\":1}}],[\"circle\",{\"1\":{\"25\":9,\"418\":4}}],[\"circus\",{\"1\":{\"25\":1}}],[\"cinema\",{\"1\":{\"25\":1}}],[\"city\",{\"1\":{\"25\":3}}],[\"cityscape\",{\"1\":{\"25\":1}}],[\"civitai\",{\"1\":{\"17\":1}}],[\"chrome\",{\"1\":{\"472\":1}}],[\"christmas\",{\"1\":{\"25\":2}}],[\"chmod\",{\"1\":{\"43\":1,\"60\":3}}],[\"chars\",{\"1\":{\"386\":1}}],[\"charset=utf\",{\"1\":{\"98\":1,\"325\":1}}],[\"charset\",{\"1\":{\"98\":3,\"325\":3}}],[\"char\",{\"0\":{\"356\":1},\"1\":{\"298\":1,\"299\":1}}],[\"chart\",{\"1\":{\"25\":4}}],[\"chad\",{\"1\":{\"25\":1}}],[\"chair\",{\"1\":{\"25\":1}}],[\"chains\",{\"1\":{\"25\":1}}],[\"champagne\",{\"1\":{\"25\":1}}],[\"church\",{\"1\":{\"25\":1}}],[\"chown\",{\"1\":{\"60\":3}}],[\"chopsticks\",{\"1\":{\"25\":1}}],[\"chocolate\",{\"1\":{\"25\":1}}],[\"checked\",{\"1\":{\"348\":1}}],[\"checkered\",{\"1\":{\"25\":1}}],[\"checkout\",{\"1\":{\"54\":2}}],[\"check\",{\"1\":{\"25\":3}}],[\"chess\",{\"1\":{\"25\":1}}],[\"chestnut\",{\"1\":{\"25\":1}}],[\"cheese\",{\"1\":{\"25\":1}}],[\"cherries\",{\"1\":{\"25\":1}}],[\"cherry\",{\"1\":{\"25\":1}}],[\"chile\",{\"1\":{\"25\":1}}],[\"children\",{\"1\":{\"25\":1}}],[\"child\",{\"1\":{\"25\":1,\"287\":1}}],[\"chime\",{\"1\":{\"25\":1}}],[\"chick\",{\"1\":{\"25\":3}}],[\"chicken\",{\"1\":{\"25\":1}}],[\"chipmunk\",{\"1\":{\"25\":1}}],[\"clear\",{\"1\":{\"154\":1,\"384\":1}}],[\"cl\",{\"1\":{\"25\":1}}],[\"clubs\",{\"1\":{\"25\":1}}],[\"clicked\",{\"1\":{\"472\":1}}],[\"client\",{\"1\":{\"27\":3}}],[\"clipperton\",{\"1\":{\"25\":1}}],[\"clipboard\",{\"1\":{\"25\":1}}],[\"clinking\",{\"1\":{\"25\":1}}],[\"climbing\",{\"1\":{\"25\":3}}],[\"class<t>\",{\"1\":{\"334\":1}}],[\"class<\",{\"1\":{\"334\":5}}],[\"classloader\",{\"1\":{\"317\":1}}],[\"class\",{\"1\":{\"70\":2,\"73\":2,\"76\":2,\"79\":1,\"98\":1,\"148\":1,\"151\":1,\"154\":3,\"157\":3,\"243\":2,\"244\":1,\"281\":2,\"293\":1,\"325\":1,\"333\":3,\"334\":11,\"335\":1,\"456\":3,\"474\":1}}],[\"classic\",{\"1\":{\"43\":1}}],[\"classical\",{\"1\":{\"25\":1}}],[\"classes\",{\"1\":{\"43\":8}}],[\"claim\",{\"1\":{\"25\":1}}],[\"clamp\",{\"1\":{\"25\":1}}],[\"claus\",{\"1\":{\"25\":2}}],[\"clapper\",{\"1\":{\"25\":1}}],[\"clap\",{\"1\":{\"25\":1}}],[\"clone\",{\"1\":{\"427\":2}}],[\"cloneable\",{\"1\":{\"293\":1}}],[\"closing\",{\"1\":{\"83\":1}}],[\"close\",{\"1\":{\"70\":1,\"83\":3,\"298\":2}}],[\"closed\",{\"1\":{\"25\":6,\"472\":2}}],[\"clothes\",{\"1\":{\"25\":1}}],[\"cloud集成\",{\"1\":{\"27\":1}}],[\"cloud原生自带\",{\"1\":{\"27\":1}}],[\"cloud技术选型\",{\"0\":{\"26\":1}}],[\"cloud\",{\"1\":{\"25\":8,\"29\":1,\"31\":2}}],[\"clockwise\",{\"1\":{\"25\":1}}],[\"clock930\",{\"1\":{\"25\":1}}],[\"clock9\",{\"1\":{\"25\":1}}],[\"clock830\",{\"1\":{\"25\":1}}],[\"clock8\",{\"1\":{\"25\":1}}],[\"clock730\",{\"1\":{\"25\":1}}],[\"clock7\",{\"1\":{\"25\":1}}],[\"clock630\",{\"1\":{\"25\":1}}],[\"clock6\",{\"1\":{\"25\":1}}],[\"clock530\",{\"1\":{\"25\":1}}],[\"clock5\",{\"1\":{\"25\":1}}],[\"clock430\",{\"1\":{\"25\":1}}],[\"clock4\",{\"1\":{\"25\":1}}],[\"clock330\",{\"1\":{\"25\":1}}],[\"clock3\",{\"1\":{\"25\":1}}],[\"clock230\",{\"1\":{\"25\":1}}],[\"clock2\",{\"1\":{\"25\":1}}],[\"clock1130\",{\"1\":{\"25\":1}}],[\"clock11\",{\"1\":{\"25\":1}}],[\"clock1030\",{\"1\":{\"25\":1}}],[\"clock10\",{\"1\":{\"25\":1}}],[\"clock130\",{\"1\":{\"25\":1}}],[\"clock1\",{\"1\":{\"25\":1}}],[\"clock1230\",{\"1\":{\"25\":1}}],[\"clock12\",{\"1\":{\"25\":1}}],[\"clock\",{\"1\":{\"25\":3}}],[\"clover\",{\"1\":{\"25\":1}}],[\"clown\",{\"1\":{\"25\":1}}],[\"cas无锁算法\",{\"1\":{\"298\":1}}],[\"cas操作时不仅需要提供预期值和修改值\",{\"1\":{\"240\":1}}],[\"cas操作使用的是cmpxchg指令\",{\"1\":{\"225\":1}}],[\"cas\",{\"1\":{\"225\":1}}],[\"cased\",{\"1\":{\"298\":1}}],[\"case\",{\"1\":{\"104\":1,\"298\":1,\"364\":1}}],[\"castle\",{\"1\":{\"25\":2}}],[\"cache\",{\"1\":{\"54\":1,\"334\":2}}],[\"cactus\",{\"1\":{\"25\":1}}],[\"caicos\",{\"1\":{\"25\":1}}],[\"cayman\",{\"1\":{\"25\":1}}],[\"cabinet\",{\"1\":{\"25\":1}}],[\"cableway\",{\"1\":{\"25\":1}}],[\"calc\",{\"1\":{\"474\":1}}],[\"calculate\",{\"1\":{\"389\":2}}],[\"caledonia\",{\"1\":{\"25\":1}}],[\"calendar\",{\"1\":{\"25\":2}}],[\"called\",{\"1\":{\"472\":1}}],[\"calling\",{\"1\":{\"25\":1}}],[\"call\",{\"1\":{\"25\":1}}],[\"capablebeanfactory\",{\"1\":{\"76\":2}}],[\"cap理论关注粒度是数据\",{\"1\":{\"27\":1}}],[\"cape\",{\"1\":{\"25\":1}}],[\"capital\",{\"1\":{\"25\":1}}],[\"capricorn\",{\"1\":{\"25\":1}}],[\"cap\",{\"1\":{\"25\":1,\"27\":1}}],[\"cambodia\",{\"1\":{\"25\":1}}],[\"cameroon\",{\"1\":{\"25\":1}}],[\"camera\",{\"1\":{\"25\":4}}],[\"camel\",{\"1\":{\"25\":2}}],[\"camping\",{\"1\":{\"25\":1}}],[\"cake\",{\"1\":{\"25\":3}}],[\"can\",{\"1\":{\"420\":1,\"472\":3}}],[\"cannotgetjdbcconnectionexception\",{\"1\":{\"83\":2}}],[\"canned\",{\"1\":{\"25\":1}}],[\"canary\",{\"1\":{\"25\":1}}],[\"canada\",{\"1\":{\"25\":1}}],[\"cancer\",{\"1\":{\"25\":1}}],[\"candle\",{\"1\":{\"25\":1}}],[\"candy\",{\"1\":{\"25\":1}}],[\"canoe\",{\"1\":{\"25\":1}}],[\"cane\",{\"1\":{\"25\":4}}],[\"caribbean\",{\"1\":{\"25\":1}}],[\"cart\",{\"1\":{\"25\":1}}],[\"cartwheeling\",{\"1\":{\"25\":3}}],[\"carpentry\",{\"1\":{\"25\":1}}],[\"card\",{\"1\":{\"25\":4}}],[\"cards\",{\"1\":{\"25\":1}}],[\"car\",{\"1\":{\"25\":7}}],[\"carousel\",{\"1\":{\"25\":1}}],[\"carrot\",{\"1\":{\"25\":1}}],[\"care\",{\"1\":{\"25\":1}}],[\"catch\",{\"1\":{\"70\":2,\"83\":3,\"298\":1,\"299\":2,\"306\":1,\"309\":1,\"312\":1,\"472\":1}}],[\"cat2\",{\"1\":{\"25\":1}}],[\"cat\",{\"1\":{\"25\":11,\"60\":2,\"356\":1}}],[\"cunha\",{\"1\":{\"25\":1}}],[\"cuba\",{\"1\":{\"25\":1}}],[\"cube\",{\"1\":{\"25\":1}}],[\"customer\",{\"1\":{\"79\":1}}],[\"customjobfactory\",{\"1\":{\"76\":2}}],[\"customs\",{\"1\":{\"25\":1}}],[\"custard\",{\"1\":{\"25\":1}}],[\"cup\",{\"1\":{\"25\":1}}],[\"cupcake\",{\"1\":{\"25\":1}}],[\"cupid\",{\"1\":{\"25\":1}}],[\"cutlery\",{\"1\":{\"25\":1}}],[\"cut\",{\"1\":{\"25\":1}}],[\"cucumber\",{\"1\":{\"25\":1}}],[\"curacao\",{\"1\":{\"25\":1}}],[\"currentthread\",{\"1\":{\"243\":1}}],[\"currenttime\",{\"1\":{\"70\":2}}],[\"current\",{\"1\":{\"70\":1,\"327\":1}}],[\"currency\",{\"1\":{\"25\":1}}],[\"curry\",{\"1\":{\"25\":1}}],[\"curl\",{\"1\":{\"25\":1}}],[\"curling\",{\"1\":{\"25\":1}}],[\"curly\",{\"1\":{\"25\":4}}],[\"cursing\",{\"1\":{\"25\":1}}],[\"createwindow\",{\"1\":{\"472\":3}}],[\"create\",{\"1\":{\"468\":1,\"472\":3}}],[\"createjobinstance\",{\"1\":{\"76\":2}}],[\"cream\",{\"1\":{\"25\":1}}],[\"credit\",{\"1\":{\"25\":1}}],[\"crescent\",{\"1\":{\"25\":4}}],[\"crayon\",{\"1\":{\"25\":1}}],[\"crab\",{\"1\":{\"25\":1}}],[\"cracker\",{\"1\":{\"25\":1}}],[\"cricket\",{\"1\":{\"25\":2}}],[\"croatia\",{\"1\":{\"25\":1}}],[\"crown\",{\"1\":{\"25\":1}}],[\"croissant\",{\"1\":{\"25\":1}}],[\"crocodile\",{\"1\":{\"25\":1}}],[\"cross\",{\"0\":{\"469\":1},\"1\":{\"25\":3,\"469\":1,\"473\":2}}],[\"crossing\",{\"1\":{\"25\":1}}],[\"crossed\",{\"1\":{\"25\":3}}],[\"crossbones\",{\"1\":{\"25\":1}}],[\"crystal\",{\"1\":{\"25\":1}}],[\"crying\",{\"1\":{\"25\":1}}],[\"cry\",{\"1\":{\"25\":1}}],[\"coding\",{\"0\":{\"491\":1}}],[\"code\",{\"1\":{\"472\":1}}],[\"corepoolsize\",{\"1\":{\"242\":6}}],[\"cors\",{\"1\":{\"325\":1}}],[\"corsconfigurationsource\",{\"1\":{\"325\":1}}],[\"corsconfiguration\",{\"1\":{\"73\":8}}],[\"corsfilter\",{\"1\":{\"73\":3}}],[\"corsregistry\",{\"1\":{\"73\":2}}],[\"corn\",{\"1\":{\"25\":1}}],[\"cosul\",{\"1\":{\"27\":1}}],[\"costa\",{\"1\":{\"25\":1}}],[\"cote\",{\"1\":{\"25\":1}}],[\"cool\",{\"1\":{\"25\":1}}],[\"cookie\",{\"1\":{\"25\":2}}],[\"cook\",{\"1\":{\"25\":4}}],[\"coffin\",{\"1\":{\"25\":1}}],[\"coffee\",{\"1\":{\"25\":1}}],[\"course\",{\"1\":{\"401\":1,\"451\":1}}],[\"could\",{\"1\":{\"83\":2}}],[\"counterclockwise\",{\"1\":{\"25\":1}}],[\"couch\",{\"1\":{\"25\":1}}],[\"couplekiss\",{\"1\":{\"25\":4}}],[\"couple\",{\"1\":{\"25\":5}}],[\"coin\",{\"1\":{\"25\":1}}],[\"cover\",{\"1\":{\"25\":1,\"29\":1}}],[\"coat\",{\"1\":{\"25\":2}}],[\"coaster\",{\"1\":{\"25\":1}}],[\"common\",{\"1\":{\"472\":2}}],[\"commonjs\",{\"1\":{\"472\":1}}],[\"comment\",{\"1\":{\"104\":2}}],[\"com\",{\"1\":{\"43\":2,\"73\":1,\"154\":2,\"334\":1,\"476\":1,\"484\":3}}],[\"comoros\",{\"1\":{\"25\":1}}],[\"comet\",{\"1\":{\"25\":1}}],[\"compileroptions\",{\"1\":{\"472\":1}}],[\"compose\",{\"0\":{\"328\":1},\"1\":{\"281\":2}}],[\"component<props\",{\"1\":{\"474\":1}}],[\"componentscan\",{\"1\":{\"98\":1,\"325\":1,\"334\":1}}],[\"component\",{\"1\":{\"14\":1,\"76\":1,\"79\":1,\"334\":1}}],[\"compute\",{\"1\":{\"243\":1}}],[\"computer\",{\"1\":{\"25\":3}}],[\"compareandset\",{\"1\":{\"240\":1,\"298\":1}}],[\"compare\",{\"1\":{\"225\":1}}],[\"compass\",{\"1\":{\"25\":1}}],[\"cocos\",{\"1\":{\"25\":1}}],[\"coconut\",{\"1\":{\"25\":1}}],[\"cocktail\",{\"1\":{\"25\":1}}],[\"cockroach\",{\"1\":{\"25\":1}}],[\"cow2\",{\"1\":{\"25\":1}}],[\"cow\",{\"1\":{\"25\":1}}],[\"cowboy\",{\"1\":{\"25\":1}}],[\"concatenate\",{\"1\":{\"384\":1}}],[\"concat\",{\"1\":{\"104\":1}}],[\"convert\",{\"1\":{\"334\":6}}],[\"converter\",{\"1\":{\"98\":3,\"325\":3}}],[\"converters\",{\"1\":{\"98\":3,\"325\":3}}],[\"convenience\",{\"1\":{\"25\":1}}],[\"con\",{\"1\":{\"83\":13}}],[\"conholder\",{\"1\":{\"83\":16}}],[\"connectionequals\",{\"1\":{\"83\":1}}],[\"connectionsynchronization\",{\"1\":{\"83\":1}}],[\"connectionholder\",{\"1\":{\"83\":6}}],[\"connection\",{\"0\":{\"82\":1},\"1\":{\"83\":16}}],[\"content\",{\"1\":{\"426\":3,\"474\":1}}],[\"contextisolation\",{\"1\":{\"466\":1,\"472\":1}}],[\"context\",{\"1\":{\"70\":2}}],[\"container\",{\"1\":{\"328\":2}}],[\"control\",{\"1\":{\"25\":2,\"455\":1}}],[\"console\",{\"1\":{\"472\":1,\"474\":1}}],[\"consumer<student>\",{\"1\":{\"281\":2}}],[\"consumer<\",{\"1\":{\"281\":1}}],[\"consumer<t>\",{\"1\":{\"154\":3,\"281\":2}}],[\"consumer消费型函数式接口\",{\"1\":{\"281\":1}}],[\"consumer3<t\",{\"1\":{\"154\":2}}],[\"consumer2<t\",{\"1\":{\"154\":2}}],[\"consumer\",{\"1\":{\"154\":9,\"281\":4}}],[\"consumer1<t\",{\"1\":{\"154\":2}}],[\"consul\",{\"1\":{\"27\":2}}],[\"constructor\",{\"1\":{\"474\":1}}],[\"construction\",{\"1\":{\"25\":5}}],[\"consts\",{\"1\":{\"418\":1}}],[\"const\",{\"1\":{\"111\":1,\"345\":2,\"424\":1,\"472\":5,\"474\":1}}],[\"consistency\",{\"1\":{\"27\":1}}],[\"congo\",{\"1\":{\"25\":2}}],[\"congratulations\",{\"1\":{\"25\":1}}],[\"conf\",{\"1\":{\"43\":1}}],[\"configs\",{\"1\":{\"327\":3}}],[\"configuremessageconverters\",{\"1\":{\"98\":1,\"325\":1}}],[\"configuration\",{\"1\":{\"73\":2,\"76\":1,\"98\":1,\"325\":1}}],[\"config\",{\"0\":{\"470\":1},\"1\":{\"31\":3,\"466\":1,\"470\":3}}],[\"confetti\",{\"1\":{\"25\":1}}],[\"confounded\",{\"1\":{\"25\":1}}],[\"confused\",{\"1\":{\"25\":1}}],[\"copy\",{\"1\":{\"43\":1}}],[\"copyright\",{\"1\":{\"25\":1}}],[\"cop\",{\"1\":{\"25\":1}}],[\"color\",{\"1\":{\"474\":3}}],[\"colombia\",{\"1\":{\"25\":1}}],[\"collect\",{\"1\":{\"440\":2}}],[\"collections\",{\"1\":{\"244\":1,\"440\":1}}],[\"collision\",{\"1\":{\"25\":1}}],[\"columns\",{\"1\":{\"104\":2}}],[\"column\",{\"1\":{\"104\":5,\"474\":1}}],[\"cold\",{\"1\":{\"25\":2}}],[\"aware子接口\",{\"1\":{\"456\":1}}],[\"aware\",{\"1\":{\"456\":1}}],[\"away\",{\"0\":{\"0\":1}}],[\"aopconfigutils\",{\"1\":{\"456\":3}}],[\"aop\",{\"0\":{\"458\":1},\"1\":{\"334\":1,\"458\":1}}],[\"aof\",{\"1\":{\"120\":1}}],[\"a=b\",{\"1\":{\"279\":1}}],[\"a=1\",{\"1\":{\"279\":1}}],[\"a+b\",{\"1\":{\"279\":1}}],[\"age\",{\"1\":{\"154\":1}}],[\"active\",{\"1\":{\"472\":1}}],[\"activate\",{\"1\":{\"472\":1}}],[\"action\",{\"1\":{\"54\":1}}],[\"actions\",{\"0\":{\"54\":1},\"1\":{\"54\":2}}],[\"actuator\",{\"1\":{\"325\":3,\"327\":1}}],[\"acc\",{\"1\":{\"242\":1}}],[\"accesscontroller\",{\"1\":{\"242\":1}}],[\"access\",{\"1\":{\"70\":1,\"325\":2}}],[\"accept\",{\"1\":{\"25\":1,\"154\":7,\"281\":5}}],[\"accordion\",{\"1\":{\"25\":1}}],[\"a恢复后自动回切\",{\"1\":{\"29\":1}}],[\"availability\",{\"1\":{\"27\":1}}],[\"avocado\",{\"1\":{\"25\":1}}],[\"apt\",{\"1\":{\"49\":2}}],[\"appid\",{\"1\":{\"476\":1}}],[\"append\",{\"1\":{\"325\":4,\"334\":1,\"384\":2}}],[\"apply\",{\"1\":{\"281\":9}}],[\"applications\",{\"1\":{\"472\":1}}],[\"applicationeventpublisheraware\",{\"1\":{\"456\":1}}],[\"applicationcontext\",{\"1\":{\"456\":1}}],[\"applicationcontextaware\",{\"1\":{\"456\":1}}],[\"application\",{\"1\":{\"98\":1,\"325\":1}}],[\"apple\",{\"1\":{\"25\":2}}],[\"app\",{\"0\":{\"469\":1,\"470\":1},\"1\":{\"43\":5,\"327\":1,\"468\":1,\"469\":1,\"472\":7,\"473\":3,\"474\":11,\"476\":1}}],[\"apollo\",{\"1\":{\"31\":1}}],[\"apis\",{\"1\":{\"472\":1}}],[\"api\",{\"1\":{\"30\":1,\"43\":12,\"327\":1,\"470\":3}}],[\"ap\",{\"1\":{\"27\":3}}],[\"azerbaijan\",{\"1\":{\"25\":1}}],[\"auth\",{\"1\":{\"327\":1}}],[\"authenticated\",{\"1\":{\"325\":3}}],[\"authorizerequests\",{\"1\":{\"325\":3}}],[\"author\",{\"1\":{\"70\":2,\"154\":1,\"426\":2}}],[\"autowirebean\",{\"1\":{\"76\":1}}],[\"autowirecapablebeanfactory\",{\"1\":{\"76\":1}}],[\"autowired注入\",{\"1\":{\"455\":1}}],[\"autowired注解会有问题\",{\"1\":{\"79\":1}}],[\"autowired字段注入\",{\"1\":{\"455\":1}}],[\"autowired默认是bytype\",{\"1\":{\"455\":1}}],[\"autowired去注入\",{\"1\":{\"79\":1}}],[\"autowired\",{\"1\":{\"76\":1,\"79\":2,\"325\":1,\"334\":1}}],[\"auto\",{\"1\":{\"25\":1}}],[\"automobile\",{\"1\":{\"25\":1}}],[\"aux\",{\"1\":{\"60\":1}}],[\"australia\",{\"1\":{\"25\":1}}],[\"austria\",{\"1\":{\"25\":1}}],[\"after\",{\"1\":{\"281\":6,\"472\":1}}],[\"afghanistan\",{\"1\":{\"25\":1}}],[\"african\",{\"1\":{\"25\":1}}],[\"africa\",{\"1\":{\"25\":2}}],[\"aba\",{\"0\":{\"240\":1}}],[\"abacus\",{\"1\":{\"25\":1}}],[\"abstractsequentiallist<e>\",{\"1\":{\"293\":1}}],[\"abstractfactory\",{\"1\":{\"151\":1}}],[\"abstract\",{\"1\":{\"148\":2,\"151\":3}}],[\"ab\",{\"1\":{\"25\":1}}],[\"abc\",{\"1\":{\"25\":1,\"349\":9}}],[\"abcd\",{\"1\":{\"25\":2}}],[\"aquarius\",{\"1\":{\"25\":1}}],[\"advice\",{\"1\":{\"458\":1}}],[\"advantage\",{\"1\":{\"25\":1}}],[\"adaptablejobfactory\",{\"1\":{\"76\":1}}],[\"addeventlistener\",{\"1\":{\"472\":1}}],[\"addgift\",{\"1\":{\"154\":4}}],[\"addhobby\",{\"1\":{\"154\":4}}],[\"addheader\",{\"1\":{\"70\":1}}],[\"address\",{\"1\":{\"154\":1}}],[\"addallowedmethod\",{\"1\":{\"73\":1}}],[\"addallowedheader\",{\"1\":{\"73\":1}}],[\"addallowedorigin\",{\"1\":{\"73\":1}}],[\"addattribute\",{\"1\":{\"70\":1}}],[\"addmapping\",{\"1\":{\"73\":2}}],[\"addcorsmappings\",{\"1\":{\"73\":2}}],[\"addchildelement\",{\"1\":{\"70\":4}}],[\"addtextnode\",{\"1\":{\"70\":2}}],[\"add\",{\"1\":{\"43\":2,\"70\":1,\"98\":3,\"154\":7,\"325\":3,\"348\":1,\"349\":1,\"364\":1,\"384\":2,\"469\":1,\"471\":1,\"476\":1}}],[\"admin\",{\"1\":{\"36\":1,\"327\":1}}],[\"adhesive\",{\"1\":{\"25\":1}}],[\"adult\",{\"1\":{\"25\":2}}],[\"axe\",{\"1\":{\"25\":1}}],[\"also\",{\"1\":{\"472\":1}}],[\"always\",{\"1\":{\"328\":2}}],[\"allowtochangeinstallationdirectory\",{\"1\":{\"476\":2}}],[\"allowedorigins\",{\"1\":{\"73\":2}}],[\"allowedmethods\",{\"1\":{\"73\":2}}],[\"allowedheaders\",{\"1\":{\"73\":2}}],[\"allfields\",{\"1\":{\"334\":11}}],[\"all\",{\"1\":{\"111\":1,\"472\":2}}],[\"alter\",{\"1\":{\"104\":1}}],[\"alternation\",{\"1\":{\"25\":1}}],[\"align\",{\"1\":{\"474\":2}}],[\"alive\",{\"1\":{\"27\":1}}],[\"alien\",{\"1\":{\"25\":1}}],[\"algeria\",{\"1\":{\"25\":1}}],[\"aland\",{\"1\":{\"25\":1}}],[\"alarm\",{\"1\":{\"25\":1}}],[\"albania\",{\"1\":{\"25\":1}}],[\"alembic\",{\"1\":{\"25\":1}}],[\"aerial\",{\"1\":{\"25\":1}}],[\"attributesfor\",{\"1\":{\"456\":1}}],[\"attemptstamp\",{\"1\":{\"240\":1}}],[\"atomicstampedreference<>\",{\"1\":{\"240\":1}}],[\"atomicstampedreference<string>\",{\"1\":{\"240\":1}}],[\"atomicboolean\",{\"1\":{\"239\":1}}],[\"atomiclong\",{\"1\":{\"239\":1}}],[\"atomicinteger\",{\"1\":{\"239\":1}}],[\"atom\",{\"1\":{\"25\":1}}],[\"atm\",{\"1\":{\"25\":1}}],[\"athletic\",{\"1\":{\"25\":1}}],[\"at\",{\"1\":{\"25\":1,\"349\":1}}],[\"asset\",{\"1\":{\"476\":1}}],[\"assertion\",{\"1\":{\"349\":1}}],[\"assert\",{\"1\":{\"83\":1,\"334\":1,\"344\":1,\"349\":2,\"375\":2,\"412\":2}}],[\"async\",{\"1\":{\"456\":1,\"474\":1}}],[\"as\",{\"0\":{\"352\":1},\"1\":{\"384\":1,\"472\":1}}],[\"aspectjautoproxyregistrar\",{\"1\":{\"456\":3}}],[\"aspect\",{\"1\":{\"334\":1,\"458\":1}}],[\"ascension\",{\"1\":{\"25\":1}}],[\"asia\",{\"1\":{\"25\":1}}],[\"asterisk\",{\"1\":{\"25\":2}}],[\"astronaut\",{\"1\":{\"25\":3}}],[\"astonished\",{\"1\":{\"25\":1}}],[\"american\",{\"1\":{\"25\":1}}],[\"americas\",{\"1\":{\"25\":1}}],[\"amulet\",{\"1\":{\"25\":1}}],[\"ambulance\",{\"1\":{\"25\":1}}],[\"amphora\",{\"1\":{\"25\":1}}],[\"are\",{\"1\":{\"472\":2}}],[\"area\",{\"1\":{\"418\":1,\"420\":1}}],[\"around\",{\"1\":{\"334\":1}}],[\"args\",{\"1\":{\"154\":2,\"157\":1,\"235\":1,\"240\":1,\"243\":1,\"279\":1,\"281\":10,\"298\":1,\"299\":2,\"305\":1,\"306\":2,\"309\":1,\"312\":1}}],[\"argentina\",{\"1\":{\"25\":1}}],[\"arch\",{\"1\":{\"54\":2}}],[\"aruba\",{\"1\":{\"25\":1}}],[\"arabia\",{\"1\":{\"25\":1}}],[\"arab\",{\"1\":{\"25\":1}}],[\"aries\",{\"1\":{\"25\":1}}],[\"array<string>\",{\"1\":{\"474\":1}}],[\"arrays\",{\"1\":{\"399\":2}}],[\"arrays是一个二维数组\",{\"1\":{\"399\":1}}],[\"arrayutil\",{\"1\":{\"334\":1}}],[\"arraylist<>\",{\"1\":{\"98\":1,\"154\":3,\"325\":1}}],[\"arraylist<handler>\",{\"1\":{\"70\":1}}],[\"arraylist\",{\"1\":{\"70\":1}}],[\"arrows\",{\"1\":{\"25\":3}}],[\"arrow\",{\"1\":{\"25\":22}}],[\"arrival\",{\"1\":{\"25\":1}}],[\"art\",{\"1\":{\"25\":1}}],[\"arts\",{\"1\":{\"25\":2}}],[\"artificial\",{\"1\":{\"25\":1}}],[\"articulated\",{\"1\":{\"25\":1}}],[\"artist\",{\"1\":{\"25\":3}}],[\"armenia\",{\"1\":{\"25\":1}}],[\"arm\",{\"1\":{\"25\":1}}],[\"any\",{\"1\":{\"474\":1}}],[\"animation\",{\"1\":{\"474\":1}}],[\"another\",{\"1\":{\"365\":2}}],[\"annotatedelement\",{\"1\":{\"334\":1}}],[\"annotationconfigutils\",{\"1\":{\"456\":1}}],[\"annotationattributes\",{\"1\":{\"456\":1}}],[\"annotationmetadata\",{\"1\":{\"456\":1}}],[\"annotation\",{\"1\":{\"79\":1,\"334\":1}}],[\"ancestor\",{\"1\":{\"287\":1}}],[\"anchor\",{\"1\":{\"25\":1}}],[\"antd\",{\"0\":{\"465\":1},\"1\":{\"466\":1,\"474\":2,\"478\":1},\"2\":{\"481\":1}}],[\"antmatchers\",{\"1\":{\"325\":3}}],[\"antarctica\",{\"1\":{\"25\":1}}],[\"antigua\",{\"1\":{\"25\":1}}],[\"ant\",{\"1\":{\"25\":1}}],[\"anatomical\",{\"1\":{\"25\":1}}],[\"andthen可以将当前实现的返回值进行进一步的处理\",{\"1\":{\"281\":1}}],[\"andthen\",{\"1\":{\"281\":5}}],[\"andorra\",{\"1\":{\"25\":1}}],[\"and\",{\"1\":{\"25\":10,\"70\":1,\"104\":1,\"225\":1,\"281\":2,\"325\":7,\"472\":4}}],[\"angola\",{\"1\":{\"25\":1}}],[\"anguilla\",{\"1\":{\"25\":1}}],[\"anguished\",{\"1\":{\"25\":1}}],[\"angel\",{\"1\":{\"25\":1}}],[\"anger\",{\"1\":{\"25\":2}}],[\"angry\",{\"1\":{\"25\":1}}],[\"a\",{\"1\":{\"20\":1,\"25\":2,\"27\":1,\"60\":2,\"73\":1,\"79\":2,\"103\":2,\"104\":1,\"240\":4,\"279\":1,\"298\":1,\"325\":2,\"344\":3,\"351\":1,\"360\":2,\"399\":8,\"412\":2,\"472\":1}}],[\"airplane\",{\"1\":{\"25\":2}}],[\"aid\",{\"1\":{\"25\":1}}],[\"ai\",{\"0\":{\"17\":1}}],[\"v2\",{\"1\":{\"328\":1}}],[\"v>\",{\"1\":{\"281\":2}}],[\"v4\",{\"1\":{\"54\":1}}],[\"v3\",{\"1\":{\"54\":2}}],[\"val\",{\"1\":{\"384\":1}}],[\"valid\",{\"1\":{\"325\":1,\"334\":1}}],[\"validation\",{\"1\":{\"87\":1}}],[\"value等多种数据结构的存储系统\",{\"1\":{\"483\":1}}],[\"value存储系统\",{\"1\":{\"483\":1}}],[\"valueof\",{\"1\":{\"98\":1,\"325\":1}}],[\"value\",{\"1\":{\"79\":1,\"154\":3,\"325\":1,\"346\":2,\"361\":1,\"365\":2,\"366\":1,\"389\":1}}],[\"variable\",{\"1\":{\"349\":1}}],[\"var\",{\"1\":{\"328\":1}}],[\"var4\",{\"1\":{\"83\":2}}],[\"var3\",{\"1\":{\"83\":2}}],[\"var2\",{\"1\":{\"83\":2}}],[\"vanuatu\",{\"1\":{\"25\":1}}],[\"vatican\",{\"1\":{\"25\":1}}],[\"vampire\",{\"1\":{\"25\":3}}],[\"vs\",{\"1\":{\"25\":1}}],[\"vhs\",{\"1\":{\"25\":1}}],[\"vector\",{\"0\":{\"431\":1},\"1\":{\"397\":1}}],[\"vec\",{\"1\":{\"360\":1,\"412\":1,\"432\":2,\"440\":2}}],[\"vec<f64>\",{\"1\":{\"360\":1}}],[\"venezuela\",{\"1\":{\"25\":1}}],[\"versions\",{\"1\":{\"472\":1}}],[\"version`\",{\"1\":{\"472\":1}}],[\"version=1\",{\"1\":{\"98\":1,\"325\":1}}],[\"version\",{\"1\":{\"54\":1,\"328\":1}}],[\"verde\",{\"1\":{\"25\":1}}],[\"vertical\",{\"1\":{\"25\":1}}],[\"vest\",{\"1\":{\"25\":1}}],[\"veil\",{\"1\":{\"25\":4}}],[\"v\",{\"1\":{\"25\":1,\"281\":4,\"334\":1,\"412\":2,\"434\":3}}],[\"vulcan\",{\"1\":{\"25\":1}}],[\"vuepress\",{\"1\":{\"54\":1}}],[\"vue\",{\"1\":{\"14\":1}}],[\"void\",{\"1\":{\"70\":1,\"73\":2,\"83\":3,\"98\":1,\"154\":8,\"157\":1,\"235\":1,\"240\":1,\"243\":1,\"279\":1,\"281\":12,\"298\":2,\"299\":2,\"305\":1,\"306\":2,\"309\":1,\"312\":1,\"325\":1,\"334\":2,\"456\":1}}],[\"volatile\",{\"0\":{\"231\":1},\"1\":{\"157\":1}}],[\"volumes\",{\"1\":{\"328\":2}}],[\"volume\",{\"1\":{\"43\":1}}],[\"volleyball\",{\"1\":{\"25\":1}}],[\"volcano\",{\"1\":{\"25\":1}}],[\"vomiting\",{\"1\":{\"25\":1}}],[\"vocabulary\",{\"1\":{\"18\":1}}],[\"vietnam\",{\"1\":{\"25\":1}}],[\"virgin\",{\"1\":{\"25\":2}}],[\"virgo\",{\"1\":{\"25\":1}}],[\"vincent\",{\"1\":{\"25\":1}}],[\"vibration\",{\"1\":{\"25\":1}}],[\"violin\",{\"1\":{\"25\":1}}],[\"video\",{\"1\":{\"25\":2}}],[\"visit\",{\"1\":{\"20\":1}}],[\"vim三种模式\",{\"1\":{\"60\":1}}],[\"vim\",{\"1\":{\"16\":1,\"60\":2,\"61\":1},\"2\":{\"63\":1}}],[\"到\",{\"1\":{\"16\":1,\"44\":1,\"348\":1}}],[\"从只有原始类型\",{\"1\":{\"333\":1}}],[\"从根节点开始\",{\"1\":{\"288\":1}}],[\"从根结点开始一直到某个结点的整条路径的所有结点\",{\"1\":{\"287\":1}}],[\"从gc\",{\"1\":{\"268\":1}}],[\"从而导致出错\",{\"1\":{\"383\":1}}],[\"从而使得代码更容易维护\",{\"1\":{\"149\":1}}],[\"从而出现错误\",{\"1\":{\"98\":1}}],[\"从而实例然后调用\",{\"1\":{\"79\":1}}],[\"从而做出改变\",{\"1\":{\"31\":1}}],[\"从而发起调用\",{\"1\":{\"27\":1}}],[\"从\",{\"1\":{\"16\":1,\"44\":1}}],[\"从入门到实践\",{\"1\":{\"16\":1,\"44\":1}}],[\"便于理解b+树等数据结构\",{\"1\":{\"15\":1}}],[\"教程\",{\"1\":{\"14\":2}}],[\"和其它语言一样\",{\"1\":{\"434\":1}}],[\"和匿名内部类不同\",{\"1\":{\"280\":1}}],[\"和服务注册中心\",{\"1\":{\"27\":1}}],[\"和\",{\"0\":{\"293\":1,\"309\":1,\"326\":1,\"409\":1},\"1\":{\"14\":1,\"21\":1,\"94\":2,\"103\":1,\"116\":1,\"204\":1,\"349\":1,\"399\":1,\"456\":1,\"466\":1}}],[\"pdai\",{\"1\":{\"484\":1}}],[\"pdf\",{\"1\":{\"21\":2}}],[\"p3\",{\"1\":{\"154\":5}}],[\"p3>\",{\"1\":{\"154\":3}}],[\"p2\",{\"1\":{\"154\":13,\"384\":2}}],[\"p2>\",{\"1\":{\"154\":3}}],[\"p1\",{\"1\":{\"154\":19,\"384\":2}}],[\"p1>\",{\"1\":{\"154\":2}}],[\"p粘贴\",{\"1\":{\"60\":1}}],[\"ps\",{\"1\":{\"60\":4}}],[\"pwd\",{\"1\":{\"43\":1,\"60\":2}}],[\"p\",{\"1\":{\"27\":1,\"43\":2,\"60\":1,\"473\":2,\"484\":2}}],[\"phantom\",{\"1\":{\"270\":1}}],[\"php\",{\"1\":{\"204\":1}}],[\"philippines\",{\"1\":{\"25\":1}}],[\"phones\",{\"1\":{\"25\":1}}],[\"phone\",{\"1\":{\"25\":2,\"151\":1}}],[\"plus\",{\"1\":{\"25\":1,\"366\":2}}],[\"plunger\",{\"1\":{\"25\":1}}],[\"plug\",{\"1\":{\"25\":1}}],[\"platform\",{\"1\":{\"472\":1}}],[\"plate\",{\"1\":{\"25\":1}}],[\"play\",{\"1\":{\"25\":1}}],[\"playing\",{\"1\":{\"25\":5}}],[\"placard\",{\"1\":{\"25\":1}}],[\"place\",{\"1\":{\"25\":5}}],[\"planet\",{\"1\":{\"25\":1}}],[\"plant\",{\"1\":{\"25\":1}}],[\"pleading\",{\"1\":{\"25\":1}}],[\"pitcairn\",{\"1\":{\"25\":1}}],[\"pirate\",{\"1\":{\"25\":1}}],[\"pisces\",{\"1\":{\"25\":1}}],[\"pill\",{\"1\":{\"25\":1}}],[\"pilot\",{\"1\":{\"25\":3}}],[\"pick\",{\"1\":{\"25\":2}}],[\"pickup\",{\"1\":{\"25\":1}}],[\"picture\",{\"1\":{\"25\":1}}],[\"pierre\",{\"1\":{\"25\":1}}],[\"piece\",{\"1\":{\"25\":1}}],[\"pie\",{\"1\":{\"25\":1}}],[\"pizza\",{\"1\":{\"25\":1}}],[\"pin\",{\"1\":{\"25\":1}}],[\"pinata\",{\"1\":{\"25\":1}}],[\"ping\",{\"1\":{\"25\":1}}],[\"pineapple\",{\"1\":{\"25\":1}}],[\"pinching\",{\"1\":{\"25\":1}}],[\"pinched\",{\"1\":{\"25\":1}}],[\"pig2\",{\"1\":{\"25\":1}}],[\"pig\",{\"1\":{\"25\":2}}],[\"pi\",{\"1\":{\"25\":1,\"418\":1}}],[\"practice\",{\"1\":{\"347\":1,\"354\":1,\"358\":1,\"362\":1,\"368\":1,\"372\":1,\"379\":1,\"387\":1,\"393\":1,\"395\":1,\"400\":1,\"408\":1,\"414\":1,\"421\":1,\"424\":1,\"428\":1,\"430\":1,\"438\":1,\"443\":1}}],[\"prayer\",{\"1\":{\"25\":1}}],[\"pray\",{\"1\":{\"25\":1}}],[\"primary\",{\"1\":{\"474\":1}}],[\"priority\",{\"1\":{\"305\":4}}],[\"private\",{\"1\":{\"76\":1,\"79\":2,\"98\":1,\"154\":14,\"157\":5,\"243\":3,\"244\":1,\"281\":5,\"325\":4,\"334\":2}}],[\"principe\",{\"1\":{\"25\":1}}],[\"princess\",{\"1\":{\"25\":1}}],[\"prince\",{\"1\":{\"25\":1}}],[\"println\",{\"1\":{\"70\":3,\"235\":4,\"240\":1,\"243\":2,\"279\":1,\"281\":13,\"298\":1,\"299\":1,\"305\":1,\"306\":12,\"309\":4,\"312\":1,\"346\":2,\"349\":8,\"351\":2,\"357\":1,\"361\":1,\"365\":2,\"366\":1,\"384\":6,\"386\":2,\"389\":2,\"399\":1,\"426\":1,\"440\":1}}],[\"print\",{\"1\":{\"70\":2,\"399\":2}}],[\"printer\",{\"1\":{\"25\":1}}],[\"printstream\",{\"1\":{\"300\":1}}],[\"printstacktrace\",{\"1\":{\"70\":2,\"298\":1,\"299\":2,\"306\":1,\"309\":1,\"312\":1}}],[\"prints\",{\"1\":{\"25\":1}}],[\"preference\",{\"1\":{\"474\":1}}],[\"prefers\",{\"1\":{\"474\":1}}],[\"preferipv4stack=true\",{\"1\":{\"70\":1}}],[\"prestart\",{\"1\":{\"473\":1}}],[\"preload\",{\"1\":{\"466\":1,\"472\":3}}],[\"predicate\",{\"1\":{\"281\":6}}],[\"predicate<string>\",{\"1\":{\"281\":1}}],[\"predicate<student>\",{\"1\":{\"281\":1}}],[\"predicate<\",{\"1\":{\"281\":2}}],[\"predicate<t>\",{\"1\":{\"281\":5}}],[\"predicate断言型函数式接口\",{\"1\":{\"281\":1}}],[\"pretty\",{\"1\":{\"154\":2}}],[\"pretzel\",{\"1\":{\"25\":1}}],[\"prehandle方法抛出的错会有跨域问题\",{\"1\":{\"73\":1}}],[\"previous\",{\"1\":{\"25\":1}}],[\"pregnant\",{\"1\":{\"25\":1}}],[\"props\",{\"1\":{\"474\":4}}],[\"property\",{\"1\":{\"70\":1}}],[\"productname\",{\"1\":{\"476\":1}}],[\"prod\",{\"1\":{\"473\":1,\"477\":1}}],[\"process\",{\"1\":{\"472\":3}}],[\"proceed\",{\"1\":{\"334\":1}}],[\"proceedingjoinpoint\",{\"1\":{\"334\":1}}],[\"proxytargetclass\",{\"1\":{\"456\":2}}],[\"prom\",{\"1\":{\"328\":1}}],[\"prometheus\",{\"0\":{\"97\":1,\"324\":1,\"326\":1,\"327\":1,\"329\":1},\"1\":{\"98\":2,\"325\":2,\"327\":1,\"328\":9},\"2\":{\"101\":1,\"331\":1}}],[\"prototype\",{\"1\":{\"455\":1}}],[\"protocol\",{\"1\":{\"70\":1}}],[\"protected\",{\"1\":{\"76\":1,\"243\":1}}],[\"profiler\",{\"1\":{\"254\":1}}],[\"profile\",{\"1\":{\"70\":2}}],[\"projector\",{\"1\":{\"25\":1}}],[\"probing\",{\"1\":{\"25\":4}}],[\"progsoft\",{\"1\":{\"21\":1}}],[\"programmer\",{\"1\":{\"20\":1}}],[\"pad\",{\"1\":{\"151\":1}}],[\"path\",{\"1\":{\"66\":2,\"327\":1,\"472\":4}}],[\"palau\",{\"1\":{\"25\":1}}],[\"palestinian\",{\"1\":{\"25\":1}}],[\"palm\",{\"1\":{\"25\":1}}],[\"palms\",{\"1\":{\"25\":1}}],[\"pakistan\",{\"1\":{\"25\":1}}],[\"papua\",{\"1\":{\"25\":1}}],[\"paper\",{\"1\":{\"25\":1}}],[\"paperclips\",{\"1\":{\"25\":1}}],[\"paperclip\",{\"1\":{\"25\":1}}],[\"pause\",{\"1\":{\"25\":2}}],[\"password>\",{\"1\":{\"70\":1}}],[\"passwordtext\",{\"1\":{\"70\":2}}],[\"password\",{\"1\":{\"70\":5,\"327\":1}}],[\"passport\",{\"1\":{\"25\":1}}],[\"passenger\",{\"1\":{\"25\":1}}],[\"paintbrush\",{\"1\":{\"25\":1}}],[\"package\",{\"1\":{\"25\":1,\"70\":2,\"471\":1,\"473\":1,\"476\":1}}],[\"page<\",{\"1\":{\"334\":1}}],[\"pagelite<\",{\"1\":{\"334\":1}}],[\"pagelite\",{\"1\":{\"334\":1}}],[\"pages\",{\"1\":{\"54\":1}}],[\"page\",{\"1\":{\"25\":2,\"334\":1}}],[\"pager\",{\"1\":{\"25\":1}}],[\"panicked\",{\"1\":{\"349\":1}}],[\"panama\",{\"1\":{\"25\":1}}],[\"pan\",{\"1\":{\"25\":1}}],[\"pancakes\",{\"1\":{\"25\":1}}],[\"panda\",{\"1\":{\"25\":1}}],[\"parent\",{\"1\":{\"287\":1}}],[\"parserconfig\",{\"1\":{\"98\":1,\"325\":1}}],[\"param\",{\"1\":{\"334\":6}}],[\"parameterizedtype\",{\"1\":{\"334\":6,\"335\":1}}],[\"paraguay\",{\"1\":{\"25\":1}}],[\"parasol\",{\"1\":{\"25\":1}}],[\"parachute\",{\"1\":{\"25\":1}}],[\"partition\",{\"1\":{\"27\":1}}],[\"part\",{\"1\":{\"25\":1}}],[\"partly\",{\"1\":{\"25\":1}}],[\"partying\",{\"1\":{\"25\":1}}],[\"party\",{\"1\":{\"14\":1}}],[\"parking\",{\"1\":{\"25\":1}}],[\"park\",{\"1\":{\"25\":1}}],[\"parrot\",{\"1\":{\"25\":1}}],[\"pawn\",{\"1\":{\"25\":1}}],[\"paw\",{\"1\":{\"25\":1}}],[\"pub\",{\"1\":{\"426\":9,\"427\":2}}],[\"public\",{\"1\":{\"70\":7,\"73\":5,\"76\":3,\"79\":1,\"83\":5,\"98\":4,\"148\":2,\"151\":3,\"154\":17,\"157\":4,\"235\":1,\"236\":1,\"237\":1,\"240\":1,\"242\":1,\"243\":3,\"279\":1,\"281\":18,\"293\":1,\"298\":2,\"299\":2,\"305\":1,\"306\":2,\"309\":1,\"312\":1,\"325\":5,\"334\":10,\"456\":2,\"474\":2}}],[\"push\",{\"1\":{\"54\":1,\"384\":5,\"433\":1}}],[\"pushpin\",{\"1\":{\"25\":2}}],[\"puerto\",{\"1\":{\"25\":1}}],[\"put\",{\"1\":{\"25\":1,\"154\":4,\"244\":1,\"334\":1,\"472\":1}}],[\"purse\",{\"1\":{\"25\":1}}],[\"purple\",{\"1\":{\"25\":3}}],[\"punch\",{\"1\":{\"25\":1}}],[\"pop\",{\"1\":{\"384\":8}}],[\"popcorn\",{\"1\":{\"25\":1}}],[\"ports\",{\"1\":{\"328\":2}}],[\"port\",{\"1\":{\"70\":2,\"327\":1}}],[\"portinfo\",{\"1\":{\"70\":3}}],[\"portugal\",{\"1\":{\"25\":1}}],[\"pong\",{\"1\":{\"25\":1}}],[\"possible\",{\"1\":{\"111\":1}}],[\"posts\",{\"0\":{\"489\":1}}],[\"postbox\",{\"1\":{\"25\":1}}],[\"postal\",{\"1\":{\"25\":1}}],[\"post\",{\"1\":{\"25\":3,\"94\":3,\"426\":2}}],[\"position\",{\"1\":{\"25\":3}}],[\"pound\",{\"1\":{\"25\":1}}],[\"pouch\",{\"1\":{\"25\":1}}],[\"poultry\",{\"1\":{\"25\":1}}],[\"pouting\",{\"1\":{\"25\":4}}],[\"pout\",{\"1\":{\"25\":1}}],[\"potable\",{\"1\":{\"25\":2}}],[\"potato\",{\"1\":{\"25\":2}}],[\"pot\",{\"1\":{\"25\":1}}],[\"potted\",{\"1\":{\"25\":1}}],[\"pool\",{\"1\":{\"243\":2}}],[\"poodle\",{\"1\":{\"25\":1}}],[\"poop\",{\"1\":{\"25\":1}}],[\"poland\",{\"1\":{\"25\":1}}],[\"polar\",{\"1\":{\"25\":1}}],[\"polynesia\",{\"1\":{\"25\":1}}],[\"pole\",{\"1\":{\"25\":1}}],[\"polo\",{\"1\":{\"25\":3}}],[\"policewoman\",{\"1\":{\"25\":1}}],[\"policeman\",{\"1\":{\"25\":1}}],[\"police\",{\"1\":{\"25\":3}}],[\"pointer\",{\"1\":{\"474\":1}}],[\"pointed\",{\"1\":{\"25\":2}}],[\"points\",{\"1\":{\"345\":1}}],[\"pointcut\",{\"1\":{\"334\":1,\"458\":1}}],[\"point\",{\"1\":{\"25\":5,\"389\":1,\"458\":1}}],[\"pedestrians\",{\"1\":{\"25\":1}}],[\"petri\",{\"1\":{\"25\":1}}],[\"permitall\",{\"1\":{\"325\":1}}],[\"permanently\",{\"1\":{\"94\":1}}],[\"peru\",{\"1\":{\"25\":1}}],[\"performing\",{\"1\":{\"25\":1}}],[\"person\",{\"1\":{\"25\":25}}],[\"persevere\",{\"1\":{\"25\":1}}],[\"pepper\",{\"1\":{\"25\":2}}],[\"peanuts\",{\"1\":{\"25\":1}}],[\"peace\",{\"1\":{\"25\":1}}],[\"peach\",{\"1\":{\"25\":1}}],[\"peacock\",{\"1\":{\"25\":1}}],[\"pear\",{\"1\":{\"25\":1}}],[\"pencil\",{\"1\":{\"25\":1}}],[\"pencil2\",{\"1\":{\"25\":1}}],[\"pen\",{\"1\":{\"25\":3}}],[\"penguin\",{\"1\":{\"25\":1}}],[\"pensive\",{\"1\":{\"25\":1}}],[\"people\",{\"1\":{\"25\":2}}],[\"python\",{\"0\":{\"12\":1},\"1\":{\"12\":2,\"204\":1}}],[\"计算机\",{\"1\":{\"11\":1}}],[\"文章\",{\"1\":{\"426\":1}}],[\"文档中\",{\"1\":{\"116\":1}}],[\"文档\",{\"1\":{\"70\":1,\"457\":1}}],[\"文档收集整理\",{\"1\":{\"11\":1}}],[\"文本编辑\",{\"1\":{\"60\":1}}],[\"文件夹\",{\"1\":{\"472\":1}}],[\"文件字节流\",{\"0\":{\"296\":1}}],[\"文件是一个\",{\"1\":{\"70\":1}}],[\"文件\",{\"1\":{\"9\":1,\"133\":1,\"466\":1,\"472\":1,\"474\":1}}],[\"rs\",{\"1\":{\"349\":2}}],[\"r>\",{\"1\":{\"281\":2}}],[\"rdb\",{\"1\":{\"120\":1}}],[\"rr\",{\"1\":{\"115\":1}}],[\"rt\",{\"1\":{\"104\":5}}],[\"r递归删除\",{\"1\":{\"60\":1}}],[\"r\",{\"1\":{\"60\":7,\"281\":2,\"384\":1,\"474\":1}}],[\"rwmixwrite=30\",{\"1\":{\"51\":1}}],[\"rwmixread=70\",{\"1\":{\"50\":1}}],[\"rw=randrw\",{\"1\":{\"50\":1,\"51\":1}}],[\"rw=randread\",{\"1\":{\"50\":1}}],[\"rw=randwrite\",{\"1\":{\"50\":1,\"51\":1}}],[\"rw=read\",{\"1\":{\"50\":1}}],[\"rw=write\",{\"1\":{\"50\":1}}],[\"rwanda\",{\"1\":{\"25\":1}}],[\"rf\",{\"1\":{\"43\":6,\"60\":1}}],[\"rm\",{\"1\":{\"43\":6,\"60\":2}}],[\"r2dbc\",{\"1\":{\"38\":1}}],[\"rxjava\",{\"1\":{\"29\":1}}],[\"rpc调用\",{\"1\":{\"28\":1}}],[\"rpc\",{\"1\":{\"27\":2}}],[\"ring\",{\"1\":{\"25\":1,\"29\":1}}],[\"ringed\",{\"1\":{\"25\":1}}],[\"ribbon\",{\"1\":{\"25\":2,\"27\":1,\"28\":1}}],[\"rico\",{\"1\":{\"25\":1}}],[\"rica\",{\"1\":{\"25\":1}}],[\"rickshaw\",{\"1\":{\"25\":1}}],[\"rice\",{\"1\":{\"25\":5}}],[\"rightwards\",{\"1\":{\"25\":1}}],[\"right\",{\"1\":{\"25\":9}}],[\"rhinoceros\",{\"1\":{\"25\":1}}],[\"radius\",{\"1\":{\"418\":6}}],[\"radioactive\",{\"1\":{\"25\":1}}],[\"radio\",{\"1\":{\"25\":2}}],[\"raw\",{\"1\":{\"333\":2}}],[\"range\",{\"1\":{\"94\":1,\"111\":1,\"384\":5}}],[\"rancher\",{\"1\":{\"48\":1}}],[\"razor\",{\"1\":{\"25\":1}}],[\"rainbow\",{\"1\":{\"25\":2}}],[\"rain\",{\"1\":{\"25\":3}}],[\"rail\",{\"1\":{\"25\":1}}],[\"railway\",{\"1\":{\"25\":4}}],[\"raising\",{\"1\":{\"25\":3}}],[\"raised\",{\"1\":{\"25\":6}}],[\"rabbit2\",{\"1\":{\"25\":1}}],[\"rabbit\",{\"1\":{\"25\":1}}],[\"rate\",{\"1\":{\"29\":2}}],[\"rat\",{\"1\":{\"25\":1}}],[\"ramen\",{\"1\":{\"25\":1}}],[\"ram\",{\"1\":{\"25\":1}}],[\"racehorse\",{\"1\":{\"25\":1}}],[\"raccoon\",{\"1\":{\"25\":1}}],[\"racing\",{\"1\":{\"25\":2}}],[\"rage\",{\"1\":{\"25\":1}}],[\"render\",{\"1\":{\"474\":1}}],[\"renderer\",{\"1\":{\"470\":2}}],[\"re\",{\"1\":{\"472\":1}}],[\"rewired\",{\"0\":{\"469\":1,\"470\":1},\"1\":{\"469\":1,\"473\":3}}],[\"rewind\",{\"1\":{\"25\":1}}],[\"require\",{\"1\":{\"470\":1,\"472\":1,\"474\":1}}],[\"requirenonnull\",{\"1\":{\"281\":5}}],[\"requested\",{\"1\":{\"83\":2}}],[\"rejectedexecutionhandler\",{\"1\":{\"242\":1}}],[\"reentrantreadwritelock不仅具有读写锁的功能\",{\"1\":{\"237\":1}}],[\"reentrantlock>\",{\"1\":{\"244\":1}}],[\"reentrantlock\",{\"1\":{\"235\":2,\"236\":1,\"244\":2}}],[\"readfile\",{\"1\":{\"474\":1}}],[\"readtxtfiledata\",{\"1\":{\"474\":2}}],[\"ready\",{\"1\":{\"472\":2}}],[\"reader\",{\"1\":{\"299\":2}}],[\"read\",{\"1\":{\"298\":1,\"299\":1,\"419\":1}}],[\"readlock\",{\"1\":{\"237\":1}}],[\"readwritelock\",{\"1\":{\"237\":1}}],[\"react\",{\"0\":{\"465\":1,\"468\":1,\"469\":1,\"470\":1},\"1\":{\"14\":1,\"466\":2,\"468\":1,\"469\":1,\"470\":1,\"472\":2,\"473\":4,\"474\":3,\"475\":1,\"476\":1,\"477\":2,\"478\":1,\"479\":1},\"2\":{\"481\":1}}],[\"reactor\",{\"1\":{\"11\":1}}],[\"reflectutil\",{\"1\":{\"334\":4,\"335\":1}}],[\"reflect\",{\"1\":{\"334\":1}}],[\"referenceerror\",{\"1\":{\"470\":1}}],[\"reference\",{\"1\":{\"240\":3,\"270\":4}}],[\"ref\",{\"1\":{\"111\":2}}],[\"remote\",{\"1\":{\"466\":2,\"483\":1}}],[\"remove\",{\"1\":{\"384\":11}}],[\"removeabandoned\",{\"1\":{\"83\":1}}],[\"removeabandonedtimeout\",{\"1\":{\"83\":1}}],[\"reminder\",{\"1\":{\"25\":1}}],[\"retry\",{\"1\":{\"298\":1}}],[\"retentionpolicy\",{\"1\":{\"79\":1,\"456\":1}}],[\"retention\",{\"1\":{\"79\":1,\"320\":1,\"456\":1}}],[\"returnclass\",{\"1\":{\"334\":4}}],[\"returntype\",{\"1\":{\"334\":5}}],[\"returning\",{\"1\":{\"83\":1}}],[\"return\",{\"1\":{\"70\":4,\"73\":1,\"76\":2,\"83\":4,\"92\":1,\"93\":2,\"98\":3,\"154\":5,\"157\":2,\"243\":2,\"281\":8,\"298\":1,\"325\":5,\"334\":8,\"366\":1,\"407\":1,\"470\":1,\"474\":2}}],[\"reboot\",{\"1\":{\"60\":1}}],[\"registeraspectjannotationautoproxycreatorifnecessary\",{\"1\":{\"456\":1}}],[\"registerbeandefinitions\",{\"1\":{\"456\":1}}],[\"registersynchronization\",{\"1\":{\"83\":1}}],[\"registering\",{\"1\":{\"83\":1}}],[\"registercorsconfiguration\",{\"1\":{\"73\":1}}],[\"registered\",{\"1\":{\"25\":1}}],[\"registry\",{\"1\":{\"27\":1,\"73\":4,\"456\":4}}],[\"reunion\",{\"1\":{\"25\":1}}],[\"replacetext\",{\"1\":{\"472\":2}}],[\"replacen\",{\"1\":{\"384\":4}}],[\"replace\",{\"1\":{\"384\":14,\"474\":1}}],[\"repository\",{\"1\":{\"54\":1}}],[\"reporting\",{\"1\":{\"50\":5,\"51\":1}}],[\"republic\",{\"1\":{\"25\":3}}],[\"repeatable\",{\"1\":{\"320\":1}}],[\"repeat\",{\"1\":{\"25\":2}}],[\"rectangle\",{\"1\":{\"419\":3,\"420\":3}}],[\"recursivetask<integer>\",{\"1\":{\"243\":1}}],[\"recycle\",{\"1\":{\"25\":1}}],[\"record\",{\"1\":{\"25\":1}}],[\"receipt\",{\"1\":{\"25\":1}}],[\"receiver\",{\"1\":{\"25\":1}}],[\"resourceloaderaware\",{\"1\":{\"456\":1}}],[\"resource注解\",{\"1\":{\"455\":1}}],[\"resource的匹配机制更加合理高效\",{\"1\":{\"455\":1}}],[\"resource默认byname如果找不到则bytype\",{\"1\":{\"455\":1}}],[\"rest\",{\"1\":{\"472\":1}}],[\"restart\",{\"1\":{\"328\":2}}],[\"restroom\",{\"1\":{\"25\":1}}],[\"result是结果\",{\"1\":{\"279\":1}}],[\"result\",{\"1\":{\"279\":3,\"325\":7,\"334\":5,\"384\":5}}],[\"resumed\",{\"1\":{\"83\":1}}],[\"res\",{\"1\":{\"243\":3,\"472\":2}}],[\"responseentity\",{\"1\":{\"334\":2}}],[\"response\",{\"1\":{\"70\":1}}],[\"resilience4j\",{\"1\":{\"29\":6}}],[\"rescue\",{\"1\":{\"25\":1}}],[\"rex\",{\"1\":{\"25\":1}}],[\"reduced\",{\"1\":{\"474\":1}}],[\"redis官网\",{\"1\":{\"484\":1}}],[\"redis是一种支持key\",{\"1\":{\"483\":1}}],[\"redis是一个key\",{\"1\":{\"483\":1}}],[\"redis是一款内存高速缓存数据库\",{\"1\":{\"483\":1}}],[\"redis全称为\",{\"1\":{\"483\":1}}],[\"redis\",{\"0\":{\"119\":1,\"482\":1,\"496\":1},\"1\":{\"484\":9},\"2\":{\"128\":1,\"486\":1}}],[\"redirect\",{\"1\":{\"94\":1}}],[\"red\",{\"1\":{\"25\":9}}],[\"revolving\",{\"1\":{\"25\":1}}],[\"related\",{\"0\":{\"491\":1}}],[\"relaxed\",{\"1\":{\"25\":1}}],[\"released\",{\"1\":{\"83\":1}}],[\"releaseconnection\",{\"1\":{\"83\":2}}],[\"relieved\",{\"1\":{\"25\":2}}],[\"rotate\",{\"1\":{\"474\":2}}],[\"rotating\",{\"1\":{\"25\":1}}],[\"rolepermissioninterceptor\",{\"1\":{\"325\":2}}],[\"roller\",{\"1\":{\"25\":2}}],[\"roll\",{\"1\":{\"25\":3}}],[\"rootdir\",{\"1\":{\"472\":1}}],[\"root\",{\"1\":{\"287\":1,\"328\":2}}],[\"root开始对堆中对象进行可达性分析\",{\"1\":{\"268\":1}}],[\"roots能直接关联到的对象\",{\"1\":{\"268\":1}}],[\"rooster\",{\"1\":{\"25\":1}}],[\"ro\",{\"1\":{\"42\":1}}],[\"romania\",{\"1\":{\"25\":1}}],[\"round\",{\"1\":{\"25\":1}}],[\"rocket\",{\"1\":{\"25\":1}}],[\"rock\",{\"1\":{\"25\":1}}],[\"rose\",{\"1\":{\"25\":1}}],[\"rosette\",{\"1\":{\"25\":1}}],[\"rows\",{\"1\":{\"111\":1}}],[\"rowing\",{\"1\":{\"25\":2}}],[\"rowboat\",{\"1\":{\"25\":1}}],[\"robot\",{\"1\":{\"25\":1}}],[\"robocopy\",{\"1\":{\"7\":1}}],[\"rofl\",{\"1\":{\"25\":1}}],[\"runtime\",{\"1\":{\"79\":1,\"456\":1}}],[\"runtime=100\",{\"1\":{\"50\":1}}],[\"runtime=1000\",{\"1\":{\"50\":4,\"51\":1}}],[\"runs\",{\"1\":{\"54\":1}}],[\"run\",{\"1\":{\"43\":5,\"54\":2,\"134\":1,\"349\":1}}],[\"running\",{\"1\":{\"25\":4}}],[\"runner\",{\"1\":{\"25\":1}}],[\"ru\",{\"1\":{\"25\":1}}],[\"ruler\",{\"1\":{\"25\":2}}],[\"rules\",{\"1\":{\"21\":1}}],[\"rugby\",{\"1\":{\"25\":1}}],[\"rust语言圣经\",{\"1\":{\"401\":1,\"451\":1}}],[\"rust会自动解引用为\",{\"1\":{\"384\":1}}],[\"rust\",{\"0\":{\"13\":1,\"338\":1,\"339\":1,\"404\":1,\"405\":1,\"493\":1},\"1\":{\"13\":1,\"341\":1,\"342\":1,\"347\":1,\"354\":1,\"357\":1,\"358\":1,\"362\":1,\"364\":1,\"365\":1,\"368\":1,\"371\":1,\"372\":1,\"379\":1,\"381\":2,\"384\":15,\"387\":1,\"393\":1,\"395\":1,\"397\":2,\"399\":1,\"400\":1,\"401\":1,\"408\":1,\"414\":1,\"421\":1,\"424\":1,\"428\":1,\"430\":1,\"438\":1,\"443\":1,\"451\":1},\"2\":{\"403\":1,\"453\":1}}],[\"jianshu\",{\"1\":{\"484\":1}}],[\"jigsaw\",{\"1\":{\"25\":1}}],[\"jconsole\",{\"1\":{\"308\":1}}],[\"j结点\",{\"1\":{\"287\":1}}],[\"jni调用本地方法\",{\"0\":{\"251\":1}}],[\"jvm会加载这个类吗\",{\"1\":{\"317\":1}}],[\"jvm会自动将栈顶数据作为操作数\",{\"1\":{\"249\":1}}],[\"jvm执行的命令基本都是入栈出栈等\",{\"1\":{\"249\":1}}],[\"jvm运行字节码时\",{\"1\":{\"249\":1}}],[\"jvm\",{\"0\":{\"248\":1,\"250\":1,\"252\":1},\"1\":{\"272\":1}}],[\"jvm中的内存模型是虚拟机规范对整个内存区域的规划\",{\"1\":{\"228\":1}}],[\"jmm\",{\"0\":{\"228\":1}}],[\"jre\",{\"0\":{\"133\":1},\"1\":{\"133\":1,\"134\":2}}],[\"jdk5\",{\"1\":{\"333\":1}}],[\"jdk预设了以下注解\",{\"1\":{\"319\":1}}],[\"jdk\",{\"0\":{\"129\":1,\"132\":1},\"1\":{\"130\":1,\"133\":1,\"134\":1}}],[\"jdbc\",{\"1\":{\"83\":7}}],[\"jwt\",{\"1\":{\"34\":1}}],[\"jp\",{\"1\":{\"25\":1}}],[\"jersey\",{\"1\":{\"25\":1}}],[\"jeans\",{\"1\":{\"25\":1}}],[\"joinpoint\",{\"1\":{\"334\":4}}],[\"join框架\",{\"0\":{\"243\":1}}],[\"join\",{\"1\":{\"104\":1,\"243\":2,\"306\":1,\"458\":1,\"472\":2}}],[\"job\",{\"1\":{\"327\":2}}],[\"jobinstance\",{\"1\":{\"76\":3}}],[\"jobs\",{\"1\":{\"54\":1}}],[\"jordan\",{\"1\":{\"25\":1}}],[\"joker\",{\"1\":{\"25\":1}}],[\"joystick\",{\"1\":{\"25\":1}}],[\"joy\",{\"1\":{\"25\":2}}],[\"juc提供了带版本号的引用类型\",{\"1\":{\"240\":1}}],[\"juc\",{\"0\":{\"221\":1},\"1\":{\"245\":1}}],[\"justify\",{\"1\":{\"474\":1}}],[\"just\",{\"1\":{\"70\":1}}],[\"juggling\",{\"1\":{\"25\":3}}],[\"judge\",{\"1\":{\"25\":3}}],[\"jamesives\",{\"1\":{\"54\":1}}],[\"jamaica\",{\"1\":{\"25\":1}}],[\"jar\",{\"0\":{\"43\":1},\"1\":{\"43\":8}}],[\"jan\",{\"1\":{\"25\":1}}],[\"jack\",{\"1\":{\"25\":1}}],[\"japan\",{\"1\":{\"25\":1}}],[\"japanese\",{\"1\":{\"25\":3}}],[\"java中所有的线程都执行完毕后\",{\"1\":{\"312\":1}}],[\"java到现在都没考到90分\",{\"1\":{\"281\":1}}],[\"java都考不及格\",{\"1\":{\"281\":1}}],[\"java使用的就是补码\",{\"1\":{\"278\":1}}],[\"java使用message\",{\"1\":{\"70\":1}}],[\"java相比c编译出来的汇编指令\",{\"1\":{\"249\":1}}],[\"java编译器通过对java代码语义的理解\",{\"1\":{\"230\":1}}],[\"java的线程是映射到操作系统的原生线程上\",{\"1\":{\"224\":1}}],[\"java自带工具\",{\"1\":{\"70\":1}}],[\"javadbwebservice\",{\"1\":{\"70\":1}}],[\"javadbwebserviceservice\",{\"1\":{\"70\":2}}],[\"javax\",{\"1\":{\"70\":11}}],[\"java在文档中查找java\",{\"1\":{\"60\":1}}],[\"javascript\",{\"1\":{\"14\":1,\"204\":1}}],[\"javaguide\",{\"1\":{\"11\":1}}],[\"java\",{\"0\":{\"11\":1,\"70\":1,\"229\":1,\"275\":1,\"313\":1,\"492\":1},\"1\":{\"11\":5,\"27\":3,\"43\":5,\"60\":1,\"70\":3,\"133\":1,\"134\":4,\"173\":1,\"218\":1,\"245\":1,\"262\":1,\"272\":1,\"278\":1,\"293\":1,\"317\":1,\"319\":2,\"320\":2,\"321\":1,\"333\":2,\"334\":4,\"335\":1},\"2\":{\"72\":1,\"75\":1,\"78\":1,\"81\":1,\"85\":1,\"137\":1,\"247\":1,\"274\":1,\"323\":1,\"331\":1,\"337\":1}}],[\"jsx\",{\"1\":{\"474\":1}}],[\"jsonp\",{\"1\":{\"43\":1}}],[\"json\",{\"1\":{\"43\":1,\"116\":1,\"471\":1,\"472\":1,\"473\":1,\"476\":1}}],[\"js\",{\"0\":{\"470\":1,\"474\":1},\"1\":{\"9\":2,\"54\":1,\"466\":1,\"470\":3,\"472\":1}}],[\"md\",{\"1\":{\"484\":1}}],[\"mm\",{\"1\":{\"98\":2,\"325\":2}}],[\"mvcc\",{\"1\":{\"115\":1}}],[\"mv\",{\"1\":{\"60\":2}}],[\"mnt下\",{\"1\":{\"60\":1}}],[\"mnt目录下\",{\"1\":{\"60\":2}}],[\"mnt\",{\"1\":{\"60\":3}}],[\"mkdir\",{\"1\":{\"43\":2,\"60\":3}}],[\"mybatis\",{\"1\":{\"455\":1}}],[\"myenum\",{\"1\":{\"412\":5}}],[\"my\",{\"1\":{\"384\":2,\"476\":1}}],[\"mygirlfriend\",{\"1\":{\"154\":14}}],[\"myisam\",{\"1\":{\"113\":1}}],[\"mywebmvcconfigurer\",{\"1\":{\"98\":1,\"325\":1}}],[\"mysql\",{\"0\":{\"107\":1},\"1\":{\"27\":1,\"111\":2,\"115\":1,\"116\":7},\"2\":{\"106\":1,\"118\":1}}],[\"myanmar\",{\"1\":{\"25\":1}}],[\"mcdonald\",{\"1\":{\"25\":1}}],[\"m\",{\"1\":{\"25\":1,\"287\":1}}],[\"mut\",{\"1\":{\"343\":2,\"345\":1,\"384\":8,\"399\":1,\"445\":1}}],[\"mute\",{\"1\":{\"25\":1}}],[\"multiplication\",{\"1\":{\"25\":1}}],[\"musical\",{\"1\":{\"25\":3}}],[\"mushroom\",{\"1\":{\"25\":1}}],[\"muscle\",{\"1\":{\"25\":1}}],[\"mx\",{\"1\":{\"25\":1}}],[\"mrs\",{\"1\":{\"25\":1}}],[\"miquelon\",{\"1\":{\"25\":1}}],[\"min\",{\"1\":{\"305\":2,\"474\":1}}],[\"minevictableidletimemillis\",{\"1\":{\"83\":1}}],[\"minus\",{\"1\":{\"25\":1,\"366\":2}}],[\"minidisc\",{\"1\":{\"25\":1}}],[\"minibus\",{\"1\":{\"25\":1}}],[\"micronesia\",{\"1\":{\"25\":1}}],[\"microscope\",{\"1\":{\"25\":1}}],[\"microphone\",{\"1\":{\"25\":2}}],[\"microbe\",{\"1\":{\"25\":1}}],[\"military\",{\"1\":{\"25\":2}}],[\"milky\",{\"1\":{\"25\":1}}],[\"milk\",{\"1\":{\"25\":1}}],[\"middle\",{\"1\":{\"25\":1}}],[\"mirrors\",{\"1\":{\"466\":1}}],[\"mirror\",{\"1\":{\"25\":1,\"466\":2}}],[\"mir\",{\"1\":{\"7\":1}}],[\"mem\",{\"1\":{\"384\":1}}],[\"memo\",{\"1\":{\"25\":1}}],[\"messagesourceaware\",{\"1\":{\"456\":1}}],[\"message\",{\"1\":{\"70\":7,\"456\":1}}],[\"messagecontext\",{\"1\":{\"70\":3}}],[\"mexico\",{\"1\":{\"25\":1}}],[\"melilla\",{\"1\":{\"25\":1}}],[\"melon\",{\"1\":{\"25\":1}}],[\"media\",{\"1\":{\"474\":1}}],[\"mediatype\",{\"1\":{\"98\":3,\"325\":2}}],[\"medium\",{\"1\":{\"25\":4}}],[\"medical\",{\"1\":{\"25\":1}}],[\"medal\",{\"1\":{\"25\":5}}],[\"mega\",{\"1\":{\"25\":1}}],[\"method\",{\"0\":{\"417\":1},\"1\":{\"334\":4,\"455\":1,\"472\":1}}],[\"methodsignature\",{\"1\":{\"334\":6}}],[\"metrics\",{\"1\":{\"327\":1}}],[\"metro\",{\"1\":{\"25\":1}}],[\"metadata\",{\"1\":{\"27\":1}}],[\"metal\",{\"1\":{\"25\":1}}],[\"meat\",{\"1\":{\"25\":2}}],[\"menu\",{\"1\":{\"472\":1}}],[\"menorah\",{\"1\":{\"25\":1}}],[\"mens\",{\"1\":{\"25\":1}}],[\"men\",{\"1\":{\"25\":3}}],[\"meridians\",{\"1\":{\"25\":1}}],[\"mermaid\",{\"1\":{\"25\":1}}],[\"merman\",{\"1\":{\"25\":1}}],[\"merperson\",{\"1\":{\"25\":1}}],[\"mechanic\",{\"1\":{\"25\":3}}],[\"mechanical\",{\"1\":{\"25\":2}}],[\"me\",{\"1\":{\"25\":1}}],[\"motion\",{\"1\":{\"474\":1}}],[\"motorway\",{\"1\":{\"25\":1}}],[\"motor\",{\"1\":{\"25\":2}}],[\"motorcycle\",{\"1\":{\"25\":1}}],[\"motorized\",{\"1\":{\"25\":4}}],[\"modules\",{\"1\":{\"472\":1}}],[\"module\",{\"1\":{\"470\":1,\"472\":1}}],[\"modifier\",{\"1\":{\"154\":2}}],[\"modifiers\",{\"1\":{\"154\":6}}],[\"modified\",{\"1\":{\"94\":2}}],[\"modify\",{\"1\":{\"104\":1}}],[\"modern\",{\"1\":{\"43\":1}}],[\"mode\",{\"1\":{\"25\":1,\"328\":2}}],[\"moved\",{\"1\":{\"94\":1}}],[\"movie\",{\"1\":{\"25\":1}}],[\"mozambique\",{\"1\":{\"25\":1}}],[\"moldova\",{\"1\":{\"25\":1}}],[\"more\",{\"1\":{\"60\":2}}],[\"morocco\",{\"1\":{\"25\":1}}],[\"mortar\",{\"1\":{\"25\":1}}],[\"mobile\",{\"1\":{\"25\":2,\"154\":1}}],[\"moyai\",{\"1\":{\"25\":1}}],[\"mosque\",{\"1\":{\"25\":1}}],[\"mosquito\",{\"1\":{\"25\":1}}],[\"moon\",{\"1\":{\"25\":15}}],[\"mount\",{\"1\":{\"25\":1}}],[\"mountains\",{\"1\":{\"25\":1}}],[\"mountain\",{\"1\":{\"25\":7}}],[\"mouse2\",{\"1\":{\"25\":1}}],[\"mouse\",{\"1\":{\"25\":3}}],[\"mouth\",{\"1\":{\"25\":5}}],[\"monitor依赖于底层操作系统的lock实现\",{\"1\":{\"224\":1}}],[\"mongodb\",{\"0\":{\"116\":1},\"1\":{\"116\":8}}],[\"mongolia\",{\"1\":{\"25\":1}}],[\"montserrat\",{\"1\":{\"25\":1}}],[\"montenegro\",{\"1\":{\"25\":1}}],[\"monaco\",{\"1\":{\"25\":1}}],[\"monorail\",{\"1\":{\"25\":1}}],[\"monocle\",{\"1\":{\"25\":1}}],[\"monkey\",{\"1\":{\"25\":2}}],[\"moneybag\",{\"1\":{\"25\":1}}],[\"money\",{\"1\":{\"25\":2}}],[\"matches\",{\"1\":{\"412\":3}}],[\"match\",{\"0\":{\"409\":1},\"1\":{\"94\":2,\"410\":2,\"411\":1,\"434\":1}}],[\"mate\",{\"1\":{\"25\":1}}],[\"maximumpoolsize\",{\"1\":{\"242\":6}}],[\"max\",{\"1\":{\"54\":1,\"305\":1,\"345\":1}}],[\"mainwindow\",{\"1\":{\"472\":3}}],[\"main\",{\"1\":{\"154\":2,\"157\":1,\"235\":1,\"240\":1,\"243\":2,\"279\":1,\"281\":10,\"298\":1,\"299\":2,\"305\":1,\"306\":2,\"309\":1,\"312\":1,\"343\":1,\"344\":1,\"346\":1,\"349\":2,\"356\":1,\"357\":3,\"361\":1,\"365\":1,\"366\":1,\"375\":1,\"384\":9,\"389\":3,\"399\":1,\"412\":1,\"440\":1,\"466\":1,\"472\":2}}],[\"maintainer\",{\"1\":{\"43\":1}}],[\"mailbox\",{\"1\":{\"25\":4}}],[\"mail\",{\"1\":{\"25\":3}}],[\"mayotte\",{\"1\":{\"25\":1}}],[\"mayen\",{\"1\":{\"25\":1}}],[\"maarten\",{\"1\":{\"25\":1}}],[\"mauritius\",{\"1\":{\"25\":1}}],[\"mauritania\",{\"1\":{\"25\":1}}],[\"malaysia\",{\"1\":{\"25\":1}}],[\"malawi\",{\"1\":{\"25\":1}}],[\"maldives\",{\"1\":{\"25\":1}}],[\"malta\",{\"1\":{\"25\":1}}],[\"mali\",{\"1\":{\"25\":1}}],[\"male\",{\"1\":{\"25\":2}}],[\"madagascar\",{\"1\":{\"25\":1}}],[\"mahjong\",{\"1\":{\"25\":1}}],[\"macau\",{\"1\":{\"25\":1}}],[\"macedonia\",{\"1\":{\"25\":1}}],[\"machine\",{\"1\":{\"25\":1}}],[\"macos\",{\"1\":{\"10\":1,\"472\":2}}],[\"magnet\",{\"1\":{\"25\":1}}],[\"mag\",{\"1\":{\"25\":2}}],[\"magic\",{\"1\":{\"25\":1}}],[\"mage\",{\"1\":{\"25\":3}}],[\"marino\",{\"1\":{\"25\":1}}],[\"mariana\",{\"1\":{\"25\":1}}],[\"marshall\",{\"1\":{\"25\":1}}],[\"martinique\",{\"1\":{\"25\":1}}],[\"martin\",{\"1\":{\"25\":1}}],[\"martial\",{\"1\":{\"25\":1}}],[\"markup\",{\"1\":{\"70\":1}}],[\"mark\",{\"1\":{\"25\":5}}],[\"markdown编辑工具\",{\"1\":{\"21\":1}}],[\"map<integer\",{\"1\":{\"334\":1}}],[\"map<long\",{\"1\":{\"244\":1}}],[\"map<string\",{\"1\":{\"154\":2,\"334\":1}}],[\"map\",{\"0\":{\"295\":1},\"1\":{\"25\":1,\"357\":1,\"440\":2}}],[\"maple\",{\"1\":{\"25\":1}}],[\"mammoth\",{\"1\":{\"25\":1}}],[\"master\",{\"1\":{\"54\":2}}],[\"massage\",{\"1\":{\"25\":3}}],[\"mask\",{\"1\":{\"25\":2}}],[\"mao\",{\"1\":{\"25\":1}}],[\"mans\",{\"1\":{\"25\":1}}],[\"mantelpiece\",{\"1\":{\"25\":1}}],[\"mango\",{\"1\":{\"25\":1}}],[\"mandarin\",{\"1\":{\"25\":1}}],[\"manual\",{\"1\":{\"25\":4}}],[\"man\",{\"1\":{\"25\":102,\"60\":2}}],[\"环境\",{\"0\":{\"471\":1,\"472\":1}}],[\"环境搭建\",{\"0\":{\"465\":1},\"1\":{\"479\":1}}],[\"环境准备\",{\"1\":{\"462\":1}}],[\"环境可以直接装\",{\"1\":{\"49\":1}}],[\"环境的管理和切换\",{\"1\":{\"10\":1}}],[\"环境下管理\",{\"1\":{\"9\":1}}],[\"环境且只是替换\",{\"1\":{\"9\":1}}],[\"nsis\",{\"1\":{\"476\":1}}],[\"n|\",{\"1\":{\"474\":1}}],[\"n+10\",{\"1\":{\"399\":1}}],[\"nullpointerexception\",{\"1\":{\"242\":1}}],[\"nullable\",{\"1\":{\"104\":1}}],[\"null这样一个错误\",{\"1\":{\"83\":1}}],[\"null\",{\"0\":{\"82\":1},\"1\":{\"70\":1,\"83\":6,\"104\":2,\"157\":2,\"242\":5,\"244\":2,\"281\":1,\"298\":4,\"334\":9,\"456\":1,\"476\":1}}],[\"number>\",{\"1\":{\"334\":1}}],[\"number显示行号\",{\"1\":{\"60\":1}}],[\"numjobs=30\",{\"1\":{\"50\":5,\"51\":1}}],[\"nut\",{\"1\":{\"25\":1}}],[\"n\",{\"1\":{\"43\":1,\"134\":1,\"279\":6,\"348\":1,\"399\":5,\"474\":1}}],[\"nil\",{\"1\":{\"289\":1}}],[\"niue\",{\"1\":{\"25\":1}}],[\"nicaragua\",{\"1\":{\"25\":1}}],[\"nigeria\",{\"1\":{\"25\":1}}],[\"niger\",{\"1\":{\"25\":1}}],[\"night\",{\"1\":{\"25\":2}}],[\"nine\",{\"1\":{\"25\":1}}],[\"ninja\",{\"1\":{\"25\":1}}],[\"nib\",{\"1\":{\"25\":1}}],[\"nginx\",{\"0\":{\"90\":1},\"1\":{\"60\":4,\"92\":1},\"2\":{\"96\":1}}],[\"ng\",{\"1\":{\"25\":3}}],[\"native\",{\"1\":{\"334\":2}}],[\"nations\",{\"1\":{\"25\":1}}],[\"national\",{\"1\":{\"25\":1}}],[\"nacos\",{\"1\":{\"27\":3,\"31\":1,\"32\":1}}],[\"nauru\",{\"1\":{\"25\":1}}],[\"nauseated\",{\"1\":{\"25\":1}}],[\"namibia\",{\"1\":{\"25\":1}}],[\"namespace\",{\"1\":{\"70\":1}}],[\"name=mytest\",{\"1\":{\"50\":5}}],[\"name\",{\"1\":{\"25\":1,\"54\":6,\"60\":1,\"92\":2,\"104\":6,\"154\":1,\"325\":1,\"327\":2,\"328\":2,\"472\":1}}],[\"nazar\",{\"1\":{\"25\":1}}],[\"nail\",{\"1\":{\"25\":1}}],[\"negate\",{\"1\":{\"281\":1}}],[\"negative\",{\"1\":{\"25\":1}}],[\"nepal\",{\"1\":{\"25\":1}}],[\"nevis\",{\"1\":{\"25\":1}}],[\"next\",{\"1\":{\"25\":1,\"115\":1}}],[\"necktie\",{\"1\":{\"25\":1}}],[\"needle\",{\"1\":{\"25\":1}}],[\"nesting\",{\"1\":{\"25\":1}}],[\"network\",{\"1\":{\"328\":2}}],[\"netstat\",{\"1\":{\"60\":4}}],[\"netherlands\",{\"1\":{\"25\":2}}],[\"net\",{\"1\":{\"25\":1,\"70\":1}}],[\"news\",{\"1\":{\"426\":1}}],[\"newspaper\",{\"1\":{\"25\":2}}],[\"new是circle的关联函数\",{\"1\":{\"418\":1}}],[\"newermt\",{\"1\":{\"59\":1}}],[\"new\",{\"1\":{\"25\":6,\"70\":8,\"73\":3,\"76\":1,\"83\":3,\"98\":4,\"154\":8,\"157\":2,\"235\":2,\"236\":2,\"240\":1,\"242\":2,\"243\":4,\"244\":2,\"270\":1,\"281\":5,\"298\":3,\"299\":4,\"305\":1,\"306\":4,\"309\":3,\"312\":1,\"325\":5,\"334\":2,\"360\":1,\"384\":4,\"418\":1,\"419\":1,\"432\":1,\"440\":1,\"472\":1}}],[\"nerd\",{\"1\":{\"25\":1}}],[\"neutral\",{\"1\":{\"25\":1}}],[\"nosql\",{\"1\":{\"484\":1}}],[\"nose\",{\"1\":{\"25\":2}}],[\"noemitonerror\",{\"1\":{\"472\":1}}],[\"nom\",{\"1\":{\"305\":1}}],[\"now\",{\"1\":{\"60\":2}}],[\"normal\",{\"1\":{\"109\":1}}],[\"norway\",{\"1\":{\"25\":1}}],[\"norfolk\",{\"1\":{\"25\":1}}],[\"northern\",{\"1\":{\"25\":1}}],[\"north\",{\"1\":{\"25\":1}}],[\"nonfairsync\",{\"1\":{\"236\":1}}],[\"none\",{\"1\":{\"94\":1,\"348\":1,\"416\":2,\"441\":1,\"474\":1}}],[\"non\",{\"1\":{\"25\":1}}],[\"notify<t\",{\"1\":{\"427\":1}}],[\"notifyall其实和notify一样\",{\"1\":{\"309\":1}}],[\"notify\",{\"0\":{\"309\":1},\"1\":{\"309\":2,\"426\":1,\"427\":1}}],[\"notnull\",{\"1\":{\"83\":1,\"334\":1}}],[\"nothing\",{\"1\":{\"70\":1}}],[\"not\",{\"1\":{\"25\":1,\"70\":3,\"83\":2,\"94\":1,\"104\":1,\"325\":1,\"470\":1,\"487\":1}}],[\"notepad\",{\"1\":{\"25\":1}}],[\"notebook\",{\"1\":{\"25\":2}}],[\"notes\",{\"1\":{\"25\":1}}],[\"note\",{\"1\":{\"25\":1,\"349\":1}}],[\"no\",{\"1\":{\"25\":15,\"83\":1,\"472\":1,\"474\":1}}],[\"nodeintegration\",{\"1\":{\"466\":1,\"472\":1}}],[\"node\",{\"0\":{\"474\":1},\"1\":{\"9\":3,\"54\":4,\"466\":1,\"470\":3,\"472\":3,\"473\":1},\"2\":{\"481\":1}}],[\"node相关\",{\"0\":{\"9\":1}}],[\"npm\",{\"1\":{\"9\":1,\"466\":1}}],[\"nrm\",{\"1\":{\"9\":1}}],[\"nvm\",{\"1\":{\"9\":1}}],[\"w3cschool\",{\"1\":{\"484\":1}}],[\"www\",{\"1\":{\"92\":1,\"484\":3}}],[\"wsu\",{\"1\":{\"70\":1}}],[\"wsu=\",{\"1\":{\"70\":1}}],[\"ws\",{\"1\":{\"70\":8}}],[\"wsse\",{\"1\":{\"70\":8}}],[\"wssecurity\",{\"1\":{\"70\":4}}],[\"wsse=\",{\"1\":{\"70\":1}}],[\"wss\",{\"1\":{\"70\":12}}],[\"wsdl\",{\"1\":{\"70\":2}}],[\"wsl\",{\"1\":{\"66\":9}}],[\"wsl2\",{\"0\":{\"64\":1},\"2\":{\"68\":1}}],[\"wq\",{\"1\":{\"60\":1}}],[\"w\",{\"1\":{\"60\":1,\"419\":2}}],[\"wc\",{\"1\":{\"25\":1}}],[\"wrapping\",{\"1\":{\"348\":2}}],[\"write\",{\"1\":{\"299\":1}}],[\"writer\",{\"1\":{\"299\":2}}],[\"writelock\",{\"1\":{\"237\":1}}],[\"writedateusedateformat\",{\"1\":{\"98\":1,\"325\":1}}],[\"writeenumusingtostring\",{\"1\":{\"98\":1,\"325\":1}}],[\"writenulllistasempty\",{\"1\":{\"98\":1,\"325\":1}}],[\"writemapnullvalue\",{\"1\":{\"98\":1,\"325\":1}}],[\"writeto\",{\"1\":{\"70\":2}}],[\"writing\",{\"1\":{\"25\":1}}],[\"wrench\",{\"1\":{\"25\":2}}],[\"wrestling\",{\"1\":{\"25\":3}}],[\"wait\",{\"0\":{\"309\":1},\"1\":{\"309\":1}}],[\"waist\",{\"1\":{\"154\":4}}],[\"was\",{\"1\":{\"298\":1}}],[\"wastebasket\",{\"1\":{\"25\":1}}],[\"wales\",{\"1\":{\"25\":1}}],[\"wallis\",{\"1\":{\"25\":1}}],[\"walking\",{\"1\":{\"25\":3}}],[\"wavy\",{\"1\":{\"25\":1}}],[\"wave\",{\"1\":{\"25\":1}}],[\"warning\",{\"1\":{\"25\":1}}],[\"wand\",{\"1\":{\"25\":1}}],[\"waning\",{\"1\":{\"25\":2}}],[\"way\",{\"1\":{\"25\":1}}],[\"waxing\",{\"1\":{\"25\":2}}],[\"watch\",{\"1\":{\"25\":1}}],[\"watermelon\",{\"1\":{\"25\":1}}],[\"water\",{\"1\":{\"25\":6}}],[\"waffle\",{\"1\":{\"25\":1}}],[\"while\",{\"1\":{\"298\":1,\"312\":1,\"334\":2}}],[\"whitelistconvert\",{\"1\":{\"325\":3}}],[\"whitelist\",{\"1\":{\"325\":1}}],[\"white\",{\"1\":{\"25\":13,\"474\":1}}],[\"where\",{\"1\":{\"104\":2,\"427\":2}}],[\"when\",{\"1\":{\"104\":1,\"472\":3}}],[\"wheel\",{\"1\":{\"25\":2}}],[\"wheelchair\",{\"1\":{\"25\":9}}],[\"whale2\",{\"1\":{\"25\":1}}],[\"whale\",{\"1\":{\"25\":1}}],[\"why\",{\"0\":{\"0\":1}}],[\"weibo\",{\"1\":{\"426\":2}}],[\"weight\",{\"1\":{\"25\":3}}],[\"weaving\",{\"1\":{\"458\":1}}],[\"weak\",{\"1\":{\"270\":1}}],[\"weakhashmap<>\",{\"1\":{\"244\":1}}],[\"weakhashmap\",{\"1\":{\"244\":2}}],[\"weary\",{\"1\":{\"25\":1}}],[\"we\",{\"1\":{\"70\":1}}],[\"western\",{\"1\":{\"25\":1}}],[\"wedding\",{\"1\":{\"25\":1}}],[\"webcontents\",{\"1\":{\"472\":1}}],[\"webpreferences\",{\"1\":{\"472\":1}}],[\"webpack\",{\"0\":{\"470\":1}}],[\"webmvcmetricsfilter\",{\"1\":{\"99\":1}}],[\"webmvcconfigureradapter\",{\"1\":{\"73\":2}}],[\"webmvcconfigurer\",{\"1\":{\"73\":2,\"98\":1,\"325\":1}}],[\"webservice是一种可以接收从internet或者intranet上的其它系统中传递过来的请求\",{\"1\":{\"70\":1}}],[\"webservice如何配置安全性问题\",{\"0\":{\"70\":1}}],[\"websockets\",{\"1\":{\"30\":1}}],[\"websites\",{\"1\":{\"20\":1}}],[\"web\",{\"1\":{\"25\":1,\"29\":1,\"38\":1,\"70\":5}}],[\"wood\",{\"1\":{\"25\":1}}],[\"woozy\",{\"1\":{\"25\":1}}],[\"wolf\",{\"1\":{\"25\":1}}],[\"womens\",{\"1\":{\"25\":1}}],[\"women\",{\"1\":{\"25\":3}}],[\"womans\",{\"1\":{\"25\":2}}],[\"woman\",{\"1\":{\"25\":103}}],[\"workqueue\",{\"1\":{\"242\":5}}],[\"working\",{\"1\":{\"99\":1}}],[\"workdir\",{\"1\":{\"43\":2}}],[\"worker\",{\"1\":{\"25\":13}}],[\"worship\",{\"1\":{\"25\":1}}],[\"world\",{\"1\":{\"25\":1,\"240\":1,\"281\":2,\"382\":2}}],[\"worm\",{\"1\":{\"25\":1}}],[\"worried\",{\"1\":{\"25\":1}}],[\"wox\",{\"1\":{\"21\":3}}],[\"width\",{\"1\":{\"419\":1,\"420\":3,\"472\":1}}],[\"will\",{\"1\":{\"472\":1}}],[\"wildcardtype\",{\"1\":{\"334\":1}}],[\"wilted\",{\"1\":{\"25\":1}}],[\"withsuperclassfieds\",{\"1\":{\"334\":3}}],[\"with\",{\"1\":{\"25\":52,\"54\":3,\"70\":1,\"154\":17,\"349\":1,\"472\":1}}],[\"win\",{\"1\":{\"476\":1}}],[\"wings\",{\"1\":{\"25\":1}}],[\"window\",{\"1\":{\"25\":1,\"472\":4}}],[\"windows\",{\"1\":{\"9\":3,\"10\":1,\"59\":1,\"472\":3}}],[\"wind\",{\"1\":{\"25\":2}}],[\"wine\",{\"1\":{\"25\":1}}],[\"winking\",{\"1\":{\"25\":1}}],[\"wink\",{\"1\":{\"25\":1}}],[\"gc的时候同步完成的\",{\"1\":{\"268\":1}}],[\"g1\",{\"0\":{\"268\":1}}],[\"gz文件\",{\"1\":{\"60\":2}}],[\"gz\",{\"1\":{\"60\":2}}],[\"ghana\",{\"1\":{\"25\":1}}],[\"ghost\",{\"1\":{\"25\":1}}],[\"gb\",{\"1\":{\"25\":1}}],[\"gateway\",{\"1\":{\"30\":1}}],[\"gambia\",{\"1\":{\"25\":1}}],[\"game\",{\"1\":{\"25\":3}}],[\"gabon\",{\"1\":{\"25\":1}}],[\"garbage\",{\"0\":{\"268\":1}}],[\"garcia\",{\"1\":{\"25\":1}}],[\"garden\",{\"1\":{\"25\":1}}],[\"garlic\",{\"1\":{\"25\":1}}],[\"global\",{\"1\":{\"327\":1}}],[\"globe\",{\"1\":{\"25\":1}}],[\"gloves\",{\"1\":{\"25\":1}}],[\"glove\",{\"1\":{\"25\":1}}],[\"glasses\",{\"1\":{\"25\":1}}],[\"glass\",{\"1\":{\"25\":3}}],[\"guyana\",{\"1\":{\"25\":1}}],[\"guernsey\",{\"1\":{\"25\":1}}],[\"gun\",{\"1\":{\"25\":1}}],[\"guinea\",{\"1\":{\"25\":4}}],[\"guiana\",{\"1\":{\"25\":1}}],[\"guitar\",{\"1\":{\"25\":1}}],[\"guide\",{\"1\":{\"25\":1}}],[\"guam\",{\"1\":{\"25\":1}}],[\"guatemala\",{\"1\":{\"25\":1}}],[\"guadeloupe\",{\"1\":{\"25\":1}}],[\"gua\",{\"1\":{\"25\":1}}],[\"guardswoman\",{\"1\":{\"25\":1}}],[\"guardsman\",{\"1\":{\"25\":1}}],[\"guard\",{\"1\":{\"25\":1}}],[\"gitalk\",{\"0\":{\"86\":1},\"1\":{\"87\":1},\"2\":{\"89\":1}}],[\"github\",{\"0\":{\"54\":1,\"478\":1},\"1\":{\"54\":3},\"2\":{\"56\":1}}],[\"git仓库只有一个\",{\"1\":{\"31\":1}}],[\"gibraltar\",{\"1\":{\"25\":1}}],[\"gibbous\",{\"1\":{\"25\":2}}],[\"giraffe\",{\"1\":{\"25\":1}}],[\"girlfriend\",{\"1\":{\"154\":20}}],[\"girl\",{\"1\":{\"25\":21}}],[\"gift\",{\"1\":{\"25\":2,\"154\":11}}],[\"getelementbyid\",{\"1\":{\"472\":1}}],[\"getenvelope\",{\"1\":{\"70\":1}}],[\"getboolean\",{\"1\":{\"456\":2}}],[\"getbody\",{\"1\":{\"334\":1}}],[\"getdeclaredfields\",{\"1\":{\"334\":1}}],[\"getdata\",{\"1\":{\"334\":2}}],[\"getownertype\",{\"1\":{\"334\":1}}],[\"getrawtype\",{\"1\":{\"334\":1}}],[\"getresource\",{\"1\":{\"83\":2}}],[\"getcomponenttype\",{\"1\":{\"334\":2}}],[\"getcontext\",{\"1\":{\"242\":1}}],[\"getconnection\",{\"1\":{\"83\":4}}],[\"getallwindows\",{\"1\":{\"472\":1}}],[\"getactualtypearguments\",{\"1\":{\"334\":2}}],[\"getannotation\",{\"1\":{\"79\":1}}],[\"getgenericreturntype\",{\"1\":{\"334\":1}}],[\"getglobalinstance\",{\"1\":{\"98\":1,\"325\":1}}],[\"getmethod\",{\"1\":{\"334\":1}}],[\"getmessage\",{\"1\":{\"70\":3}}],[\"getname\",{\"1\":{\"243\":1}}],[\"getsuperclass\",{\"1\":{\"334\":1}}],[\"getstatuscode\",{\"1\":{\"334\":1}}],[\"getsignature\",{\"1\":{\"334\":1}}],[\"getsecuritymanager\",{\"1\":{\"242\":1}}],[\"getsoappart\",{\"1\":{\"70\":1}}],[\"getinstance\",{\"1\":{\"157\":2}}],[\"getter\",{\"1\":{\"154\":2}}],[\"gettime\",{\"1\":{\"70\":1}}],[\"getpad\",{\"1\":{\"151\":1}}],[\"getphone\",{\"1\":{\"151\":1}}],[\"getfieldsdirectly\",{\"1\":{\"334\":2}}],[\"getfields\",{\"1\":{\"334\":2}}],[\"getfruit\",{\"1\":{\"148\":1}}],[\"getfastjsonconfig\",{\"1\":{\"98\":2,\"325\":2}}],[\"getjavadbwebserviceport\",{\"1\":{\"70\":1}}],[\"gethandlerchain\",{\"1\":{\"70\":1}}],[\"getheaders\",{\"1\":{\"70\":1}}],[\"get\",{\"1\":{\"49\":2,\"70\":1,\"83\":1,\"94\":4,\"154\":1,\"243\":1,\"244\":2,\"281\":2,\"334\":1,\"434\":2,\"441\":1}}],[\"georgia\",{\"1\":{\"25\":2}}],[\"gear\",{\"1\":{\"25\":1}}],[\"gemini\",{\"1\":{\"25\":1}}],[\"gem\",{\"1\":{\"25\":1}}],[\"genericdeclaration\",{\"1\":{\"334\":1}}],[\"genericarraytype\",{\"1\":{\"334\":1}}],[\"genesis+\",{\"1\":{\"19\":1}}],[\"genie\",{\"1\":{\"25\":3}}],[\"gesture\",{\"1\":{\"25\":1}}],[\"grafana\",{\"0\":{\"324\":1,\"326\":1,\"329\":1},\"1\":{\"328\":6},\"2\":{\"331\":1}}],[\"grapes\",{\"1\":{\"25\":1}}],[\"group\",{\"1\":{\"50\":5,\"51\":1}}],[\"ground\",{\"1\":{\"25\":1}}],[\"grpc\",{\"1\":{\"27\":1,\"29\":1}}],[\"grep\",{\"1\":{\"60\":3,\"134\":2}}],[\"grenadines\",{\"1\":{\"25\":1}}],[\"grenada\",{\"1\":{\"25\":1}}],[\"greece\",{\"1\":{\"25\":1}}],[\"greenland\",{\"1\":{\"25\":1}}],[\"green\",{\"1\":{\"25\":7}}],[\"grey\",{\"1\":{\"25\":2}}],[\"grimacing\",{\"1\":{\"25\":1}}],[\"grin\",{\"1\":{\"25\":1}}],[\"grinning\",{\"1\":{\"25\":1}}],[\"g\",{\"1\":{\"10\":1,\"60\":1,\"287\":1,\"356\":1,\"474\":1}}],[\"gnvm\",{\"1\":{\"9\":1}}],[\"go语言写的\",{\"1\":{\"27\":1}}],[\"goggles\",{\"1\":{\"25\":1}}],[\"goal\",{\"1\":{\"25\":1}}],[\"goat\",{\"1\":{\"25\":1}}],[\"gorilla\",{\"1\":{\"25\":1}}],[\"golf\",{\"1\":{\"25\":1}}],[\"golfing\",{\"1\":{\"25\":3}}],[\"golang\",{\"1\":{\"10\":1}}],[\"good\",{\"1\":{\"25\":3}}],[\"goblin\",{\"1\":{\"25\":1}}],[\"go相关\",{\"0\":{\"10\":1}}],[\"go\",{\"0\":{\"0\":1},\"1\":{\"10\":1,\"27\":1,\"357\":1}}],[\"目标删除文件夹\",{\"1\":{\"7\":1}}],[\"目录\",{\"1\":{\"3\":1,\"60\":1,\"477\":1}}],[\"tsx\",{\"1\":{\"474\":1}}],[\"tsc\",{\"1\":{\"473\":2}}],[\"tsconfig\",{\"1\":{\"472\":1}}],[\"ts\",{\"1\":{\"466\":1,\"472\":2}}],[\"tshirt\",{\"1\":{\"25\":1}}],[\"t2\",{\"1\":{\"306\":4,\"309\":2}}],[\"t1\",{\"1\":{\"306\":5,\"309\":2}}],[\"t>\",{\"1\":{\"281\":5,\"434\":1}}],[\"tls\",{\"1\":{\"133\":1,\"134\":1}}],[\"tlsv1\",{\"0\":{\"135\":1},\"1\":{\"130\":1,\"133\":1,\"134\":2}}],[\"tls10\",{\"0\":{\"129\":1},\"1\":{\"130\":1}}],[\"txtfiledata\",{\"1\":{\"474\":4}}],[\"txt文件\",{\"1\":{\"60\":1}}],[\"txt结尾的文件\",{\"1\":{\"60\":1}}],[\"txt到目录\",{\"1\":{\"60\":1}}],[\"txt到\",{\"1\":{\"60\":1}}],[\"txt的拥有者为nginx\",{\"1\":{\"60\":1}}],[\"txt的最后100行内容\",{\"1\":{\"60\":1}}],[\"txt的内容\",{\"1\":{\"60\":2}}],[\"txt\",{\"1\":{\"60\":10,\"298\":1,\"299\":2,\"472\":3,\"474\":2}}],[\"tcp\",{\"1\":{\"27\":3}}],[\"tmp\",{\"1\":{\"43\":1,\"59\":1,\"279\":2}}],[\"tm\",{\"1\":{\"25\":1}}],[\"twisted\",{\"1\":{\"25\":1}}],[\"two\",{\"1\":{\"25\":4,\"364\":1,\"399\":2}}],[\"tv\",{\"1\":{\"25\":1}}],[\"taobao\",{\"1\":{\"466\":1}}],[\"taskhandlerclass\",{\"1\":{\"79\":1}}],[\"taskhandler\",{\"1\":{\"79\":4}}],[\"table\",{\"1\":{\"104\":6,\"111\":1}}],[\"tab\",{\"1\":{\"60\":1}}],[\"tabs\",{\"1\":{\"25\":1}}],[\"targets\",{\"1\":{\"327\":2}}],[\"targetref\",{\"1\":{\"281\":3}}],[\"target是要获取的数\",{\"1\":{\"279\":1}}],[\"target\",{\"1\":{\"79\":1,\"279\":2,\"320\":1,\"410\":1,\"456\":1,\"470\":3,\"472\":1}}],[\"tar\",{\"1\":{\"60\":7,\"66\":4}}],[\"tail\",{\"1\":{\"60\":2}}],[\"taiwan\",{\"1\":{\"25\":1}}],[\"tajikistan\",{\"1\":{\"25\":1}}],[\"taurus\",{\"1\":{\"25\":1}}],[\"tanzania\",{\"1\":{\"25\":1}}],[\"tanabata\",{\"1\":{\"25\":1}}],[\"tangerine\",{\"1\":{\"25\":1}}],[\"tada\",{\"1\":{\"25\":1}}],[\"taxi\",{\"1\":{\"25\":2}}],[\"takeout\",{\"1\":{\"25\":1}}],[\"tamale\",{\"1\":{\"25\":1}}],[\"taco\",{\"1\":{\"25\":1}}],[\"t\",{\"1\":{\"25\":1,\"60\":1,\"148\":2,\"154\":8,\"281\":24,\"305\":3,\"312\":3,\"399\":7,\"416\":2,\"427\":4}}],[\"tup\",{\"1\":{\"389\":2}}],[\"tunlp\",{\"1\":{\"60\":2}}],[\"tunisia\",{\"1\":{\"25\":1}}],[\"tuvalu\",{\"1\":{\"25\":1}}],[\"tube\",{\"1\":{\"25\":1}}],[\"tumbler\",{\"1\":{\"25\":1}}],[\"tulip\",{\"1\":{\"25\":1}}],[\"turkmenistan\",{\"1\":{\"25\":1}}],[\"turks\",{\"1\":{\"25\":1}}],[\"turkey\",{\"1\":{\"25\":1}}],[\"turtle\",{\"1\":{\"25\":1}}],[\"turban\",{\"1\":{\"25\":3}}],[\"tuxedo\",{\"1\":{\"25\":3}}],[\"text\",{\"1\":{\"98\":1,\"325\":1,\"472\":2,\"474\":1}}],[\"template\",{\"1\":{\"468\":1}}],[\"temple\",{\"1\":{\"25\":1}}],[\"temporary\",{\"1\":{\"94\":1}}],[\"tech\",{\"1\":{\"54\":2,\"484\":1}}],[\"technologist\",{\"1\":{\"25\":3}}],[\"territories\",{\"1\":{\"25\":2}}],[\"territory\",{\"1\":{\"25\":1}}],[\"telescope\",{\"1\":{\"25\":1}}],[\"telephone\",{\"1\":{\"25\":2}}],[\"test方法的返回值是一个boolean结果\",{\"1\":{\"281\":1}}],[\"testlist\",{\"1\":{\"79\":1}}],[\"testpassword\",{\"1\":{\"70\":1}}],[\"testuser\",{\"1\":{\"70\":1}}],[\"test目录的磁盘使用情况\",{\"1\":{\"60\":1}}],[\"test目录下创建目录img\",{\"1\":{\"60\":1}}],[\"test\",{\"1\":{\"25\":1,\"60\":11,\"281\":9,\"298\":1,\"299\":2,\"473\":2}}],[\"teddy\",{\"1\":{\"25\":1}}],[\"ten\",{\"1\":{\"25\":1}}],[\"tennis\",{\"1\":{\"25\":1}}],[\"tent\",{\"1\":{\"25\":2}}],[\"teams\",{\"1\":{\"440\":4}}],[\"tea\",{\"1\":{\"25\":2}}],[\"teapot\",{\"1\":{\"25\":1}}],[\"teacher\",{\"1\":{\"25\":3}}],[\"tear\",{\"1\":{\"25\":1}}],[\"title\",{\"1\":{\"426\":2,\"472\":1}}],[\"timeunit\",{\"1\":{\"235\":1,\"242\":1}}],[\"timebetweenevictionrunsmillis\",{\"1\":{\"83\":1}}],[\"time\",{\"1\":{\"70\":1}}],[\"timezone\",{\"1\":{\"42\":2}}],[\"timer\",{\"1\":{\"25\":1}}],[\"timor\",{\"1\":{\"25\":1}}],[\"ticket\",{\"1\":{\"25\":1}}],[\"tickets\",{\"1\":{\"25\":1}}],[\"tiger2\",{\"1\":{\"25\":1}}],[\"tiger\",{\"1\":{\"25\":1}}],[\"tipping\",{\"1\":{\"25\":3}}],[\"tired\",{\"1\":{\"25\":1}}],[\"try\",{\"1\":{\"70\":2,\"83\":2,\"298\":1,\"299\":2,\"306\":1,\"309\":1,\"312\":1}}],[\"tr\",{\"1\":{\"25\":1}}],[\"triggerfiredbundle\",{\"1\":{\"76\":1}}],[\"trinidad\",{\"1\":{\"25\":1}}],[\"tristan\",{\"1\":{\"25\":1}}],[\"triangle\",{\"1\":{\"25\":2}}],[\"triangular\",{\"1\":{\"25\":2}}],[\"trident\",{\"1\":{\"25\":1}}],[\"triumph\",{\"1\":{\"25\":1}}],[\"trend\",{\"1\":{\"25\":2}}],[\"tree\",{\"1\":{\"25\":5}}],[\"truncate\",{\"1\":{\"384\":5}}],[\"true\",{\"1\":{\"70\":1,\"73\":1,\"76\":1,\"83\":1,\"98\":1,\"312\":2,\"325\":2,\"334\":1,\"472\":4,\"476\":1}}],[\"trumpet\",{\"1\":{\"25\":1}}],[\"truck\",{\"1\":{\"25\":2}}],[\"trophy\",{\"1\":{\"25\":1}}],[\"tropical\",{\"1\":{\"25\":2}}],[\"trolleybus\",{\"1\":{\"25\":1}}],[\"trait\",{\"1\":{\"426\":1}}],[\"train\",{\"1\":{\"25\":1}}],[\"train2\",{\"1\":{\"25\":1}}],[\"transform\",{\"1\":{\"474\":2}}],[\"transaction\",{\"1\":{\"83\":1}}],[\"transactionsynchronizationmanager\",{\"1\":{\"83\":5}}],[\"transgender\",{\"1\":{\"25\":2}}],[\"trap\",{\"1\":{\"25\":1}}],[\"tray\",{\"1\":{\"25\":2}}],[\"traffic\",{\"1\":{\"25\":2}}],[\"trafficmonitor\",{\"1\":{\"21\":1}}],[\"trackball\",{\"1\":{\"25\":1}}],[\"track\",{\"1\":{\"25\":3}}],[\"tractor\",{\"1\":{\"25\":1}}],[\"tramway\",{\"1\":{\"25\":1}}],[\"tram\",{\"1\":{\"25\":1}}],[\"throwable\",{\"1\":{\"83\":1,\"334\":1}}],[\"throws\",{\"1\":{\"76\":2,\"83\":4,\"235\":1,\"240\":1,\"243\":1,\"298\":1,\"309\":1,\"312\":1,\"325\":1,\"334\":5}}],[\"throw\",{\"1\":{\"70\":3,\"83\":1,\"242\":2}}],[\"threalocal\",{\"0\":{\"310\":1}}],[\"threadfactory\",{\"1\":{\"242\":6}}],[\"threadpoolexecutor\",{\"1\":{\"242\":1}}],[\"thread\",{\"1\":{\"25\":1,\"50\":5,\"235\":1,\"243\":1,\"305\":3,\"306\":9,\"309\":5,\"312\":4,\"349\":1}}],[\"three\",{\"1\":{\"25\":2}}],[\"this\",{\"1\":{\"70\":1,\"83\":1,\"154\":13,\"242\":7,\"243\":2,\"298\":1,\"472\":3,\"474\":4}}],[\"thinking\",{\"1\":{\"25\":1}}],[\"them\",{\"1\":{\"472\":2}}],[\"their\",{\"1\":{\"472\":1}}],[\"there\",{\"1\":{\"472\":2}}],[\"thermometer\",{\"1\":{\"25\":2}}],[\"then\",{\"1\":{\"104\":1,\"472\":1}}],[\"the\",{\"1\":{\"70\":4,\"325\":1,\"346\":3,\"361\":1,\"365\":2,\"366\":1,\"389\":2,\"472\":6}}],[\"thailand\",{\"1\":{\"25\":1}}],[\"that\",{\"0\":{\"0\":1}}],[\"thong\",{\"1\":{\"25\":1}}],[\"thought\",{\"1\":{\"25\":1}}],[\"thumbsdown\",{\"1\":{\"25\":1}}],[\"thumbsup\",{\"1\":{\"25\":1}}],[\"typeroots\",{\"1\":{\"472\":1}}],[\"typevariable\",{\"1\":{\"334\":1}}],[\"types\",{\"1\":{\"333\":2,\"472\":1}}],[\"typescript\",{\"0\":{\"465\":1,\"468\":1,\"495\":1},\"1\":{\"14\":2,\"466\":1,\"468\":1,\"479\":1},\"2\":{\"481\":1}}],[\"type\",{\"0\":{\"332\":1,\"333\":1},\"1\":{\"70\":1,\"79\":1,\"104\":1,\"111\":2,\"333\":2,\"334\":10,\"335\":1,\"456\":1,\"472\":3}}],[\"type=\",{\"1\":{\"70\":1,\"474\":1}}],[\"typora\",{\"1\":{\"21\":1}}],[\"tostring\",{\"1\":{\"281\":1,\"325\":1}}],[\"tonanos\",{\"1\":{\"242\":1}}],[\"tonga\",{\"1\":{\"25\":1}}],[\"tongue\",{\"1\":{\"25\":4}}],[\"touch\",{\"1\":{\"43\":1,\"60\":2}}],[\"tolerance\",{\"1\":{\"27\":1}}],[\"tobago\",{\"1\":{\"25\":1}}],[\"token\",{\"1\":{\"70\":2,\"325\":1}}],[\"tokelau\",{\"1\":{\"25\":1}}],[\"tokyo\",{\"1\":{\"25\":1}}],[\"togo\",{\"1\":{\"25\":1}}],[\"together\",{\"1\":{\"25\":1}}],[\"tome\",{\"1\":{\"25\":1}}],[\"tomato\",{\"1\":{\"25\":1}}],[\"top\",{\"1\":{\"25\":1,\"60\":3}}],[\"tophat\",{\"1\":{\"25\":1}}],[\"toilet\",{\"1\":{\"25\":1}}],[\"toolbox\",{\"1\":{\"25\":1}}],[\"toothbrush\",{\"1\":{\"25\":1}}],[\"tooth\",{\"1\":{\"25\":1}}],[\"tornado\",{\"1\":{\"25\":1}}],[\"tower\",{\"1\":{\"25\":1}}],[\"to\",{\"1\":{\"7\":2,\"70\":1,\"83\":1,\"349\":5,\"382\":1,\"440\":3,\"472\":3,\"474\":1}}],[\"epc\",{\"1\":{\"244\":1}}],[\"equals\",{\"1\":{\"281\":1}}],[\"equatorial\",{\"1\":{\"25\":1}}],[\"eq\",{\"1\":{\"111\":1,\"344\":1,\"375\":2}}],[\"ef\",{\"1\":{\"60\":2}}],[\"err\",{\"1\":{\"474\":3}}],[\"error\",{\"1\":{\"87\":1,\"474\":1}}],[\"erp\",{\"1\":{\"43\":7}}],[\"eritrea\",{\"1\":{\"25\":1}}],[\"etc\",{\"1\":{\"42\":6,\"328\":1}}],[\"ethiopia\",{\"1\":{\"25\":1}}],[\"eureka+spring\",{\"1\":{\"31\":1}}],[\"eureka替换\",{\"1\":{\"27\":1}}],[\"eureka\",{\"1\":{\"27\":3,\"31\":1}}],[\"euro\",{\"1\":{\"25\":1}}],[\"european\",{\"1\":{\"25\":3}}],[\"eu\",{\"1\":{\"25\":1}}],[\"es5\",{\"1\":{\"472\":1}}],[\"es\",{\"1\":{\"25\":1,\"48\":1}}],[\"estonia\",{\"1\":{\"25\":1}}],[\"egd=file\",{\"1\":{\"43\":1}}],[\"egypt\",{\"1\":{\"25\":1}}],[\"egg\",{\"1\":{\"25\":2}}],[\"eggplant\",{\"1\":{\"25\":1}}],[\"ecuador\",{\"1\":{\"25\":1}}],[\"eight\",{\"1\":{\"25\":3}}],[\"eject\",{\"1\":{\"25\":1,\"473\":2}}],[\"e\",{\"1\":{\"25\":1,\"60\":1,\"70\":2,\"287\":1,\"298\":2,\"299\":4,\"306\":2,\"309\":2,\"312\":2,\"334\":1,\"344\":5}}],[\"enum\",{\"1\":{\"412\":1,\"416\":1}}],[\"enableasync\",{\"1\":{\"456\":1}}],[\"enableaspectjautoproxy\",{\"1\":{\"334\":1,\"456\":6}}],[\"enablewebmvc\",{\"1\":{\"98\":1,\"325\":1}}],[\"env=development\",{\"1\":{\"473\":1}}],[\"env=jsdom\",{\"1\":{\"473\":1}}],[\"environment\",{\"1\":{\"349\":1}}],[\"env\",{\"0\":{\"469\":1},\"1\":{\"54\":1,\"469\":1,\"470\":1,\"472\":2,\"473\":2}}],[\"envelope\",{\"1\":{\"25\":4,\"70\":2}}],[\"end\",{\"1\":{\"25\":1,\"104\":1,\"243\":9}}],[\"entrypoint\",{\"1\":{\"43\":1}}],[\"entry=$\",{\"1\":{\"43\":1}}],[\"entry\",{\"1\":{\"25\":2,\"43\":2}}],[\"england\",{\"1\":{\"25\":1}}],[\"english\",{\"0\":{\"488\":1},\"2\":{\"2\":1}}],[\"engine\",{\"1\":{\"25\":1}}],[\"eagle\",{\"1\":{\"25\":1}}],[\"earlysingletonobjects\",{\"1\":{\"460\":1}}],[\"earth\",{\"1\":{\"25\":3}}],[\"ear\",{\"1\":{\"25\":3}}],[\"else\",{\"1\":{\"70\":1,\"83\":2,\"104\":1,\"243\":1,\"281\":1,\"298\":1,\"325\":2,\"334\":5,\"474\":1}}],[\"elasticsearch\",{\"1\":{\"50\":5}}],[\"elk\",{\"1\":{\"37\":1}}],[\"el\",{\"1\":{\"25\":1}}],[\"element\",{\"1\":{\"472\":3,\"474\":1}}],[\"elementtype\",{\"1\":{\"79\":1,\"456\":1}}],[\"electron\",{\"0\":{\"465\":1,\"471\":1,\"472\":1,\"474\":1},\"1\":{\"466\":8,\"470\":5,\"471\":3,\"472\":6,\"473\":8,\"474\":1,\"475\":2,\"476\":4,\"477\":5,\"478\":1,\"479\":1},\"2\":{\"481\":1}}],[\"electric\",{\"1\":{\"25\":1}}],[\"elevator\",{\"1\":{\"25\":1}}],[\"elephant\",{\"1\":{\"25\":1}}],[\"elf\",{\"1\":{\"25\":3}}],[\"events\",{\"1\":{\"474\":1}}],[\"event\",{\"1\":{\"472\":3,\"474\":1}}],[\"evergreen\",{\"1\":{\"25\":1}}],[\"everything\",{\"1\":{\"21\":1}}],[\"evaluation\",{\"1\":{\"327\":1}}],[\"evil\",{\"1\":{\"25\":3}}],[\"ex\",{\"1\":{\"70\":2}}],[\"example\",{\"1\":{\"70\":2,\"476\":1}}],[\"extra\",{\"1\":{\"111\":1}}],[\"extensions\",{\"1\":{\"472\":1}}],[\"extensible\",{\"1\":{\"70\":1}}],[\"extends\",{\"1\":{\"73\":2,\"76\":1,\"148\":1,\"243\":1,\"281\":2,\"293\":1,\"334\":2,\"474\":1,\"476\":1}}],[\"extinguisher\",{\"1\":{\"25\":1}}],[\"except\",{\"1\":{\"472\":1}}],[\"exception\",{\"1\":{\"70\":2,\"76\":1,\"83\":1,\"325\":1}}],[\"exchange\",{\"1\":{\"25\":1}}],[\"exclamation\",{\"1\":{\"25\":4}}],[\"exposeproxy\",{\"1\":{\"456\":2}}],[\"exports\",{\"1\":{\"470\":1}}],[\"export\",{\"1\":{\"66\":2,\"474\":1}}],[\"explicitly\",{\"1\":{\"472\":1}}],[\"explain\",{\"0\":{\"111\":1}}],[\"exploding\",{\"1\":{\"25\":1}}],[\"expressionless\",{\"1\":{\"25\":1}}],[\"executionexception\",{\"1\":{\"243\":1}}],[\"exe\",{\"1\":{\"9\":1}}],[\"eyed\",{\"1\":{\"356\":1}}],[\"eyeglasses\",{\"1\":{\"25\":1}}],[\"eyebrow\",{\"1\":{\"25\":1}}],[\"eye\",{\"1\":{\"25\":3}}],[\"eyes\",{\"1\":{\"25\":7}}],[\"emirates\",{\"1\":{\"25\":1}}],[\"email\",{\"1\":{\"25\":1,\"154\":1}}],[\"emoji表情\",{\"0\":{\"25\":1}}],[\"empty\",{\"1\":{\"7\":2}}],[\"ebook\",{\"1\":{\"21\":1}}],[\"db\",{\"1\":{\"484\":2}}],[\"dbg\",{\"1\":{\"384\":8}}],[\"d的父结点\",{\"1\":{\"287\":1}}],[\"d结点\",{\"1\":{\"287\":1}}],[\"dd\",{\"1\":{\"98\":1,\"325\":1}}],[\"df\",{\"1\":{\"60\":3}}],[\"dp\",{\"1\":{\"59\":1}}],[\"djava\",{\"1\":{\"43\":1,\"70\":1}}],[\"djibouti\",{\"1\":{\"25\":1}}],[\"dns\",{\"1\":{\"27\":3}}],[\"dna\",{\"1\":{\"25\":1}}],[\"dharma\",{\"1\":{\"25\":1}}],[\"dvd\",{\"1\":{\"25\":1}}],[\"du\",{\"1\":{\"60\":2}}],[\"dubbo\",{\"1\":{\"28\":1,\"29\":1}}],[\"dubbo集成\",{\"1\":{\"27\":1}}],[\"dumpling\",{\"1\":{\"25\":1}}],[\"duck\",{\"1\":{\"25\":1}}],[\"druid\",{\"2\":{\"85\":1}}],[\"drum\",{\"1\":{\"25\":3}}],[\"dress\",{\"1\":{\"25\":1}}],[\"drink\",{\"1\":{\"25\":1}}],[\"dragon\",{\"1\":{\"25\":2}}],[\"drop\",{\"1\":{\"25\":1,\"371\":1}}],[\"droplet\",{\"1\":{\"25\":1}}],[\"drops\",{\"1\":{\"25\":1}}],[\"dromedary\",{\"1\":{\"25\":1}}],[\"drooling\",{\"1\":{\"25\":1}}],[\"day\",{\"1\":{\"154\":2}}],[\"dataoutputstream\",{\"1\":{\"301\":1}}],[\"datainputstream\",{\"1\":{\"301\":1}}],[\"datasourceutils\",{\"1\":{\"83\":2}}],[\"datasource\",{\"0\":{\"490\":1},\"1\":{\"83\":28}}],[\"data\",{\"1\":{\"50\":5,\"66\":6,\"328\":2,\"472\":1,\"474\":5}}],[\"date\",{\"1\":{\"25\":1}}],[\"da\",{\"1\":{\"25\":1}}],[\"david\",{\"1\":{\"25\":1}}],[\"dagger\",{\"1\":{\"25\":1}}],[\"darwin\",{\"1\":{\"472\":1}}],[\"dark\",{\"1\":{\"25\":1}}],[\"dart\",{\"1\":{\"25\":1}}],[\"dangerouslysetinnerhtml=\",{\"1\":{\"474\":1}}],[\"dango\",{\"1\":{\"25\":1}}],[\"dancers\",{\"1\":{\"25\":1}}],[\"dancer\",{\"1\":{\"25\":1}}],[\"dancing\",{\"1\":{\"25\":4}}],[\"dashboards\",{\"1\":{\"329\":1}}],[\"dash\",{\"1\":{\"25\":2}}],[\"demo\",{\"1\":{\"478\":1}}],[\"defined\",{\"1\":{\"470\":1}}],[\"defaultsuccessurl\",{\"1\":{\"325\":1}}],[\"default\",{\"1\":{\"79\":3,\"281\":6,\"325\":1,\"456\":2,\"474\":1}}],[\"deque<e>\",{\"1\":{\"293\":1}}],[\"deque\",{\"0\":{\"293\":1}}],[\"degree\",{\"1\":{\"287\":1}}],[\"debug\",{\"1\":{\"83\":6,\"427\":1}}],[\"dependencies\",{\"1\":{\"471\":1}}],[\"depends\",{\"1\":{\"328\":1}}],[\"deprecated\",{\"1\":{\"319\":1}}],[\"depth\",{\"1\":{\"54\":1,\"287\":1}}],[\"deploy\",{\"1\":{\"54\":3}}],[\"departure\",{\"1\":{\"25\":1}}],[\"department\",{\"1\":{\"25\":1}}],[\"devtools\",{\"1\":{\"472\":1}}],[\"development\",{\"1\":{\"472\":1}}],[\"devdependencies\",{\"1\":{\"471\":1}}],[\"dev\",{\"1\":{\"43\":1,\"51\":1}}],[\"denmark\",{\"1\":{\"25\":1}}],[\"de\",{\"1\":{\"25\":2}}],[\"derelict\",{\"1\":{\"25\":1}}],[\"description\",{\"1\":{\"70\":2,\"79\":1}}],[\"desc\",{\"1\":{\"60\":8}}],[\"desert\",{\"1\":{\"25\":2}}],[\"desktop\",{\"0\":{\"64\":1},\"1\":{\"25\":1,\"66\":12}}],[\"desk\",{\"1\":{\"25\":1}}],[\"declaredfields\",{\"1\":{\"334\":4}}],[\"decorative\",{\"1\":{\"25\":1}}],[\"decoration\",{\"1\":{\"25\":1}}],[\"deciduous\",{\"1\":{\"25\":1}}],[\"deer\",{\"1\":{\"25\":1}}],[\"detective\",{\"1\":{\"25\":3}}],[\"deaf\",{\"1\":{\"25\":3}}],[\"delete\",{\"1\":{\"7\":2,\"384\":1}}],[\"dictionary\",{\"1\":{\"483\":1}}],[\"dialog\",{\"1\":{\"466\":2,\"472\":4,\"474\":2}}],[\"diamond\",{\"1\":{\"25\":5}}],[\"diamonds\",{\"1\":{\"25\":1}}],[\"directories\",{\"1\":{\"476\":1}}],[\"direction\",{\"1\":{\"474\":1}}],[\"direct=1\",{\"1\":{\"50\":5,\"51\":1}}],[\"dirname\",{\"1\":{\"43\":1,\"472\":2}}],[\"dir=$\",{\"1\":{\"43\":1}}],[\"diverge\",{\"1\":{\"357\":1,\"367\":1}}],[\"divoire\",{\"1\":{\"25\":1}}],[\"division\",{\"1\":{\"25\":1}}],[\"dividers\",{\"1\":{\"25\":1}}],[\"diving\",{\"1\":{\"25\":1}}],[\"diya\",{\"1\":{\"25\":1}}],[\"diego\",{\"1\":{\"25\":1}}],[\"die\",{\"1\":{\"25\":1}}],[\"display>\",{\"1\":{\"427\":1}}],[\"display\",{\"1\":{\"349\":1,\"427\":2,\"474\":1}}],[\"displayhandleraspect\",{\"1\":{\"334\":1}}],[\"disable\",{\"1\":{\"325\":1}}],[\"disabledalgorithms=\",{\"1\":{\"133\":1,\"134\":1}}],[\"disappointed\",{\"1\":{\"25\":2}}],[\"dist\",{\"1\":{\"54\":1,\"474\":1}}],[\"dish\",{\"1\":{\"25\":1}}],[\"disk\",{\"1\":{\"25\":1}}],[\"discovery\",{\"1\":{\"70\":1}}],[\"disc\",{\"1\":{\"25\":1}}],[\"disguised\",{\"1\":{\"25\":1}}],[\"dizzy\",{\"1\":{\"25\":2}}],[\"diffusion\",{\"1\":{\"17\":1}}],[\"domcontentloaded\",{\"1\":{\"472\":1}}],[\"dominican\",{\"1\":{\"25\":1}}],[\"dominica\",{\"1\":{\"25\":1}}],[\"doreleaseconnection\",{\"1\":{\"83\":2}}],[\"does\",{\"1\":{\"70\":1}}],[\"documentationredis教程\",{\"1\":{\"484\":1}}],[\"document\",{\"1\":{\"472\":1}}],[\"documented\",{\"1\":{\"320\":1,\"456\":1}}],[\"dock\",{\"1\":{\"472\":1}}],[\"dockerfile\",{\"0\":{\"134\":1}}],[\"docker\",{\"0\":{\"42\":1,\"64\":1,\"326\":1,\"328\":1},\"1\":{\"16\":2,\"38\":1,\"44\":2,\"66\":12},\"2\":{\"46\":1,\"68\":1}}],[\"docloseconnection\",{\"1\":{\"83\":2}}],[\"docsify\",{\"0\":{\"86\":1}}],[\"docs\",{\"1\":{\"54\":2,\"70\":6}}],[\"doc\",{\"1\":{\"54\":2}}],[\"dot\",{\"1\":{\"25\":1}}],[\"double\",{\"1\":{\"25\":2}}],[\"doughnut\",{\"1\":{\"25\":1}}],[\"do\",{\"1\":{\"25\":1}}],[\"door\",{\"1\":{\"25\":1}}],[\"dollar\",{\"1\":{\"25\":2}}],[\"dolls\",{\"1\":{\"25\":2}}],[\"dolphin\",{\"1\":{\"25\":1}}],[\"dodo\",{\"1\":{\"25\":1}}],[\"dove\",{\"1\":{\"25\":1}}],[\"dogetconnection\",{\"1\":{\"83\":2}}],[\"dog2\",{\"1\":{\"25\":1}}],[\"dog\",{\"1\":{\"25\":3}}],[\"download\",{\"1\":{\"484\":1}}],[\"downwards\",{\"1\":{\"25\":1}}],[\"down\",{\"1\":{\"25\":8}}],[\"d\",{\"1\":{\"7\":4,\"43\":1,\"60\":1,\"66\":2,\"344\":3,\"469\":1,\"471\":2,\"476\":1}}],[\"翻唱\",{\"0\":{\"1\":1}}],[\"s2\",{\"1\":{\"389\":2}}],[\"s1\",{\"1\":{\"389\":2}}],[\"src\",{\"1\":{\"474\":2,\"476\":1}}],[\"srcvalue\",{\"1\":{\"334\":10}}],[\"sri\",{\"1\":{\"25\":1}}],[\"sslv3\",{\"1\":{\"134\":1}}],[\"sss\",{\"1\":{\"98\":1,\"325\":1}}],[\"ss\",{\"1\":{\"98\":1,\"325\":1}}],[\"ssh\",{\"1\":{\"54\":2}}],[\"sql\",{\"1\":{\"115\":1,\"116\":1},\"2\":{\"105\":1,\"106\":1}}],[\"sqlexception\",{\"1\":{\"83\":5}}],[\"square\",{\"1\":{\"25\":17}}],[\"squared\",{\"1\":{\"25\":1}}],[\"squid\",{\"1\":{\"25\":1}}],[\"sdb1\",{\"1\":{\"51\":1}}],[\"sda\",{\"1\":{\"50\":5}}],[\"svalbard\",{\"1\":{\"25\":1}}],[\"sync\",{\"1\":{\"236\":1}}],[\"synchronizedmap\",{\"1\":{\"244\":1}}],[\"synchronized一直被称为重量级锁\",{\"1\":{\"224\":1}}],[\"synchronized\",{\"1\":{\"157\":1,\"244\":2,\"307\":1,\"309\":2}}],[\"synchronization\",{\"1\":{\"83\":1}}],[\"synagogue\",{\"1\":{\"25\":1}}],[\"system\",{\"1\":{\"70\":6,\"111\":1,\"235\":4,\"240\":1,\"242\":1,\"243\":2,\"279\":1,\"281\":13,\"298\":1,\"299\":1,\"305\":1,\"306\":12,\"309\":4,\"312\":1,\"327\":3}}],[\"syria\",{\"1\":{\"25\":1}}],[\"syringe\",{\"1\":{\"25\":1}}],[\"symbols\",{\"1\":{\"25\":1}}],[\"symbol\",{\"1\":{\"25\":5}}],[\"some\",{\"1\":{\"412\":2,\"416\":2,\"427\":1,\"441\":1,\"472\":1}}],[\"somalia\",{\"1\":{\"25\":1}}],[\"soft\",{\"1\":{\"270\":1}}],[\"softball\",{\"1\":{\"25\":1}}],[\"so\",{\"1\":{\"70\":1}}],[\"solomon\",{\"1\":{\"25\":1}}],[\"sos\",{\"1\":{\"25\":1}}],[\"southern\",{\"1\":{\"25\":1}}],[\"south\",{\"1\":{\"25\":4}}],[\"sourcemap\",{\"1\":{\"472\":1}}],[\"source\",{\"1\":{\"25\":1,\"43\":1,\"456\":1}}],[\"sound\",{\"1\":{\"25\":2}}],[\"soon\",{\"1\":{\"25\":1}}],[\"soaphandler<soapmessagecontext>\",{\"1\":{\"70\":1}}],[\"soaphandler\",{\"1\":{\"70\":1}}],[\"soapheader\",{\"1\":{\"70\":2}}],[\"soapmessagecontext\",{\"1\":{\"70\":3}}],[\"soapmessage\",{\"1\":{\"70\":3}}],[\"soapenvelope\",{\"1\":{\"70\":2}}],[\"soapelement\",{\"1\":{\"70\":5}}],[\"soap是xml文档形式的调用方法的规范\",{\"1\":{\"70\":1}}],[\"soap\",{\"1\":{\"25\":1,\"70\":10}}],[\"socks\",{\"1\":{\"25\":1}}],[\"soccer\",{\"1\":{\"25\":1}}],[\"sob\",{\"1\":{\"25\":1}}],[\"smartdatasource\",{\"1\":{\"83\":2}}],[\"small\",{\"1\":{\"25\":12}}],[\"smc\",{\"1\":{\"70\":5}}],[\"smoking\",{\"1\":{\"25\":2}}],[\"smirk\",{\"1\":{\"25\":2}}],[\"smiling\",{\"1\":{\"25\":5}}],[\"smile\",{\"1\":{\"25\":3}}],[\"smiley\",{\"1\":{\"25\":2}}],[\"size\",{\"1\":{\"384\":1,\"474\":1}}],[\"size=8192\",{\"1\":{\"54\":1}}],[\"size=5g\",{\"1\":{\"51\":1}}],[\"size=200g\",{\"1\":{\"50\":5}}],[\"sibling\",{\"1\":{\"287\":1}}],[\"simple\",{\"1\":{\"70\":1}}],[\"since\",{\"1\":{\"94\":2,\"99\":1,\"154\":1}}],[\"sint\",{\"1\":{\"25\":1}}],[\"singletonfactories\",{\"1\":{\"460\":1}}],[\"singletonobjects\",{\"1\":{\"460\":1}}],[\"singleton\",{\"1\":{\"157\":11,\"455\":1}}],[\"singapore\",{\"1\":{\"25\":1}}],[\"singer\",{\"1\":{\"25\":3}}],[\"sierra\",{\"1\":{\"25\":1}}],[\"six\",{\"1\":{\"25\":2,\"389\":1}}],[\"signature\",{\"1\":{\"334\":5}}],[\"signal\",{\"1\":{\"25\":1}}],[\"sign\",{\"1\":{\"25\":8}}],[\"side\",{\"1\":{\"25\":1}}],[\"silhouette\",{\"1\":{\"25\":2}}],[\"swap\",{\"1\":{\"225\":1}}],[\"swarm\",{\"1\":{\"38\":1}}],[\"swaziland\",{\"1\":{\"25\":1}}],[\"swan\",{\"1\":{\"25\":1}}],[\"switzerland\",{\"1\":{\"25\":1}}],[\"swim\",{\"1\":{\"25\":1}}],[\"swimsuit\",{\"1\":{\"25\":1}}],[\"swimming\",{\"1\":{\"25\":2}}],[\"swimmer\",{\"1\":{\"25\":1}}],[\"swords\",{\"1\":{\"25\":1}}],[\"sweden\",{\"1\":{\"25\":1}}],[\"sweet\",{\"1\":{\"25\":1}}],[\"sweat\",{\"1\":{\"25\":4}}],[\"skywalking\",{\"1\":{\"33\":1}}],[\"ski\",{\"1\":{\"25\":1}}],[\"skier\",{\"1\":{\"25\":1}}],[\"skate\",{\"1\":{\"25\":2}}],[\"skateboard\",{\"1\":{\"25\":1}}],[\"sku\",{\"1\":{\"244\":1}}],[\"skunk\",{\"1\":{\"25\":1}}],[\"skull\",{\"1\":{\"25\":2}}],[\"schema\",{\"1\":{\"104\":4}}],[\"schedulerfactory\",{\"1\":{\"76\":6}}],[\"schedulerfactorybean\",{\"1\":{\"76\":3}}],[\"school\",{\"1\":{\"25\":2}}],[\"scale\",{\"1\":{\"25\":1}}],[\"scarf\",{\"1\":{\"25\":1}}],[\"scissors\",{\"1\":{\"25\":1}}],[\"scientist\",{\"1\":{\"25\":3}}],[\"scripts\",{\"1\":{\"473\":2}}],[\"scrape\",{\"1\":{\"327\":2}}],[\"screwdriver\",{\"1\":{\"25\":1}}],[\"scream\",{\"1\":{\"25\":2}}],[\"scroll\",{\"1\":{\"25\":1}}],[\"scene\",{\"1\":{\"25\":1}}],[\"scope\",{\"1\":{\"346\":1}}],[\"scotland\",{\"1\":{\"25\":1}}],[\"scorpius\",{\"1\":{\"25\":1}}],[\"scorpion\",{\"1\":{\"25\":1}}],[\"score\",{\"1\":{\"25\":1,\"281\":5}}],[\"scooter\",{\"1\":{\"25\":2}}],[\"separate\",{\"1\":{\"472\":1}}],[\"se\",{\"1\":{\"321\":1}}],[\"sequence\",{\"1\":{\"279\":1}}],[\"sed\",{\"1\":{\"134\":2}}],[\"sever\",{\"1\":{\"92\":2}}],[\"seven\",{\"1\":{\"25\":1}}],[\"segmentfault\",{\"1\":{\"73\":1}}],[\"set方法\",{\"1\":{\"455\":1}}],[\"setfieldvalue\",{\"1\":{\"334\":1}}],[\"setfastjsonconfig\",{\"1\":{\"98\":1,\"325\":1}}],[\"set<field>\",{\"1\":{\"334\":2}}],[\"setpriority\",{\"1\":{\"305\":1}}],[\"setvitalstatistics\",{\"1\":{\"154\":2}}],[\"setgift\",{\"1\":{\"154\":1}}],[\"setemail\",{\"1\":{\"154\":2}}],[\"setmobile\",{\"1\":{\"154\":2}}],[\"setbirthday\",{\"1\":{\"154\":2}}],[\"setbust\",{\"1\":{\"154\":1}}],[\"sethobby\",{\"1\":{\"154\":1}}],[\"sethaircolor\",{\"1\":{\"154\":2}}],[\"sethandlerresolver\",{\"1\":{\"70\":1}}],[\"sethips\",{\"1\":{\"154\":1}}],[\"setwaist\",{\"1\":{\"154\":1}}],[\"setname\",{\"1\":{\"154\":2}}],[\"setter依赖注入\",{\"1\":{\"455\":1}}],[\"setter\",{\"1\":{\"154\":2,\"455\":1}}],[\"setcharset\",{\"1\":{\"98\":1,\"325\":1}}],[\"setconnection\",{\"1\":{\"83\":2}}],[\"setdaemon\",{\"1\":{\"312\":1}}],[\"setdateformat\",{\"1\":{\"98\":1,\"325\":1}}],[\"setdefaultcharset\",{\"1\":{\"98\":1,\"325\":1}}],[\"setstate\",{\"1\":{\"474\":1}}],[\"setstartupdelay\",{\"1\":{\"76\":1}}],[\"setsupportedmediatypes\",{\"1\":{\"98\":1,\"325\":1}}],[\"setserializerfeatures\",{\"1\":{\"98\":1,\"325\":1}}],[\"setsafemode\",{\"1\":{\"98\":1,\"325\":1}}],[\"setsynchronizedwithtransaction\",{\"1\":{\"83\":1}}],[\"setjobfactory\",{\"1\":{\"76\":1}}],[\"setquartzproperties\",{\"1\":{\"76\":1}}],[\"setoverwriteexistingjobs\",{\"1\":{\"76\":1}}],[\"setaddress\",{\"1\":{\"154\":2}}],[\"setage\",{\"1\":{\"154\":2}}],[\"setallowcredentials\",{\"1\":{\"73\":1}}],[\"setattribute\",{\"1\":{\"70\":1}}],[\"set\",{\"0\":{\"294\":1},\"1\":{\"60\":1,\"70\":2,\"173\":1,\"466\":1,\"483\":1}}],[\"setup\",{\"1\":{\"54\":2}}],[\"section>\",{\"1\":{\"474\":1}}],[\"seconds\",{\"1\":{\"235\":1}}],[\"secext\",{\"1\":{\"70\":2}}],[\"securityexception\",{\"1\":{\"334\":4}}],[\"securityservice\",{\"1\":{\"334\":2}}],[\"security认证的用户名及密码\",{\"1\":{\"327\":1}}],[\"securityfilterchain\",{\"1\":{\"325\":1}}],[\"security>\",{\"1\":{\"70\":1}}],[\"security\",{\"1\":{\"34\":1,\"43\":1,\"70\":4,\"133\":2,\"134\":4,\"325\":1}}],[\"secrets\",{\"1\":{\"54\":1}}],[\"secret\",{\"1\":{\"25\":1,\"54\":3}}],[\"send\",{\"1\":{\"472\":1,\"474\":1}}],[\"sender\",{\"1\":{\"472\":1}}],[\"sentinel\",{\"1\":{\"29\":5}}],[\"sentienl\",{\"1\":{\"29\":2}}],[\"senegal\",{\"1\":{\"25\":1}}],[\"self\",{\"1\":{\"418\":3,\"419\":3,\"420\":6,\"426\":7,\"445\":3}}],[\"self表示借用当前的circle结构体\",{\"1\":{\"418\":1}}],[\"selfie\",{\"1\":{\"25\":1}}],[\"select\",{\"1\":{\"104\":3,\"111\":1}}],[\"selector\",{\"1\":{\"27\":1,\"472\":2}}],[\"seychelles\",{\"1\":{\"25\":1}}],[\"serializable\",{\"1\":{\"293\":1,\"334\":1}}],[\"serializerfeature\",{\"1\":{\"98\":5,\"325\":5}}],[\"servlet\",{\"1\":{\"29\":1}}],[\"server\",{\"1\":{\"27\":1,\"43\":1,\"92\":3,\"93\":1,\"483\":1}}],[\"services\",{\"1\":{\"70\":1,\"328\":1}}],[\"service也叫xml\",{\"1\":{\"70\":1}}],[\"service\",{\"1\":{\"25\":1,\"70\":7}}],[\"serbia\",{\"1\":{\"25\":1}}],[\"sewing\",{\"1\":{\"25\":1}}],[\"searchtype\",{\"1\":{\"334\":5}}],[\"seata\",{\"1\":{\"35\":1}}],[\"seat\",{\"1\":{\"25\":1}}],[\"seal\",{\"1\":{\"25\":1}}],[\"seedling\",{\"1\":{\"25\":1}}],[\"see\",{\"1\":{\"25\":1,\"94\":1}}],[\"safevarargs\",{\"1\":{\"319\":1}}],[\"safety\",{\"1\":{\"25\":2}}],[\"sao\",{\"1\":{\"25\":1}}],[\"sahara\",{\"1\":{\"25\":1}}],[\"samoa\",{\"1\":{\"25\":2}}],[\"sa\",{\"1\":{\"25\":1}}],[\"sagittarius\",{\"1\":{\"25\":1}}],[\"saw\",{\"1\":{\"25\":1}}],[\"saxophone\",{\"1\":{\"25\":1}}],[\"sari\",{\"1\":{\"25\":1}}],[\"sash\",{\"1\":{\"25\":1}}],[\"sassy\",{\"1\":{\"25\":2}}],[\"saturating\",{\"1\":{\"348\":1}}],[\"satchel\",{\"1\":{\"25\":1}}],[\"satellite\",{\"1\":{\"25\":2}}],[\"satisfied\",{\"1\":{\"25\":1}}],[\"sailboat\",{\"1\":{\"25\":1}}],[\"sake\",{\"1\":{\"25\":1}}],[\"salvador\",{\"1\":{\"25\":1}}],[\"salt\",{\"1\":{\"25\":1}}],[\"salad\",{\"1\":{\"25\":1}}],[\"salute\",{\"1\":{\"25\":1}}],[\"san\",{\"1\":{\"25\":1}}],[\"sandal\",{\"1\":{\"25\":2}}],[\"sand\",{\"1\":{\"25\":1}}],[\"sandwich\",{\"1\":{\"25\":2}}],[\"santa\",{\"1\":{\"25\":1}}],[\"saudi\",{\"1\":{\"25\":1}}],[\"saucer\",{\"1\":{\"25\":1}}],[\"sauropod\",{\"1\":{\"25\":1}}],[\"sauna\",{\"1\":{\"25\":3}}],[\"spin\",{\"1\":{\"474\":2}}],[\"spi\",{\"1\":{\"29\":1}}],[\"spiral\",{\"1\":{\"25\":2}}],[\"spider\",{\"1\":{\"25\":2}}],[\"spoked\",{\"1\":{\"25\":1}}],[\"sponge\",{\"1\":{\"25\":1}}],[\"sports\",{\"1\":{\"25\":1}}],[\"spoon\",{\"1\":{\"25\":2}}],[\"splayed\",{\"1\":{\"25\":1}}],[\"specific\",{\"1\":{\"472\":1}}],[\"specified\",{\"1\":{\"83\":1}}],[\"speedboat\",{\"1\":{\"25\":1}}],[\"speech\",{\"1\":{\"25\":3}}],[\"speaker\",{\"1\":{\"25\":1}}],[\"speaking\",{\"1\":{\"25\":1}}],[\"speak\",{\"1\":{\"25\":1}}],[\"spatial\",{\"1\":{\"109\":1}}],[\"spades\",{\"1\":{\"25\":1}}],[\"sparkle\",{\"1\":{\"25\":1}}],[\"sparkles\",{\"1\":{\"25\":1}}],[\"sparkler\",{\"1\":{\"25\":1}}],[\"sparkling\",{\"1\":{\"25\":1}}],[\"spaghetti\",{\"1\":{\"25\":1}}],[\"space\",{\"1\":{\"25\":1,\"54\":1}}],[\"springel\",{\"0\":{\"457\":1}}],[\"spring能够从bean对象的创建一直管理到对象的销毁\",{\"1\":{\"455\":1}}],[\"spring无法顾及其完整生命周期\",{\"1\":{\"455\":1}}],[\"springboot\",{\"0\":{\"462\":1},\"1\":{\"327\":1}}],[\"springmvc\",{\"1\":{\"73\":1}}],[\"springmvc开启cors支持\",{\"1\":{\"73\":1}}],[\"spring推荐\",{\"1\":{\"30\":1}}],[\"spring公司自己开发的\",{\"1\":{\"28\":1}}],[\"springcloud集成\",{\"1\":{\"27\":1}}],[\"spring\",{\"0\":{\"43\":1,\"73\":1,\"97\":1,\"324\":1,\"325\":1,\"454\":1,\"456\":1,\"494\":1},\"1\":{\"11\":1,\"27\":2,\"29\":1,\"31\":1,\"34\":1,\"36\":1,\"38\":1,\"325\":1,\"456\":1},\"2\":{\"75\":1,\"78\":1,\"81\":1,\"85\":1,\"331\":1,\"464\":1}}],[\"summarize\",{\"1\":{\"426\":4}}],[\"summary\",{\"1\":{\"426\":4,\"427\":2}}],[\"sum\",{\"1\":{\"399\":3}}],[\"sumatra\",{\"1\":{\"21\":1}}],[\"subtree\",{\"1\":{\"287\":1}}],[\"subtask2\",{\"1\":{\"243\":3}}],[\"subtask1\",{\"1\":{\"243\":3}}],[\"subtask\",{\"1\":{\"243\":7}}],[\"submit\",{\"1\":{\"243\":1}}],[\"suppresswarnings\",{\"1\":{\"319\":1}}],[\"supplier\",{\"1\":{\"281\":2}}],[\"supplier<student>\",{\"1\":{\"281\":1}}],[\"supplier<t>\",{\"1\":{\"154\":3,\"281\":1}}],[\"supplier供给型函数式接口\",{\"1\":{\"281\":1}}],[\"supportedmediatypes\",{\"1\":{\"98\":3,\"325\":3}}],[\"supported\",{\"1\":{\"70\":3}}],[\"super\",{\"1\":{\"76\":1,\"281\":5,\"474\":1}}],[\"supervillain\",{\"1\":{\"25\":3}}],[\"superhero\",{\"1\":{\"25\":3}}],[\"suriname\",{\"1\":{\"25\":1}}],[\"surfing\",{\"1\":{\"25\":2}}],[\"surfer\",{\"1\":{\"25\":1}}],[\"sudan\",{\"1\":{\"25\":2}}],[\"suspension\",{\"1\":{\"25\":1}}],[\"sushi\",{\"1\":{\"25\":1}}],[\"sun\",{\"1\":{\"25\":4}}],[\"sunny\",{\"1\":{\"25\":2}}],[\"sunset\",{\"1\":{\"25\":1}}],[\"sunrise\",{\"1\":{\"25\":3}}],[\"sunflower\",{\"1\":{\"25\":1}}],[\"sunglasses\",{\"1\":{\"25\":2}}],[\"suit\",{\"1\":{\"25\":1}}],[\"snowman\",{\"1\":{\"25\":2}}],[\"snowflake\",{\"1\":{\"25\":1}}],[\"snow\",{\"1\":{\"25\":3}}],[\"snowboarder\",{\"1\":{\"25\":1}}],[\"snail\",{\"1\":{\"25\":1}}],[\"snake\",{\"1\":{\"25\":1,\"364\":1}}],[\"sneezing\",{\"1\":{\"25\":1}}],[\"snipaste\",{\"1\":{\"21\":1}}],[\"slovakia\",{\"1\":{\"25\":1}}],[\"slovenia\",{\"1\":{\"25\":1}}],[\"slot\",{\"1\":{\"25\":1}}],[\"sloth\",{\"1\":{\"25\":1}}],[\"slice\",{\"1\":{\"384\":1}}],[\"slider\",{\"1\":{\"25\":1}}],[\"slightly\",{\"1\":{\"25\":2}}],[\"sleuth\",{\"1\":{\"33\":1}}],[\"sled\",{\"1\":{\"25\":1}}],[\"sleep\",{\"1\":{\"235\":1,\"309\":1,\"312\":2}}],[\"sleeping\",{\"1\":{\"25\":2}}],[\"sleepy\",{\"1\":{\"25\":1}}],[\"shutdown\",{\"1\":{\"60\":4}}],[\"shushing\",{\"1\":{\"25\":1}}],[\"sh的执行权限\",{\"1\":{\"60\":1}}],[\"sh\",{\"1\":{\"60\":1}}],[\"showopendialog\",{\"1\":{\"472\":1}}],[\"shower\",{\"1\":{\"25\":1}}],[\"shoes\",{\"1\":{\"25\":1}}],[\"shoe\",{\"1\":{\"25\":4}}],[\"shopping\",{\"1\":{\"25\":2}}],[\"shorts\",{\"1\":{\"25\":1}}],[\"shouldclose\",{\"1\":{\"83\":1}}],[\"should\",{\"1\":{\"20\":1}}],[\"shield\",{\"1\":{\"25\":1}}],[\"shirt\",{\"1\":{\"25\":2}}],[\"ship\",{\"1\":{\"25\":2}}],[\"shinto\",{\"1\":{\"25\":1}}],[\"shit\",{\"1\":{\"25\":1}}],[\"shrine\",{\"1\":{\"25\":1}}],[\"shrimp\",{\"1\":{\"25\":2}}],[\"shrugging\",{\"1\":{\"25\":2}}],[\"shrug\",{\"1\":{\"25\":1}}],[\"shadowing\",{\"0\":{\"346\":1}}],[\"share\",{\"1\":{\"50\":5}}],[\"shark\",{\"1\":{\"25\":1}}],[\"shape\",{\"1\":{\"25\":1}}],[\"shaved\",{\"1\":{\"25\":1}}],[\"shallow\",{\"1\":{\"25\":1}}],[\"shamrock\",{\"1\":{\"25\":1}}],[\"shell\",{\"1\":{\"25\":1}}],[\"sheep\",{\"1\":{\"25\":1}}],[\"std\",{\"1\":{\"384\":2,\"418\":1,\"440\":1}}],[\"st\",{\"1\":{\"25\":7}}],[\"stone\",{\"1\":{\"25\":1}}],[\"stopped\",{\"1\":{\"99\":1}}],[\"stopwatch\",{\"1\":{\"25\":1}}],[\"stop\",{\"1\":{\"25\":2}}],[\"store\",{\"1\":{\"25\":2}}],[\"steps\",{\"1\":{\"54\":1}}],[\"stethoscope\",{\"1\":{\"25\":1}}],[\"steam\",{\"1\":{\"25\":1}}],[\"stew\",{\"1\":{\"25\":1}}],[\"struct\",{\"1\":{\"344\":4,\"357\":1,\"391\":1,\"418\":1,\"426\":2}}],[\"struck\",{\"1\":{\"25\":1}}],[\"str\",{\"1\":{\"281\":6,\"381\":1,\"384\":6}}],[\"strongly\",{\"1\":{\"270\":1}}],[\"strict\",{\"1\":{\"472\":1}}],[\"stringbuilder\",{\"1\":{\"325\":2}}],[\"string>\",{\"1\":{\"154\":2,\"281\":2,\"334\":1}}],[\"stringconverter\",{\"1\":{\"98\":2,\"325\":2}}],[\"stringhttpmessageconverter\",{\"1\":{\"98\":4,\"325\":2}}],[\"string\",{\"1\":{\"70\":1,\"79\":3,\"98\":2,\"154\":11,\"157\":1,\"235\":1,\"240\":3,\"243\":1,\"279\":1,\"281\":18,\"298\":1,\"299\":2,\"305\":1,\"306\":2,\"309\":1,\"312\":1,\"325\":5,\"333\":1,\"334\":1,\"381\":1,\"382\":2,\"384\":41,\"387\":1,\"389\":3,\"419\":1,\"426\":8,\"440\":3,\"472\":2,\"474\":1,\"483\":1}}],[\"strip\",{\"1\":{\"25\":1}}],[\"strength\",{\"1\":{\"25\":1}}],[\"straight\",{\"1\":{\"25\":1}}],[\"straw\",{\"1\":{\"25\":1}}],[\"strawberry\",{\"1\":{\"25\":1}}],[\"stu\",{\"1\":{\"281\":4}}],[\"studio\",{\"1\":{\"25\":1}}],[\"student+\",{\"1\":{\"281\":2}}],[\"student\",{\"1\":{\"25\":3,\"281\":37}}],[\"stuffed\",{\"1\":{\"25\":1}}],[\"stuck\",{\"1\":{\"25\":3}}],[\"stay\",{\"1\":{\"472\":1}}],[\"state>\",{\"1\":{\"474\":1}}],[\"state\",{\"1\":{\"474\":3}}],[\"static\",{\"1\":{\"43\":6,\"83\":5,\"154\":3,\"157\":6,\"235\":1,\"240\":1,\"243\":2,\"279\":1,\"281\":17,\"298\":1,\"299\":2,\"305\":1,\"306\":2,\"309\":1,\"312\":1,\"327\":2,\"334\":2,\"446\":1}}],[\"station\",{\"1\":{\"25\":1}}],[\"statue\",{\"1\":{\"25\":1}}],[\"stadium\",{\"1\":{\"25\":1}}],[\"standing\",{\"1\":{\"25\":3}}],[\"starturl\",{\"1\":{\"472\":2}}],[\"start\",{\"1\":{\"235\":1,\"243\":9,\"305\":1,\"306\":4,\"309\":2,\"312\":1,\"325\":1,\"473\":4,\"475\":2,\"477\":1}}],[\"star2\",{\"1\":{\"25\":1}}],[\"stars\",{\"1\":{\"25\":2}}],[\"star\",{\"1\":{\"25\":6}}],[\"stable\",{\"1\":{\"17\":1}}],[\"s\",{\"0\":{\"0\":1},\"1\":{\"20\":1,\"60\":2,\"70\":2,\"281\":2,\"325\":2,\"384\":10,\"389\":3,\"472\":3}}]],\"serializationVersion\":2}}")).map(([e,t])=>[e,zt(t,{fields:["h","t","c"],storeFields:["h","t","c"]})]));self.onmessage=({data:{type:e="all",query:t,locale:s,options:n,id:o}})=>{const u=bt[s];e==="suggest"?self.postMessage([e,o,tt(t,u,n)]):e==="search"?self.postMessage([e,o,Z(t,u,n)]):self.postMessage({suggestions:[e,o,tt(t,u,n)],results:[e,o,Z(t,u,n)]})};
//# sourceMappingURL=index.js.map
